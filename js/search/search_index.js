var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.536,1,2.504]],["body/controllers/AppController.html",[0,2.263,1,3.688,2,1.631,3,0.239,4,0.267,5,0.239,6,3.498,7,0.453,8,1.625,9,4.815,10,4.815,11,2.136,12,0.021,13,4.091,14,0.781,15,4.091,16,1.625,17,4.091,18,4.091,19,0.763,20,4.091,21,1.002,22,3.247,23,3.498,24,4.091,25,4.091,26,4.091,27,3.108,28,3.108,29,4.091,30,0.296,31,0.208,32,1.833,33,1.949,34,4.091,35,4.091,36,2.583,37,2.583,38,4.091,39,1.625,40,4.091,41,4.091,42,3.108,43,4.091,44,4.091,45,0.015,46,0.015]],["title/modules/AppModule.html",[47,1.297,48,2.504]],["body/modules/AppModule.html",[1,2.96,2,1.402,3,0.133,4,0.149,5,0.133,12,0.021,19,0.861,21,0.557,22,3.008,23,1.944,27,1.727,28,1.727,30,0.165,31,0.116,36,1.436,42,1.727,45,0.01,46,0.01,47,1.534,48,4.641,49,1.019,50,1.083,51,1.236,52,1.236,53,1.083,54,2.338,55,1.236,56,1.944,57,1.944,58,1.944,59,3.232,60,3.495,61,3.495,62,3.008,63,3.495,64,1.912,65,1.236,66,1.155,67,1.727,68,2.672,69,2.273,70,1.328,71,1.944,72,3.007,73,2.273,74,2.273,75,1.328,76,3.516,77,1.944,78,2.273,79,2.273,80,2.273,81,3.332,82,3.516,83,3.516,84,1.944,85,1.727,86,3.516,87,2.273,88,1.944,89,2.273,90,1.912,91,1.944,92,2.273,93,1.727,94,2.273,95,2.273,96,3.305,97,1.944,98,4.204,99,2.672,100,1.944,101,3.007,102,1.727,103,2.273,104,4.3,105,1.944,106,3.007,107,3.007,108,1.944,109,2.273,110,1.727,111,1.944,112,2.273,113,1.727,114,2.273,115,2.273,116,3.516,117,2.845,118,1.944,119,2.273,120,2.273,121,2.273,122,2.273,123,2.273,124,2.273,125,2.273,126,2.273,127,2.273,128,2.273,129,2.273,130,2.273,131,3.007,132,2.273,133,2.273,134,1.727,135,2.421,136,2.421,137,1.944,138,1.944,139,2.273,140,2.273,141,2.273,142,2.273,143,2.221,144,2.273,145,1.944,146,2.273,147,2.273,148,1.944,149,2.273,150,1.155,151,3.007,152,3.516,153,2.273]],["title/injectables/AppService.html",[22,1.977,154,1.103]],["body/injectables/AppService.html",[3,0.195,4,0.218,5,0.195,7,0.37,8,1.416,9,4.428,10,4.428,12,0.021,14,0.785,16,1.416,19,0.596,21,0.817,22,2.537,30,0.242,31,0.238,32,1.496,33,1.59,39,1.416,45,0.013,46,0.013,117,1.814,143,2.108,154,1.416,155,1.696,156,2.535,157,2.565,158,1.971,159,1.95,160,2.197,161,3.337,162,1.012,163,0.96,164,0.426,165,0.774,166,2.146,167,3.337,168,1.95,169,3.337,170,3.213,171,1.664,172,1.696,173,3.705,174,4.602,175,3.991,176,2.535,177,2.535,178,2.854,179,2.535,180,3.213,181,2.854,182,2.535,183,3.991,184,2.537,185,1.696,186,2.854,187,2.854,188,2.854,189,2.854,190,2.854,191,2.854,192,2.535,193,3.213,194,3.546,195,2.535,196,3.991,197,2.854,198,2.854,199,2.854,200,2.535]],["title/controllers/AuthController.html",[0,1.536,201,2.297]],["body/controllers/AuthController.html",[0,1.144,2,1.08,3,0.158,4,0.177,5,0.158,7,0.3,8,1.218,11,1.601,12,0.021,14,0.585,16,1.218,19,0.722,21,0.663,30,0.196,31,0.138,32,1.214,37,1.71,39,0.821,42,3.05,45,0.011,46,0.011,70,1.582,117,3.33,131,3.433,136,3.89,138,4.091,157,2.28,162,1.218,163,1.154,164,0.513,165,0.932,185,1.376,201,2.535,202,2.316,203,1.864,204,2.316,205,3.021,206,2.535,207,2.057,208,3.579,209,3.643,210,2.708,211,2.708,212,3.568,213,2.057,214,4.014,215,2.708,216,1.864,217,2.708,218,2.316,219,2.057,220,2.601,221,2.057,222,1.472,223,2.764,224,2.708,225,1.582,226,1.864,227,2.708,228,2.708,229,2.708,230,2.708,231,2.708,232,1.913,233,2.316,234,2.708,235,2.708,236,2.316,237,4.091,238,4.014,239,4.293,240,2.708,241,2.316,242,2.316,243,4.014,244,4.014,245,2.316,246,2.316,247,4.014,248,2.708,249,2.708,250,2.708,251,2.708,252,4.014,253,2.708,254,2.708,255,2.708,256,2.316,257,4.014,258,2.708,259,2.708,260,2.708,261,4.014,262,2.316,263,2.708,264,2.708,265,4.014,266,2.708,267,2.057,268,2.708,269,2.708,270,2.708,271,2.708,272,2.708,273,2.708,274,2.708,275,2.708,276,2.316,277,2.708]],["title/classes/AuthDto.html",[31,0.185,208,2.124]],["body/classes/AuthDto.html",[3,0.268,4,0.3,5,0.268,7,0.508,11,2.297,12,0.02,14,0.84,19,0.586,30,0.332,31,0.294,45,0.016,46,0.016,164,0.736,171,2.358,208,3.366,278,1.063,279,3.919,280,1.844,281,2.825,282,3.202,283,4.582,284,4.582,285,4.582,286,4.582,287,4.927,288,4.788,289,5.762,290,2.677]],["title/classes/AuthInput.html",[31,0.185,291,1.733]],["body/classes/AuthInput.html",[3,0.215,4,0.241,5,0.215,7,0.408,12,0.021,14,0.728,30,0.485,31,0.334,45,0.014,46,0.014,150,3.227,164,0.776,171,2.389,278,0.854,280,1.598,281,2.847,282,2.879,291,2.896,292,1.755,293,3.682,294,3.682,295,2.537,296,2.001,297,2.537,298,1.882,299,1.361,300,2.715,301,2.715,302,3.71,303,1.871,304,2.151,305,3.31,306,2.151,307,1.436,308,2.001,309,3.303,310,2.001,311,2.001,312,1.871,313,2.001,314,1.755]],["title/modules/AuthModule.html",[47,1.297,59,2.124]],["body/modules/AuthModule.html",[2,2.076,3,0.229,4,0.256,5,0.229,12,0.021,19,0.852,21,0.959,30,0.284,31,0.2,45,0.015,46,0.015,47,2.085,49,1.755,50,1.867,51,2.129,52,2.129,53,1.867,54,3.178,55,2.129,59,4.127,62,3.625,64,2.83,65,2.129,66,1.99,68,3.955,93,2.976,201,3.692,220,3.625,221,2.976,315,3.349,316,3.349,317,3.917,318,4.211,319,3.917,320,3.349,321,3.917,322,2.976,323,3.349,324,3.917]],["title/classes/AuthPayload.html",[31,0.185,295,1.848]],["body/classes/AuthPayload.html",[3,0.22,4,0.246,5,0.22,7,0.418,12,0.021,14,0.55,30,0.488,31,0.336,45,0.014,46,0.014,150,3.253,164,0.733,171,2.352,278,0.875,280,1.624,281,2.571,282,1.915,291,2.733,292,1.797,295,2.914,296,3.118,297,2.578,298,1.912,299,1.383,300,2.758,301,2.758,302,3.741,303,1.915,304,2.202,305,3.35,306,2.202,307,1.459,308,2.049,309,3.335,310,2.049,311,2.049,312,1.915,313,2.049,314,1.797,325,3.77]],["title/classes/AuthResolver.html",[31,0.185,326,2.297]],["body/classes/AuthResolver.html",[3,0.193,4,0.216,5,0.193,7,0.367,8,1.407,11,1.849,12,0.021,14,0.781,16,1.407,19,0.81,30,0.24,31,0.169,33,2.21,39,1.407,45,0.013,46,0.013,75,1.932,81,2.277,90,3.156,91,2.828,113,3.523,134,3.523,158,1.959,162,1.624,163,1.54,164,0.684,165,1.243,201,4.11,205,2.929,206,2.929,207,2.513,208,3.801,212,4.11,213,2.513,220,3.445,221,2.513,225,2.709,278,0.767,291,2.552,320,2.828,326,2.929,327,2.828,328,3.307,329,3.307,330,4.069,331,4.638,332,3.307,333,4.638,334,3.307,335,2.089,336,3.307,337,2.828,338,3.307,339,3.307,340,3.307,341,3.307,342,3.307,343,3.307]],["title/classes/AuthResolver-1.html",[31,0.155,37,1.921,326,1.921]],["body/classes/AuthResolver-1.html",[3,0.218,4,0.244,5,0.218,7,0.414,8,1.529,11,1.488,12,0.021,14,0.735,16,1.132,19,0.84,30,0.27,31,0.19,33,2.719,39,1.132,45,0.014,46,0.014,75,2.18,158,2.129,159,2.18,160,2.303,162,1.529,163,1.449,164,0.644,165,1.169,166,2.009,172,1.896,225,3.333,278,0.866,307,1.891,326,3.183,337,3.191,344,3.191,345,3.203,346,3.927,347,3.732,348,3.732,349,5.039,350,3.732,351,2.835,352,2.835,353,3.191,354,2.835,355,2.835,356,2.18,357,3.732,358,3.732,359,3.732]],["title/injectables/AuthService.html",[154,1.103,220,1.977]],["body/injectables/AuthService.html",[3,0.138,4,0.154,5,0.138,7,0.262,8,1.098,12,0.021,14,0.72,16,1.335,19,0.747,21,0.578,30,0.171,31,0.12,39,1.335,45,0.01,46,0.01,70,1.379,117,2.684,154,1.098,155,1.2,157,2.948,158,1.529,159,1.379,160,1.861,162,1.497,163,1.42,164,0.631,165,1.146,166,1.443,168,2.572,171,1.57,172,1.2,184,2.393,185,2.705,192,1.794,205,2.286,206,2.286,207,2.75,208,3.416,212,2.781,213,2.75,220,1.968,223,3.399,225,2.572,226,3.031,232,2.677,236,3.096,237,2.019,276,2.019,281,2.621,296,1.283,298,0.89,299,1.2,300,1.283,301,1.283,307,1.42,308,2.393,322,1.794,360,2.019,361,3.62,362,3.031,363,4.937,364,2.361,365,2.361,366,3.62,367,2.361,368,2.286,369,2.361,370,2.019,371,2.361,372,2.019,373,3.096,374,3.096,375,2.019,376,2.361,377,2.361,378,2.361,379,1.283,380,2.361,381,1.794,382,2.019,383,2.361,384,2.019,385,3.118,386,2.019,387,3.62,388,2.361,389,2.019,390,4.221,391,2.361,392,2.361,393,1.794,394,2.361,395,3.62,396,3.62,397,2.361,398,2.361,399,2.361,400,2.361,401,2.361,402,1.794,403,2.019,404,4.403,405,2.361,406,2.361,407,2.361]],["title/classes/Book.html",[31,0.185,408,2.504]],["body/classes/Book.html",[3,0.321,4,0.359,5,0.321,12,0.019,30,0.398,31,0.28,45,0.018,46,0.018,278,1.275,408,4.428,409,4.697]],["title/controllers/BookController.html",[0,1.536,410,2.504]],["body/controllers/BookController.html",[0,1.275,2,1.204,3,0.176,4,0.197,5,0.176,7,0.335,8,1.318,11,2.354,12,0.021,14,0.861,16,1.791,19,0.712,21,0.739,30,0.219,31,0.154,32,1.353,33,1.438,39,1.791,45,0.012,46,0.012,162,1.69,163,1.602,164,0.712,165,1.293,203,2.078,216,2.992,219,3.869,298,2.318,299,1.801,410,2.992,411,2.581,412,3.018,413,2.362,414,3.835,415,2.745,416,2.992,417,2.992,418,2.581,419,3.592,420,3.018,421,3.018,422,2.078,423,3.716,424,3.018,425,2.078,426,3.716,427,3.018,428,2.078,429,4.096,430,3.716,431,3.018,432,2.078,433,2.581,434,2.293,435,2.588,436,2.581,437,2.581,438,3.716,439,2.581,440,3.018,441,3.018,442,3.018,443,3.018,444,2.581,445,3.018,446,2.581,447,3.018,448,2.581,449,3.018]],["title/modules/BookModule.html",[47,1.297,60,2.297]],["body/modules/BookModule.html",[2,2.262,3,0.261,4,0.292,5,0.261,12,0.02,19,0.796,21,1.095,30,0.324,31,0.228,45,0.016,46,0.016,47,2.222,49,2.004,50,2.131,51,2.431,52,2.431,53,2.131,54,3.387,55,2.431,60,4.365,64,3.084,65,2.431,66,2.272,410,4.29,435,3.512,436,3.823,450,3.823,451,3.823,452,4.471,453,4.471]],["title/injectables/BookService.html",[154,1.103,435,1.848]],["body/injectables/BookService.html",[3,0.18,4,0.201,5,0.18,7,0.341,8,1.337,12,0.021,14,0.902,16,1.804,19,0.658,21,0.754,30,0.223,31,0.157,32,1.379,33,1.466,39,1.804,45,0.012,46,0.012,154,1.337,155,1.564,158,1.3,159,1.798,160,2.118,162,1.804,163,1.711,164,0.76,165,1.38,166,2.053,172,1.564,298,2.333,299,1.809,356,1.798,379,2.395,413,2.395,414,3.87,415,2.783,416,3.034,417,3.034,418,3.768,419,2.574,422,3.034,425,3.034,428,3.034,429,3.55,435,2.239,454,2.631,455,3.077,456,5.148,457,3.077,458,3.077,459,3.077,460,3.077,461,5.148,462,3.077,463,3.077,464,3.077,465,3.077,466,3.077,467,3.077]],["title/classes/CreateBookDto.html",[31,0.185,419,2.124]],["body/classes/CreateBookDto.html",[3,0.22,4,0.246,5,0.22,7,0.418,11,2.553,12,0.02,14,0.933,19,0.482,30,0.273,31,0.259,45,0.014,46,0.014,164,0.818,165,1.177,171,2.444,278,0.875,280,1.624,288,4.865,290,2.202,299,1.383,419,2.964,468,5.64,469,2.864,470,5.735,471,4.905,472,5.735,473,5.735,474,5.735,475,5.735,476,3.77,477,3.224,478,3.77,479,3.77,480,3.77,481,3.77,482,3.77,483,5.074,484,3.855,485,3.855,486,5.247]],["title/classes/CreateOrderDto.html",[31,0.185,487,2.124]],["body/classes/CreateOrderDto.html",[3,0.283,4,0.317,5,0.283,7,0.537,11,1.931,12,0.02,14,0.706,19,0.619,30,0.351,31,0.304,45,0.017,46,0.017,164,0.619,278,1.124,280,1.908,288,4.531,290,2.829,299,1.626,477,4.142,484,4.531,487,3.484,488,5.1,489,3.68,490,5.526,491,4.843]],["title/classes/EditUserDto.html",[31,0.185,492,2.297]],["body/classes/EditUserDto.html",[3,0.244,4,0.272,5,0.244,7,0.462,11,2.403,12,0.02,14,0.879,19,0.533,30,0.302,31,0.276,45,0.015,46,0.015,164,0.77,165,1.574,171,2.42,278,0.967,280,1.735,281,2.701,287,4.637,290,2.435,310,3.276,311,3.276,485,4.85,486,5.154,492,3.425,493,5.459,494,3.564,495,4.168,496,4.168,497,5.422,498,4.168,499,4.168]],["title/interfaces/Flags.html",[500,2.297,501,2.504]],["body/interfaces/Flags.html",[3,0.185,4,0.207,5,0.185,7,0.351,12,0.021,19,0.574,31,0.161,37,1.999,39,0.96,45,0.013,46,0.013,75,1.849,117,2.444,148,2.707,163,0.91,164,0.574,165,1.321,176,4.746,184,1.721,232,3.062,242,4.472,245,3.845,267,3.416,280,1.439,292,1.508,314,2.143,335,2.84,500,1.999,501,4.6,502,2.707,503,2.179,504,2.179,505,6.013,506,5.342,507,3.845,508,3.165,509,3.165,510,3.165,511,3.165,512,3.416,513,6.013,514,4.496,515,4.496,516,3.165,517,5.229,518,4.496,519,3.165,520,3.165,521,3.165,522,3.165,523,3.165,524,3.165,525,3.165,526,3.165,527,2.405,528,3.165,529,3.165,530,2.707,531,3.165,532,2.405,533,3.165,534,3.165,535,3.165,536,3.165,537,3.165,538,3.165]],["title/classes/GraphqlContext.html",[31,0.185,90,1.977]],["body/classes/GraphqlContext.html",[3,0.265,4,0.296,5,0.265,7,0.502,12,0.02,14,0.833,19,0.578,30,0.414,31,0.291,45,0.016,46,0.016,90,3.108,135,4.314,136,4.314,164,0.73,209,4.314,222,2.46,278,1.05,280,1.829,299,1.234,307,1.802,500,2.858,539,3.439,540,4.314,541,4.526,542,4.526,543,3.611,544,3.87,545,2.3]],["title/classes/IMutation.html",[31,0.185,303,1.848]],["body/classes/IMutation.html",[3,0.198,4,0.222,5,0.198,7,0.376,8,1.431,12,0.021,14,0.688,16,1.431,30,0.475,31,0.325,45,0.013,46,0.013,150,3.134,162,1.431,163,1.356,164,0.75,165,1.095,171,2.2,205,2.979,206,2.979,278,0.786,281,2.432,282,1.722,291,3.122,292,1.615,295,2.757,296,1.842,297,2.757,298,1.778,299,1.286,300,2.564,301,2.564,302,3.964,303,2.397,304,2.755,305,3.603,306,2.755,307,1.356,308,1.842,309,3.189,310,1.842,311,1.842,312,1.722,313,1.842,314,1.615,379,2.564,546,3.388,547,3.388]],["title/classes/IQuery.html",[31,0.185,312,1.848]],["body/classes/IQuery.html",[3,0.219,4,0.245,5,0.219,7,0.415,8,1.532,12,0.021,14,0.546,16,1.136,30,0.487,31,0.335,45,0.014,46,0.014,150,3.246,164,0.645,171,2.278,278,0.869,281,2.562,282,1.902,291,2.724,292,1.784,295,2.566,296,2.035,297,2.566,298,1.904,299,1.377,300,2.746,301,2.746,302,3.93,303,1.902,304,2.187,305,3.574,306,2.187,307,1.644,308,2.035,309,3.326,310,2.035,311,2.035,312,2.566,313,2.035,314,1.784,548,3.744]],["title/classes/JwtGuard.html",[31,0.185,549,2.297]],["body/classes/JwtGuard.html",[3,0.297,4,0.333,5,0.297,12,0.02,14,0.742,19,0.65,30,0.369,31,0.259,45,0.017,46,0.017,158,2.789,278,1.181,545,2.586,549,3.881,550,4.351,551,5.089,552,5.089,553,3.866,554,5.089,555,3.866]],["title/injectables/JwtStrategy.html",[154,1.103,318,2.297]],["body/injectables/JwtStrategy.html",[3,0.157,4,0.175,5,0.157,7,0.297,8,1.209,12,0.021,14,0.768,16,1.209,19,0.754,21,0.657,30,0.194,31,0.137,32,1.202,39,1.597,45,0.011,46,0.011,70,1.566,96,3.004,102,2.037,110,3.028,135,1.846,154,1.209,155,1.363,158,1.133,160,1.985,162,1.443,163,1.368,164,0.754,165,1.104,166,1.897,171,1.878,172,1.363,222,1.458,223,3.625,225,3.567,226,2.744,232,2.267,233,2.293,239,2.037,262,3.408,280,1.275,281,2.132,298,1.011,299,1.087,307,1.146,314,2.509,318,2.517,323,2.293,362,2.744,368,2.517,385,1.694,393,2.037,402,2.037,403,2.293,543,1.694,545,1.363,553,2.037,555,2.037,556,2.293,557,4.756,558,4.756,559,3.986,560,3.986,561,2.293,562,3.986,563,3.986,564,5.266,565,2.682,566,3.986,567,3.986,568,2.682,569,2.682,570,2.682,571,2.293,572,2.682,573,2.293,574,2.682,575,2.682,576,2.682,577,2.682,578,2.682,579,2.682,580,2.682,581,3.986,582,2.682,583,2.682,584,2.682,585,2.682,586,2.682,587,2.682,588,2.682,589,3.986,590,2.682,591,2.682,592,2.293,593,2.682,594,2.682]],["title/classes/Order.html",[31,0.185,595,2.763]],["body/classes/Order.html",[3,0.321,4,0.359,5,0.321,12,0.019,30,0.398,31,0.28,45,0.018,46,0.018,278,1.275,595,4.887,596,4.697]],["title/controllers/OrderController.html",[0,1.536,597,2.504]],["body/controllers/OrderController.html",[0,1.181,2,1.115,3,0.163,4,0.183,5,0.163,7,0.31,8,1.247,11,2.283,12,0.021,14,0.835,16,1.737,19,0.765,21,0.685,30,0.203,31,0.143,32,1.254,33,1.333,39,1.737,45,0.011,46,0.011,157,2.323,162,1.63,163,1.546,164,0.687,165,1.247,168,1.634,203,1.926,216,3.356,219,3.704,298,2.257,299,1.843,355,2.125,368,3.079,413,2.65,414,3.7,415,2.597,416,2.831,417,2.831,422,1.926,423,3.516,425,1.926,426,3.516,428,1.926,430,3.516,432,1.926,433,2.392,434,2.125,437,2.392,439,2.392,444,2.392,446,2.392,448,2.392,487,3.71,549,1.766,597,2.831,598,2.392,599,2.392,600,2.797,601,2.797,602,2.797,603,2.797,604,2.797,605,4.01,606,2.797,607,2.392,608,3.516,609,2.848,610,2.392,611,1.926,612,2.392,613,2.392,614,2.797,615,2.797,616,2.797,617,2.797,618,2.797,619,2.797,620,2.797,621,2.797]],["title/modules/OrderModule.html",[47,1.297,61,2.297]],["body/modules/OrderModule.html",[2,2.121,3,0.236,4,0.264,5,0.236,12,0.021,19,0.838,21,0.991,30,0.293,31,0.206,45,0.015,46,0.015,47,2.119,49,1.813,50,1.928,51,2.199,52,2.199,53,1.928,54,3.229,55,2.199,61,4.488,64,2.891,65,2.199,66,2.056,345,3.207,435,3.419,597,4.09,609,3.931,610,3.46,622,3.46,623,3.46,624,4.046,625,4.046,626,3.46,627,3.46]],["title/injectables/OrderService.html",[154,1.103,609,2.124]],["body/injectables/OrderService.html",[3,0.141,4,0.157,5,0.141,7,0.267,8,1.114,12,0.021,14,0.825,16,1.629,19,0.686,21,0.59,30,0.174,31,0.123,33,2.124,37,1.52,39,1.629,45,0.01,46,0.01,113,1.829,154,1.114,155,1.223,157,2.124,158,1.552,159,1.406,160,1.88,162,1.629,163,1.544,164,0.686,165,1.246,166,1.777,168,1.406,172,1.223,184,2.422,185,2.264,225,2.603,232,2.376,298,2.219,299,1.696,307,1.057,345,2.806,356,1.406,370,2.058,379,2.422,390,3.811,408,2.53,413,1.997,414,3.433,415,2.32,416,2.53,417,2.53,422,2.53,425,2.53,428,2.53,435,2.992,471,3.142,487,2.146,605,3.149,609,2.146,626,2.058,627,2.058,628,2.058,629,2.407,630,3.674,631,4.456,632,2.407,633,2.407,634,2.407,635,2.407,636,4.456,637,2.407,638,2.407,639,2.407,640,3.674,641,3.811,642,3.674,643,2.407,644,2.407,645,4.456,646,4.456,647,2.407,648,4.456,649,2.407,650,2.407,651,2.407,652,2.407,653,2.058,654,2.407,655,2.407,656,2.407,657,2.407,658,2.407,659,2.407,660,2.407]],["title/classes/PrismaClientExceptionFilter.html",[31,0.185,661,2.763]],["body/classes/PrismaClientExceptionFilter.html",[3,0.163,4,0.182,5,0.163,7,0.308,8,1.242,12,0.021,14,0.406,16,0.844,19,0.764,21,0.682,30,0.202,31,0.142,36,2.587,45,0.011,46,0.011,75,1.626,100,2.38,101,2.38,106,3.503,137,2.38,162,0.844,163,0.8,164,0.356,165,0.646,166,1.633,170,4.365,177,2.114,194,2.114,209,2.82,218,2.38,222,1.513,232,2.848,278,0.646,330,2.114,356,1.626,373,4.887,374,2.38,375,2.38,381,2.114,384,4.585,385,4.088,386,2.38,389,3.503,402,2.114,545,2.081,661,3.112,662,3.503,663,4.585,664,3.503,665,2.38,666,4.861,667,3.503,668,4.861,669,2.783,670,4.861,671,5.362,672,5.362,673,5.362,674,2.783,675,4.096,676,2.783,677,2.38,678,2.783,679,2.783,680,2.783,681,2.783,682,2.783,683,2.783,684,4.096,685,2.783,686,2.783,687,2.783,688,2.783,689,2.783,690,2.783,691,4.096,692,2.783,693,2.783,694,2.783,695,2.783,696,4.096,697,4.096,698,3.503,699,2.783,700,2.783,701,2.783,702,2.783,703,2.783,704,2.783,705,2.783,706,2.114,707,2.783,708,2.783,709,2.783]],["title/modules/PrismaModule.html",[47,1.297,62,1.977]],["body/modules/PrismaModule.html",[3,0.257,4,0.288,5,0.257,12,0.02,19,0.717,21,1.078,30,0.319,31,0.224,45,0.016,46,0.016,47,2.206,49,1.972,50,2.097,51,2.392,52,2.392,53,2.097,54,3.362,55,3.362,62,3.803,64,3.052,65,2.392,66,2.236,160,2.749,710,3.763,711,3.763,712,3.763,713,4.4,714,5.615,715,4.4]],["title/injectables/PrismaService.html",[154,1.103,160,1.371]],["body/injectables/PrismaService.html",[3,0.211,4,0.153,5,0.137,7,0.26,8,1.093,12,0.021,14,0.717,16,1.33,19,0.678,21,0.575,30,0.17,31,0.12,39,1.33,45,0.01,46,0.01,70,1.37,85,1.782,110,1.782,117,1.958,143,1.481,154,1.093,155,1.192,157,2.87,158,0.991,160,1.358,162,1.093,163,1.036,164,0.46,165,0.836,166,0.935,180,1.615,185,2.5,193,1.615,200,1.782,223,3.387,226,1.615,232,2.53,351,2.737,356,1.37,381,1.782,385,1.481,545,1.83,555,1.782,561,3.081,573,2.006,641,2.006,667,2.006,706,1.782,716,1.782,717,4.385,718,4.92,719,3.602,720,5.603,721,2.346,722,2.346,723,3.602,724,4.92,725,2.346,726,2.346,727,3.081,728,2.346,729,2.006,730,2.006,731,2.737,732,2.006,733,4.207,734,1.615,735,4.207,736,3.75,737,2.006,738,3.332,739,2.346,740,2.006,741,2.346,742,2.346,743,2.346,744,3.602,745,2.346,746,2.346,747,2.346,748,2.346,749,2.346,750,2.346,751,2.346,752,2.346,753,2.346,754,3.081,755,3.602,756,2.346,757,2.346,758,2.346,759,2.346,760,2.346,761,2.346,762,2.346,763,2.346,764,2.346,765,2.346,766,2.346,767,2.346,768,2.346,769,2.346,770,2.006,771,2.346,772,3.081,773,2.346,774,2.346,775,2.346,776,2.346,777,2.346,778,2.346,779,2.346,780,2.346,781,2.346,782,2.346,783,2.346,784,2.346,785,2.346,786,2.346,787,2.346,788,2.346,789,2.346,790,2.346,791,2.346,792,2.346,793,2.346,794,2.346,795,2.006,796,2.346]],["title/classes/RequestWithUser.html",[31,0.185,540,2.504]],["body/classes/RequestWithUser.html",[3,0.27,4,0.302,5,0.27,7,0.512,12,0.02,14,0.674,19,0.59,30,0.42,31,0.295,45,0.016,46,0.016,90,2.512,135,3.181,136,3.181,164,0.59,209,3.987,222,2.512,278,1.072,280,1.853,299,1.26,307,2.004,500,2.918,539,3.51,540,4.355,543,3.995,544,3.951,545,2.943,797,4.621]],["title/classes/ServiceStatus.html",[31,0.185,173,2.504]],["body/classes/ServiceStatus.html",[3,0.182,4,0.204,5,0.182,7,0.346,9,2.371,10,2.371,12,0.021,14,0.825,19,0.569,21,0.764,22,1.696,30,0.226,31,0.227,32,1.399,33,1.487,36,3.277,39,1.35,45,0.012,46,0.012,117,2.419,143,1.971,154,1.35,156,2.371,157,1.487,158,1.88,160,1.678,162,0.947,163,0.897,164,0.723,165,0.724,166,1.775,170,2.148,171,2.017,172,1.586,173,3.894,174,5.694,175,5.317,176,4.297,177,4.544,178,5.114,179,3.381,180,3.064,181,2.669,182,2.371,183,3.806,184,2.419,185,1.586,186,2.669,187,2.669,188,2.669,189,2.669,190,2.669,191,2.669,192,2.371,193,3.064,194,3.381,195,2.371,196,3.806,197,2.669,198,2.669,199,2.669,200,2.371,278,0.724,280,1.424,527,3.942,798,3.121,799,3.121,800,3.121,801,3.121,802,3.121]],["title/classes/SignUpPayload.html",[31,0.185,297,1.848]],["body/classes/SignUpPayload.html",[3,0.206,4,0.23,5,0.206,7,0.39,12,0.021,14,0.869,30,0.48,31,0.329,45,0.014,46,0.014,150,3.363,164,0.825,171,2.304,278,0.816,280,1.549,281,2.802,282,1.787,291,2.637,292,1.676,295,2.46,296,1.912,297,2.812,298,2.247,299,1.509,300,3.241,301,3.241,302,3.652,303,1.787,304,2.055,305,3.233,306,2.055,307,1.392,308,1.912,309,3.241,310,1.912,311,1.912,312,1.787,313,1.912,314,1.676,803,3.518,804,3.518,805,3.518,806,3.518]],["title/classes/UpdateBookDto.html",[31,0.185,429,2.297]],["body/classes/UpdateBookDto.html",[3,0.299,4,0.334,5,0.299,12,0.02,19,0.787,30,0.37,31,0.261,45,0.017,46,0.017,278,1.186,413,2.779,419,2.986,429,3.892,438,4.372,469,3.884,545,2.598,807,4.372,808,4.372,809,3.884,810,3.884,811,5.112]],["title/classes/UpdateOrderDto.html",[31,0.185,605,2.297]],["body/classes/UpdateOrderDto.html",[3,0.265,4,0.296,5,0.265,7,0.502,11,1.805,12,0.02,14,0.66,19,0.801,30,0.328,31,0.291,45,0.016,46,0.016,164,0.578,165,1.327,278,1.05,280,1.829,290,2.644,299,1.559,413,2.46,484,4.343,485,4.343,487,2.644,489,3.439,490,5.359,545,2.3,605,3.611,608,3.87,808,3.87,809,3.439,810,3.439,812,4.889,813,4.526,814,4.526,815,4.526]],["title/classes/User.html",[31,0.185,307,1.046]],["body/classes/User.html",[3,0.189,4,0.212,5,0.189,7,0.359,12,0.021,14,0.943,30,0.469,31,0.321,45,0.013,46,0.013,150,3.287,164,0.858,165,1.461,171,2.245,278,0.752,280,1.463,281,2.719,282,1.646,291,2.524,292,1.544,295,2.322,296,1.761,297,2.322,298,2.168,299,1.444,300,3.127,301,3.127,302,3.544,303,1.646,304,1.892,305,3.094,306,1.892,307,1.523,308,2.879,309,3.517,310,2.879,311,2.879,312,1.646,313,1.761,314,1.544,816,3.239,817,3.239,818,3.239,819,3.239,820,3.239,821,3.239,822,3.239]],["title/controllers/UserController.html",[0,1.536,346,2.124]],["body/controllers/UserController.html",[0,1.307,2,1.234,3,0.181,4,0.202,5,0.181,7,0.343,8,1.342,11,2.059,12,0.021,14,0.753,16,1.566,19,0.792,21,0.758,30,0.224,31,0.158,32,1.387,39,1.566,45,0.012,46,0.012,154,1.342,157,2.461,162,1.566,163,1.485,164,0.66,165,1.198,168,1.808,170,2.13,185,1.572,195,2.351,203,2.13,212,3.765,216,3.046,299,1.69,307,1.939,345,2.461,346,2.584,352,2.351,355,2.351,356,1.808,368,3.559,432,3.046,434,3.361,492,3.559,543,1.954,549,1.954,607,2.646,611,2.13,612,2.646,613,4.416,698,2.646,823,2.646,824,2.646,825,3.783,826,3.783,827,4.424,828,2.646,829,3.094,830,3.094,831,2.646,832,3.094,833,3.094,834,3.094,835,3.094,836,3.094,837,3.094,838,3.094,839,3.094,840,3.094,841,3.094,842,3.094,843,2.646,844,3.094,845,3.094,846,3.094,847,3.094,848,3.094]],["title/modules/UserModule.html",[47,1.297,63,2.297]],["body/modules/UserModule.html",[2,2.066,3,0.227,4,0.254,5,0.227,12,0.021,19,0.827,21,0.953,30,0.282,31,0.198,45,0.014,46,0.014,47,2.078,49,1.743,50,1.853,51,2.114,52,2.114,53,1.853,54,3.167,55,2.114,59,3.888,62,3.617,63,4.524,64,2.816,65,2.114,66,1.976,68,3.936,71,3.326,93,2.955,345,3.171,346,4.031,352,2.955,353,3.326,849,3.326,850,3.889,851,3.326,852,3.889]],["title/injectables/UserService.html",[154,1.103,345,1.733]],["body/injectables/UserService.html",[3,0.184,4,0.206,5,0.184,7,0.349,8,1.358,12,0.021,14,0.828,16,1.581,19,0.666,21,0.771,30,0.228,31,0.16,32,1.411,39,1.581,45,0.013,46,0.013,154,1.358,155,1.599,157,2.972,158,1.329,159,1.839,160,2.14,162,1.722,163,1.633,164,0.726,165,1.318,166,1.786,168,2.616,172,1.599,185,2.275,212,3.938,232,2.134,298,1.965,299,1.819,307,1.633,345,2.134,368,4.052,379,1.711,393,2.391,415,2.828,432,3.083,492,3.586,653,2.691,825,3.829,826,3.829,828,3.829,831,3.829,853,2.691,854,3.147,855,3.147,856,3.147,857,4.478,858,3.147,859,3.147,860,4.478,861,3.147]],["title/coverage.html",[862,3.762]],["body/coverage.html",[0,2.186,1,1.527,5,0.13,6,1.897,12,0.021,22,1.206,31,0.353,45,0.01,46,0.01,53,1.057,67,2.621,90,1.206,96,1.401,98,1.686,154,1.793,156,2.621,160,0.836,164,0.283,173,1.527,184,1.206,201,1.401,202,1.897,208,1.296,220,1.206,267,2.621,279,1.897,291,1.057,292,2.611,295,1.127,297,1.127,303,1.127,307,0.992,312,1.127,318,1.401,326,2.179,327,1.897,335,1.401,344,1.897,345,1.057,346,2.016,354,1.686,360,1.897,408,1.527,409,1.897,410,1.527,411,1.897,419,1.296,429,1.401,435,1.127,454,1.897,468,1.897,469,2.621,487,1.296,488,1.897,489,2.621,492,1.401,493,1.897,494,1.897,500,2.179,501,2.376,503,3.562,504,3.562,532,1.686,539,3.217,540,1.527,549,1.401,550,1.897,556,1.897,592,6.3,595,1.686,596,1.897,597,1.527,598,1.897,605,1.401,609,1.296,611,1.527,628,1.897,661,1.686,662,1.897,663,2.951,664,1.897,665,1.897,716,3.217,731,1.686,738,1.686,807,1.897,812,1.897,823,2.951,853,1.897,862,1.686,863,1.686,864,2.219,865,2.219,866,5.913,867,5.913,868,6.073,869,6.584,870,5.718,871,4.777,872,2.951,873,2.951,874,4.234,875,3.451,876,1.897,877,2.219,878,1.897,879,2.219,880,2.219]],["title/dependencies.html",[50,2.083,881,2.602]],["body/dependencies.html",[12,0.021,21,0.896,27,2.779,28,3.777,31,0.253,45,0.014,46,0.014,50,1.743,70,2.137,72,3.128,75,2.137,77,3.128,81,4.363,84,3.128,85,2.779,88,3.128,118,3.128,151,3.128,166,1.458,222,1.988,239,2.779,290,2.137,322,2.779,362,2.518,372,3.128,553,2.779,571,4.251,677,3.128,727,3.128,729,3.128,730,3.128,754,3.128,809,2.779,810,2.779,882,3.658,883,3.658,884,3.658,885,5.647,886,3.658,887,3.658,888,3.658,889,3.658,890,3.658,891,3.658,892,3.658,893,3.658,894,3.658,895,3.658,896,3.658,897,3.658,898,3.658,899,3.658,900,3.658,901,3.658,902,3.658,903,3.658,904,3.658,905,3.658,906,3.658,907,3.658,908,3.658,909,3.658,910,3.658,911,3.658,912,3.128,913,3.658,914,3.658,915,3.658,916,3.658,917,3.658,918,3.658,919,3.658,920,3.658,921,3.658]],["title/miscellaneous/functions.html",[922,1.777,923,3.738]],["body/miscellaneous/functions.html",[7,0.58,12,0.019,45,0.017,46,0.017,53,3.185,162,1.587,163,1.505,165,1.214,335,3.305,503,3.603,504,4.303,512,3.976,876,5.345,878,4.475,922,3.057,923,4.475,924,5.233,925,4.475]],["title/index.html",[7,0.337,926,2.602,927,2.602]],["body/index.html",[2,1.664,12,0.02,45,0.012,46,0.012,47,1.018,49,1.871,81,1.965,96,3.116,99,4.123,102,3.748,105,2.441,107,2.441,108,2.441,111,3.569,145,2.441,166,1.967,180,2.873,182,2.169,204,2.441,205,1.803,206,1.803,241,2.441,246,2.441,256,2.441,282,1.45,307,0.821,362,1.965,379,2.269,413,1.552,506,2.441,599,3.569,706,2.169,734,1.965,740,3.569,770,3.569,795,3.569,824,3.569,843,4.219,862,2.169,863,3.748,912,4.219,928,2.855,929,2.441,930,2.855,931,4.174,932,6.229,933,4.174,934,2.855,935,2.855,936,2.855,937,2.855,938,2.855,939,2.855,940,2.855,941,2.855,942,2.855,943,2.855,944,2.855,945,4.174,946,2.855,947,2.855,948,2.855,949,2.855,950,4.174,951,4.933,952,2.855,953,2.855,954,2.855,955,2.855,956,2.855,957,2.855,958,4.174,959,2.855,960,2.855,961,2.855,962,2.855,963,2.855,964,2.855,965,2.855,966,2.855,967,2.855,968,2.855,969,2.855,970,2.441,971,2.855,972,2.855,973,2.855,974,2.855,975,2.855,976,2.855,977,2.855,978,2.855,979,4.174,980,4.933,981,2.855,982,2.855,983,2.855,984,2.855,985,2.855,986,2.855,987,2.855,988,2.855,989,2.855,990,2.855,991,2.855,992,2.855,993,2.855,994,2.855,995,2.855,996,2.855,997,2.855,998,2.855,999,6.387,1000,2.855,1001,2.855,1002,2.855,1003,2.441,1004,2.855,1005,2.855,1006,2.855,1007,6.031,1008,2.855,1009,2.855,1010,2.855,1011,2.855,1012,2.855,1013,2.855,1014,2.169,1015,2.855]],["title/license.html",[926,2.602,927,2.602,1016,2.311]],["body/license.html",[12,0.015,45,0.015,46,0.015,66,1.983,193,2.687,222,2.122,382,4.441,734,2.687,863,2.965,970,3.337,1003,4.441,1014,2.965,1016,2.965,1017,5.836,1018,3.903,1019,3.903,1020,3.903,1021,5.193,1022,3.903,1023,3.903,1024,3.903,1025,3.903,1026,3.903,1027,3.903,1028,6.991,1029,3.903,1030,3.903,1031,5.836,1032,3.903,1033,5.193,1034,3.903,1035,3.903,1036,3.903,1037,3.903,1038,3.903,1039,3.903,1040,3.903,1041,3.903,1042,3.903,1043,5.193,1044,3.903,1045,3.903,1046,3.903,1047,3.903,1048,3.903,1049,3.903,1050,3.903,1051,5.193,1052,5.193,1053,3.903,1054,3.903,1055,3.903,1056,3.903,1057,3.903,1058,3.903,1059,3.903,1060,3.903,1061,3.903,1062,3.903,1063,3.903,1064,3.903,1065,3.903,1066,3.903,1067,3.903,1068,3.903,1069,3.903,1070,3.903,1071,3.903,1072,3.903,1073,3.903,1074,3.903,1075,3.903,1076,3.903,1077,3.903,1078,3.903,1079,3.903]],["title/modules.html",[49,2.219]],["body/modules.html",[12,0.017,45,0.017,46,0.017,48,3.424,49,2.229,59,2.906,60,3.141,61,3.141,62,2.704,63,3.141,1080,7.096,1081,7.096,1082,7.096,1083,7.096]],["title/overview.html",[1084,4.235]],["body/overview.html",[2,1.323,12,0.02,22,2.916,45,0.013,46,0.013,47,1.183,48,4.875,49,1.487,50,1.581,51,1.803,52,1.803,53,1.581,54,1.803,55,1.803,56,2.837,57,2.837,58,2.837,59,3.997,60,3.865,61,4.265,62,3.613,63,4.368,64,2.526,65,1.803,66,1.686,155,1.686,160,2.455,220,2.916,278,0.77,315,2.837,316,2.837,318,3.388,345,2.77,346,3.134,435,2.953,450,2.837,451,2.837,502,2.837,609,3.134,622,2.837,623,2.837,710,2.837,711,2.837,712,2.837,772,2.837,849,2.837,851,2.837,1084,2.837,1085,3.317,1086,3.317,1087,3.317,1088,3.317]],["title/properties.html",[280,1.399,881,2.602]],["body/properties.html",[12,0.021,45,0.017,46,0.017,280,1.644,929,4.392,1014,3.902,1016,3.902,1089,5.136,1090,5.136,1091,5.136,1092,5.136,1093,5.136,1094,5.136,1095,6.18,1096,5.136,1097,5.136,1098,5.136,1099,5.136,1100,5.136]],["title/miscellaneous/typealiases.html",[922,1.777,1101,4.371]],["body/miscellaneous/typealiases.html",[7,0.597,12,0.019,45,0.018,46,0.018,150,3.231,164,0.688,292,2.567,309,3.456,313,2.928,314,2.567,922,3.146,1102,5.386,1103,6.358]],["title/miscellaneous/variables.html",[922,1.777,1104,3.738]],["body/miscellaneous/variables.html",[3,0.186,7,0.352,12,0.021,36,4.222,39,1.729,45,0.013,46,0.013,67,2.412,90,1.726,96,2.845,97,2.715,98,3.423,99,2.412,134,2.412,143,2.005,164,0.669,171,1.868,179,3.423,184,1.726,232,2.496,307,1.296,330,3.423,335,2.845,351,2.412,354,3.423,379,3.099,385,2.005,501,3.606,503,2.185,504,3.924,507,2.715,512,2.412,527,5.079,530,2.715,532,3.423,543,2.005,611,3.102,716,2.412,731,3.423,732,2.715,733,4.875,734,2.185,735,4.875,736,4.479,737,2.715,738,3.423,872,2.715,873,4.479,922,1.854,925,4.479,1104,2.715,1105,4.505,1106,4.505,1107,4.505,1108,4.505,1109,4.505,1110,3.174,1111,3.174,1112,3.174,1113,3.174,1114,3.174,1115,3.174]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["0.1.13",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1090,"title":{},"body":{"properties.html":{}}}],["0.30.3",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":37,"title":{"classes/AuthResolver-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/Flags.html":{},"injectables/OrderService.html":{}}}],["1.4.6",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["1.78.0",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["12.0.7",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["12.0.8",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["16.7.1",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["17.9.2",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["18.0.2",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":772,"title":{},"body":{"injectables/PrismaService.html":{},"overview.html":{}}}],["2.0.0",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1019,"title":{},"body":{"license.html":{}}}],["21",{"_index":1088,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["3600000",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["4.0.1",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5",{"_index":1086,"title":{},"body":{"overview.html":{}}}],["5.2.3",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":701,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["6",{"_index":1085,"title":{},"body":{"overview.html":{}}}],["60",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["7.8.1",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["7d056s1koop2",{"_index":709,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["8",{"_index":1087,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1050,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":302,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["access_token",{"_index":296,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["accessible",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":1074,"title":{},"body":{"license.html":{}}}],["actual",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["aliases",{"_index":1102,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":939,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1041,"title":{},"body":{"license.html":{}}}],["angular",{"_index":986,"title":{},"body":{"index.html":{}}}],["api",{"_index":843,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["api.bookstore.nas",{"_index":928,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["apollodriver",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagegraphqlplayground",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["app.close",{"_index":791,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["app.dto",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appended",{"_index":587,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":949,"title":{},"body":{"index.html":{}}}],["arg",{"_index":514,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice",{"_index":526,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(1).split",{"_index":523,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(2",{"_index":519,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.startswith",{"_index":515,"title":{},"body":{"interfaces/Flags.html":{}}}],["argon",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(dto.password",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.verify(user.hash",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["args",{"_index":335,"title":{},"body":{"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":510,"title":{},"body":{"interfaces/Flags.html":{}}}],["argumentshost",{"_index":672,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["arising",{"_index":1078,"title":{},"body":{"license.html":{}}}],["array",{"_index":511,"title":{},"body":{"interfaces/Flags.html":{}}}],["asia/kolkata",{"_index":789,"title":{},"body":{"injectables/PrismaService.html":{}}}],["associated",{"_index":1029,"title":{},"body":{"license.html":{}}}],["async",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth.service",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth/auth.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/decorator",{"_index":355,"title":{},"body":{"classes/AuthResolver-1.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["auth/guard",{"_index":612,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["authcontroller",{"_index":201,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authdto",{"_index":208,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authenticated",{"_index":940,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":972,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":552,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authguard('jwt",{"_index":554,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authinput",{"_index":291,"title":{"classes/AuthInput.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1099,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":973,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1067,"title":{},"body":{"license.html":{}}}],["authpayload",{"_index":295,"title":{"classes/AuthPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["authresolver",{"_index":326,"title":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{}},"body":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"coverage.html":{}}}],["authservice",{"_index":220,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":1092,"title":{},"body":{"properties.html":{}}}],["based",{"_index":697,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["baseexceptionfilter",{"_index":666,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["between",{"_index":966,"title":{},"body":{"index.html":{}}}],["body",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["book",{"_index":408,"title":{"classes/Book.html":{}},"body":{"classes/Book.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["book.controller",{"_index":453,"title":{},"body":{"modules/BookModule.html":{}}}],["book.dto",{"_index":438,"title":{},"body":{"controllers/BookController.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts",{"_index":469,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.dto.ts:10",{"_index":482,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:14",{"_index":476,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:18",{"_index":478,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:22",{"_index":480,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:6",{"_index":481,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.point",{"_index":645,"title":{},"body":{"injectables/OrderService.html":{}}}],["book.service",{"_index":436,"title":{},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{}}}],["book/book.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["book/book.service",{"_index":627,"title":{},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{}}}],["bookcontroller",{"_index":410,"title":{"controllers/BookController.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"coverage.html":{}}}],["bookid",{"_index":490,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["bookmodule",{"_index":60,"title":{"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["bookpoint",{"_index":650,"title":{},"body":{"injectables/OrderService.html":{}}}],["books",{"_index":412,"title":{},"body":{"controllers/BookController.html":{}}}],["bookservice",{"_index":435,"title":{"injectables/BookService.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["bookstore.nas",{"_index":1093,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["browse",{"_index":1083,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1080,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1096,"title":{},"body":{"properties.html":{}}}],["built",{"_index":931,"title":{},"body":{"index.html":{}}}],["business",{"_index":950,"title":{},"body":{"index.html":{}}}],["c",{"_index":1018,"title":{},"body":{"license.html":{}}}],["cache",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('home",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["cachemodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(5",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(number.max_safe_integer",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(undefined)@get('health",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["case",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["catch",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["catch((err",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["catch(exception",{"_index":669,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["catch(prismaclientunknownrequesterror",{"_index":678,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["chalk",{"_index":758,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.cyan(json.stringify(e.params",{"_index":763,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.green(e.query",{"_index":761,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.magenta(`${e.duration}ms",{"_index":765,"title":{},"body":{"injectables/PrismaService.html":{}}}],["charge",{"_index":1025,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1070,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"classes/Order.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":278,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"classes/Order.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cleandb",{"_index":718,"title":{},"body":{"injectables/PrismaService.html":{}}}],["clear",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["client",{"_index":663,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bookmodule",{"_index":450,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_providers",{"_index":451,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":622,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_providers",{"_index":623,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":710,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":711,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":712,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":849,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":850,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":851,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["compodoc",{"_index":983,"title":{},"body":{"index.html":{}}}],["compression",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["concerns",{"_index":954,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1049,"title":{},"body":{"license.html":{}}}],["config",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":751,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mode",{"_index":573,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":971,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configuration",{"_index":968,"title":{},"body":{"index.html":{}}}],["connect",{"_index":187,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connected",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connecting",{"_index":785,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"license.html":{}}}],["connectors/postgresql#configuring",{"_index":747,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.count('db",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["console.debug",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/OrderService.html":{}}}],["console.debug(req.cookies",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.error",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ServiceStatus.html":{}}}],["console.error('db",{"_index":703,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.error('db:caught",{"_index":699,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.error(exception.message",{"_index":679,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.info(new",{"_index":784,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":859,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('extracted",{"_index":593,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('flags",{"_index":531,"title":{},"body":{"interfaces/Flags.html":{}}}],["console.log(chalk.yellow('duration",{"_index":764,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('params",{"_index":762,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('query",{"_index":760,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('duration",{"_index":782,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('params",{"_index":780,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('query",{"_index":778,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":689,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["constructor",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":328,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(config",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(ok",{"_index":798,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["constructor(prisma",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["context",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1075,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('books",{"_index":440,"title":{},"body":{"controllers/BookController.html":{}}}],["controller('orders",{"_index":614,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('users",{"_index":837,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["cookie",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["cookiename",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["cookies",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["copies",{"_index":1043,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1003,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1017,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":862,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coverimage",{"_index":470,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["create",{"_index":413,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"index.html":{}}}],["create(@body",{"_index":441,"title":{},"body":{"controllers/BookController.html":{}}}],["create(createbookdto",{"_index":418,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["create(createorderdto",{"_index":630,"title":{},"body":{"injectables/OrderService.html":{}}}],["create(userid",{"_index":600,"title":{},"body":{"controllers/OrderController.html":{}}}],["createbookdto",{"_index":419,"title":{"classes/CreateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["createdat",{"_index":300,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["createorderdto",{"_index":487,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":942,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":330,"title":{},"body":{"classes/AuthResolver.html":{},"classes/PrismaClientExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":681,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["ctx.req",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.res",{"_index":343,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentflag",{"_index":513,"title":{},"body":{"interfaces/Flags.html":{}}}],["customerid",{"_index":617,"title":{},"body":{"controllers/OrderController.html":{}}}],["customize",{"_index":696,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["damages",{"_index":1071,"title":{},"body":{"license.html":{}}}],["data",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":706,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["database_url",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["datasources",{"_index":749,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["datetime",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["db",{"_index":200,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["db_connected",{"_index":738,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_error:unique",{"_index":693,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["dbstatus",{"_index":183,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.debug",{"_index":199,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.ok",{"_index":197,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.status",{"_index":198,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["deal",{"_index":1030,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1079,"title":{},"body":{"license.html":{}}}],["debug",{"_index":178,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"controllers/BookController.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"controllers/OrderController.html":{},"classes/UpdateOrderDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["definitionsfactory",{"_index":532,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["definitionsfactory.generate",{"_index":533,"title":{},"body":{"interfaces/Flags.html":{}}}],["delete",{"_index":432,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":426,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["deleted",{"_index":847,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":825,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@getuser('userid",{"_index":846,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":828,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":929,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["dev/test/prod",{"_index":1002,"title":{},"body":{"index.html":{}}}],["development",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["distribute",{"_index":1039,"title":{},"body":{"license.html":{}}}],["docs",{"_index":991,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":863,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":641,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{}}}],["domain",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["domain.com",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["down",{"_index":794,"title":{},"body":{"injectables/PrismaService.html":{}}}],["driver",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.password",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/create",{"_index":437,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["dto/update",{"_index":439,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["due",{"_index":195,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["e",{"_index":757,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.g",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["e.params",{"_index":777,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.query",{"_index":766,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e2e",{"_index":740,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["edituser",{"_index":826,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituser(@getuser('userid",{"_index":840,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(userid",{"_index":831,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituserdto",{"_index":492,"title":{"classes/EditUserDto.html":{}},"body":{"classes/EditUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["em",{"_index":993,"title":{},"body":{"index.html":{}}}],["email",{"_index":281,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["emit",{"_index":733,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":719,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":723,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enough",{"_index":647,"title":{},"body":{"injectables/OrderService.html":{}}}],["env",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":1004,"title":{},"body":{"index.html":{}}}],["env.local",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["env.prod",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["envfile",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["error",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["error.code",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["event",{"_index":734,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":743,"title":{},"body":{"injectables/PrismaService.html":{}}}],["exception",{"_index":675,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.code",{"_index":684,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":665,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:16",{"_index":674,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.message",{"_index":683,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.message.replace(/\\n/g",{"_index":682,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception/prisma",{"_index":664,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["executioncontext",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":642,"title":{},"body":{"injectables/OrderService.html":{}}}],["expiration",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":545,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{}}}],["extract",{"_index":509,"title":{},"body":{"interfaces/Flags.html":{}}}],["extractflags",{"_index":876,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractflags(args",{"_index":512,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":577,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie(req",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":194,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{}}}],["false",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["fieldresolverenhancers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["fields",{"_index":695,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":970,"title":{},"body":{"index.html":{},"license.html":{}}}],["fill",{"_index":1005,"title":{},"body":{"index.html":{}}}],["find",{"_index":992,"title":{},"body":{"index.html":{}}}],["findall",{"_index":414,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findone",{"_index":415,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":444,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["findone(id",{"_index":422,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findone(userid",{"_index":857,"title":{},"body":{"injectables/UserService.html":{}}}],["first",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firstname",{"_index":310,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["fitness",{"_index":1063,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{}}}],["fixme:unsure",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["flag",{"_index":517,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys",{"_index":522,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys.foreach((key",{"_index":524,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagname",{"_index":518,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags",{"_index":501,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["flags.w",{"_index":538,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags.watch",{"_index":537,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[currentflag",{"_index":529,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[flagname",{"_index":520,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[key",{"_index":525,"title":{},"body":{"interfaces/Flags.html":{}}}],["followed",{"_index":947,"title":{},"body":{"index.html":{}}}],["following",{"_index":1048,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{}}}],["forbiddenexception(\"user",{"_index":640,"title":{},"body":{"injectables/OrderService.html":{}}}],["forbiddenexception('credentials",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('incorrect",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":728,"title":{},"body":{"injectables/PrismaService.html":{}}}],["format(query",{"_index":768,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formattedquery",{"_index":767,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formatter",{"_index":730,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["free",{"_index":1024,"title":{},"body":{"license.html":{}}}],["function",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{},"coverage.html":{}}}],["functional",{"_index":937,"title":{},"body":{"index.html":{}}}],["functions",{"_index":923,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1046,"title":{},"body":{"license.html":{}}}],["g",{"_index":998,"title":{},"body":{"index.html":{}}}],["generate",{"_index":987,"title":{},"body":{"index.html":{}}}],["generated",{"_index":990,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":423,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["get('health",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":838,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@cachekey('home')@cachettl(number.max_safe_integer",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["gethealth",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["getme",{"_index":827,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(@getuser",{"_index":839,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(user",{"_index":834,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":926,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":611,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser('userid",{"_index":615,"title":{},"body":{"controllers/OrderController.html":{}}}],["getusergraphql",{"_index":354,"title":{},"body":{"classes/AuthResolver-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":714,"title":{},"body":{"modules/PrismaModule.html":{}}}],["gqlexceptionfilter",{"_index":668,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1023,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"dependencies.html":{},"index.html":{}}}],["graphql:schema",{"_index":936,"title":{},"body":{"index.html":{}}}],["graphqlargumentshost",{"_index":673,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["graphqlcontext",{"_index":90,"title":{"classes/GraphqlContext.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqldatetime",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqldefinitionsfactory",{"_index":507,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["handled",{"_index":951,"title":{},"body":{"index.html":{}}}],["handling",{"_index":708,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["hash",{"_index":308,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["hashing",{"_index":977,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":984,"title":{},"body":{"index.html":{}}}],["here",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1022,"title":{},"body":{"license.html":{}}}],["hiro",{"_index":1020,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1068,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1094,"title":{},"body":{"properties.html":{}}}],["host",{"_index":671,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":680,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["hour",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["http",{"_index":955,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('signin",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["httponly",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["https",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com/fundamentals/lifecycle",{"_index":742,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://github.com/jsfame/api.bookstore.nas",{"_index":1095,"title":{},"body":{"properties.html":{}}}],["https://github.com/jsfame/api.bookstore.nas/issues",{"_index":1097,"title":{},"body":{"properties.html":{}}}],["https://jsfame.github.io/api.bookstore.nas",{"_index":994,"title":{},"body":{"index.html":{}}}],["https://www.prisma.io/blog/nestjs",{"_index":707,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["https://www.prisma.io/docs/concepts/database",{"_index":746,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://www.prisma.io/docs/reference/api",{"_index":685,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.bad_request",{"_index":692,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.conflict",{"_index":690,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":705,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["id",{"_index":298,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":755,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ignoreexpiration",{"_index":578,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implemented",{"_index":957,"title":{},"body":{"index.html":{}}}],["implements",{"_index":667,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{}}}],["implied",{"_index":1059,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["import('chalk",{"_index":759,"title":{},"body":{"injectables/PrismaService.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["imutation",{"_index":303,"title":{"classes/IMutation.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["included",{"_index":1053,"title":{},"body":{"license.html":{}}}],["including",{"_index":1033,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":724,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":154,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":694,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["inspect",{"_index":943,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":985,"title":{},"body":{"index.html":{}}}],["install",{"_index":997,"title":{},"body":{"index.html":{}}}],["installation",{"_index":995,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1000,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["interactions",{"_index":959,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":500,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":502,"title":{},"body":{"interfaces/Flags.html":{},"overview.html":{}}}],["iquery",{"_index":312,"title":{"classes/IQuery.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["isarray",{"_index":483,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["isemail",{"_index":287,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{}}}],["isemail()@isnotempty",{"_index":283,"title":{},"body":{"classes/AuthDto.html":{}}}],["isemail()@isoptional",{"_index":495,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isglobal",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":484,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isnotempty",{"_index":288,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{}}}],["isnotempty()@isint",{"_index":477,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{}}}],["isnotempty()@isstring",{"_index":475,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["iso",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["isoptional",{"_index":485,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isoptional()@isarray",{"_index":479,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["isoptional()@isint",{"_index":813,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["isstring",{"_index":486,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{}}}],["isstring()@isoptional",{"_index":497,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstrongpassword",{"_index":289,"title":{},"body":{"classes/AuthDto.html":{}}}],["isstrongpassword()@isnotempty",{"_index":285,"title":{},"body":{"classes/AuthDto.html":{}}}],["items",{"_index":944,"title":{},"body":{"index.html":{}}}],["jest",{"_index":981,"title":{},"body":{"index.html":{}}}],["john",{"_index":528,"title":{},"body":{"interfaces/Flags.html":{}}}],["joi",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(2",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('hiro@jwt#token",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().valid('dev",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":508,"title":{},"body":{"interfaces/Flags.html":{}}}],["join(process.cwd",{"_index":535,"title":{},"body":{"interfaces/Flags.html":{}}}],["jwt",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt_max_age",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt_secret",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtconstants",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":574,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":549,"title":{"classes/JwtGuard.html":{}},"body":{"classes/JwtGuard.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":324,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":318,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtstrategy.extractjwtfromcookie",{"_index":576,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["keywordcase",{"_index":773,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kind",{"_index":1058,"title":{},"body":{"license.html":{}}}],["kleur",{"_index":727,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["kleur.cyan(json.stringify(e.params",{"_index":781,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.green(formattedquery",{"_index":779,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.magenta(`${e.duration}ms",{"_index":783,"title":{},"body":{"injectables/PrismaService.html":{}}}],["laciferin@gmail.com",{"_index":1100,"title":{},"body":{"properties.html":{}}}],["landing",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["language",{"_index":769,"title":{},"body":{"injectables/PrismaService.html":{}}}],["lastname",{"_index":311,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["layers",{"_index":967,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":735,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":1072,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1069,"title":{},"body":{"license.html":{}}}],["license",{"_index":1016,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":1015,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1034,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1060,"title":{},"body":{"license.html":{}}}],["linesbetweenqueries",{"_index":775,"title":{},"body":{"injectables/PrismaService.html":{}}}],["literal",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["log",{"_index":752,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logevents",{"_index":731,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":795,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["long",{"_index":516,"title":{},"body":{"interfaces/Flags.html":{}}}],["manage",{"_index":941,"title":{},"body":{"index.html":{}}}],["management",{"_index":969,"title":{},"body":{"index.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(@getusergraphql",{"_index":358,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["me(user",{"_index":348,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["merchantability",{"_index":1062,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1037,"title":{},"body":{"license.html":{}}}],["message",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["methodologies",{"_index":946,"title":{},"body":{"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["milliseconds",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":922,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1014,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1036,"title":{},"body":{"license.html":{}}}],["modular",{"_index":948,"title":{},"body":{"index.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["morph",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["mutation",{"_index":336,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signin",{"_index":331,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signup",{"_index":333,"title":{},"body":{"classes/AuthResolver.html":{}}}],["name",{"_index":163,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["needs",{"_index":698,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"controllers/UserController.html":{}}}],["nest/swagger",{"_index":956,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":912,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":677,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"interfaces/Flags.html":{},"classes/PrismaClientExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":809,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":553,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["netpoint",{"_index":648,"title":{},"body":{"injectables/OrderService.html":{}}}],["new",{"_index":184,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1066,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":638,"title":{},"body":{"injectables/OrderService.html":{}}}],["notfoundexception(\"book",{"_index":644,"title":{},"body":{"injectables/OrderService.html":{}}}],["notice",{"_index":1051,"title":{},"body":{"license.html":{}}}],["npm",{"_index":996,"title":{},"body":{"index.html":{}}}],["null",{"_index":314,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":309,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":299,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object(dto",{"_index":963,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":1027,"title":{},"body":{"license.html":{}}}],["ok",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["onmoduledestroy",{"_index":741,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":720,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["order",{"_index":595,"title":{"classes/Order.html":{}},"body":{"classes/Order.html":{},"coverage.html":{}}}],["order.controller",{"_index":625,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":608,"title":{},"body":{"controllers/OrderController.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts",{"_index":489,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:6",{"_index":491,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:8",{"_index":814,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["order.service",{"_index":610,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":597,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":61,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orders",{"_index":599,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["orderservice",{"_index":609,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["otherwise",{"_index":1077,"title":{},"body":{"license.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outputas",{"_index":536,"title":{},"body":{"interfaces/Flags.html":{}}}],["over",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["overview",{"_index":1084,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":974,"title":{},"body":{"index.html":{}}}],["p2002",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["package",{"_index":881,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":433,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["parameters",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":776,"title":{},"body":{"injectables/PrismaService.html":{}}}],["parser",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":808,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{}}}],["partialtype(createbookdto",{"_index":811,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["partialtype(createorderdto",{"_index":815,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["particular",{"_index":1064,"title":{},"body":{"license.html":{}}}],["passport",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passport.js",{"_index":935,"title":{},"body":{"index.html":{}}}],["passportjs",{"_index":975,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":282,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"index.html":{}}}],["patch",{"_index":434,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":430,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["path",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["pattern",{"_index":964,"title":{},"body":{"index.html":{}}}],["payload",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["payload.email",{"_index":584,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":1021,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1044,"title":{},"body":{"license.html":{}}}],["person",{"_index":1026,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1045,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":961,"title":{},"body":{"index.html":{}}}],["playground",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["pnpm",{"_index":999,"title":{},"body":{"index.html":{}}}],["point",{"_index":471,"title":{},"body":{"classes/CreateBookDto.html":{},"injectables/OrderService.html":{}}}],["port",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1055,"title":{},"body":{"license.html":{}}}],["post",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["post('signin",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":770,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prefix",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["prerequisite",{"_index":1001,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.bookcreateinput",{"_index":456,"title":{},"body":{"injectables/BookService.html":{}}}],["prisma.bookupdateinput",{"_index":461,"title":{},"body":{"injectables/BookService.html":{}}}],["prisma.logdefinition",{"_index":732,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prisma.orderuncheckedcreateinput",{"_index":631,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.orderuncheckedupdateinput",{"_index":636,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":670,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["prisma.service",{"_index":715,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":356,"title":{},"body":{"classes/AuthResolver-1.html":{},"injectables/BookService.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{}}}],["prisma/client/runtime/library",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prisma/prisma.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":717,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientexceptionfilter",{"_index":661,"title":{"classes/PrismaClientExceptionFilter.html":{}},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["prismaclientknownrequesterror",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prismaclientunknownrequesterror",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prismamodule",{"_index":62,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":160,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{}}}],["process.argv.slice(2",{"_index":530,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["process.env.force_color",{"_index":753,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.mode",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["prod",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["production",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project",{"_index":988,"title":{},"body":{"index.html":{}}}],["promise",{"_index":305,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["properties",{"_index":280,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"properties.html":{}}}],["provided",{"_index":1056,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["publish",{"_index":1038,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1065,"title":{},"body":{"license.html":{}}}],["pwmatches",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":351,"title":{},"body":{"classes/AuthResolver-1.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["query('me",{"_index":349,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{}}}],["reference",{"_index":687,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["reference/error",{"_index":686,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["reflect",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":416,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["remove(@param('id",{"_index":448,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["remove(id",{"_index":425,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["replace",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["repo",{"_index":1013,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1098,"title":{},"body":{"properties.html":{}}}],["req",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{}}}],["req.cookies",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.cookies.token",{"_index":594,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies[tokenfield].length",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":588,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request",{"_index":543,"title":{},"body":{"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["requesttype",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestwithuser",{"_index":540,"title":{"classes/RequestWithUser.html":{}},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["required",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["res",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["res.clearcookie('token",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie(cookiename",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('token",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('user",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send(token",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolver",{"_index":337,"title":{},"body":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{}}}],["resolver('auth",{"_index":338,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('user",{"_index":357,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["resolvers",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{}}}],["response.status(httpstatus.conflict).json(payload",{"_index":700,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["response.status(httpstatus.internal_server_error).json",{"_index":704,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["restriction",{"_index":1032,"title":{},"body":{"license.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":586,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":1035,"title":{},"body":{"license.html":{}}}],["run",{"_index":1007,"title":{},"body":{"index.html":{}}}],["running",{"_index":182,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["rxjs",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["salts",{"_index":978,"title":{},"body":{"index.html":{}}}],["schema",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["sec",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["secret",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["select",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["sell",{"_index":1042,"title":{},"body":{"license.html":{}}}],["sent",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["separate",{"_index":952,"title":{},"body":{"index.html":{}}}],["separating",{"_index":953,"title":{},"body":{"index.html":{}}}],["server",{"_index":930,"title":{},"body":{"index.html":{}}}],["service",{"_index":841,"title":{},"body":{"controllers/UserController.html":{}}}],["services",{"_index":958,"title":{},"body":{"index.html":{}}}],["servicestatus",{"_index":173,"title":{"classes/ServiceStatus.html":{}},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["set",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["shall",{"_index":1052,"title":{},"body":{"license.html":{}}}],["short",{"_index":521,"title":{},"body":{"interfaces/Flags.html":{}}}],["signed",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signin(@args('data",{"_index":341,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signin(@body",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(data",{"_index":306,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["signin(dto",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signtoken",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(userid",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signup(@args('data",{"_index":339,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signup(@body",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(data",{"_index":304,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["signup(dto",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signuppayload",{"_index":297,"title":{"classes/SignUpPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["software",{"_index":1028,"title":{},"body":{"license.html":{}}}],["solana/web3.js",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["something",{"_index":842,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specs",{"_index":938,"title":{},"body":{"index.html":{}}}],["sql",{"_index":729,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["src/**/*.graphql",{"_index":534,"title":{},"body":{"interfaces/Flags.html":{}}}],["src/.../app.module.ts",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generate",{"_index":925,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":1103,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.service.ts",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.dto.ts",{"_index":539,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["src/app.dto.ts:11",{"_index":541,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:12",{"_index":542,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:8",{"_index":797,"title":{},"body":{"classes/RequestWithUser.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":156,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":161,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":169,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:4",{"_index":799,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:6",{"_index":801,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:7",{"_index":802,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:8",{"_index":800,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/auth/auth.controller.ts",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":327,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:16",{"_index":334,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:23",{"_index":332,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:9",{"_index":329,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.service.ts",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/get",{"_index":872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":279,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":286,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":284,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/guard/jwt.guard.ts",{"_index":550,"title":{},"body":{"classes/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guard/jwt.guard.ts:3",{"_index":551,"title":{},"body":{"classes/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:24",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:35",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/book/book.controller.ts",{"_index":411,"title":{},"body":{"controllers/BookController.html":{},"coverage.html":{}}}],["src/book/book.controller.ts:11",{"_index":420,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:16",{"_index":421,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:21",{"_index":424,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:26",{"_index":431,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:31",{"_index":427,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.module.ts",{"_index":452,"title":{},"body":{"modules/BookModule.html":{}}}],["src/book/book.service.ts",{"_index":454,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{}}}],["src/book/book.service.ts:13",{"_index":458,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:19",{"_index":459,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:27",{"_index":462,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:34",{"_index":460,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:6",{"_index":455,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:9",{"_index":457,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/dto/create",{"_index":468,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{}}}],["src/book/dto/update",{"_index":807,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/book/entities/book.entity.ts",{"_index":409,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/generate",{"_index":503,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/graphql.ts",{"_index":292,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/graphql.ts:12",{"_index":293,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:13",{"_index":294,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:17",{"_index":325,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/graphql.ts:21",{"_index":805,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:22",{"_index":804,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:23",{"_index":803,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:24",{"_index":806,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:28",{"_index":547,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:30",{"_index":546,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:34",{"_index":820,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:35",{"_index":817,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:36",{"_index":819,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:37",{"_index":818,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:38",{"_index":821,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:39",{"_index":816,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:40",{"_index":822,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:44",{"_index":548,"title":{},"body":{"classes/IQuery.html":{}}}],["src/main.ts",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":488,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/order/dto/update",{"_index":812,"title":{},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":596,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/order.controller.ts",{"_index":598,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:23",{"_index":601,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:34",{"_index":602,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:39",{"_index":603,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:44",{"_index":606,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:49",{"_index":604,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":624,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":628,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:15",{"_index":632,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:48",{"_index":633,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:54",{"_index":634,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:62",{"_index":637,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:69",{"_index":635,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":629,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma",{"_index":662,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["src/prisma/prisma.module.ts",{"_index":713,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":716,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.service.ts:29",{"_index":721,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:71",{"_index":726,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:81",{"_index":725,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:88",{"_index":722,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/user/dto/edit",{"_index":493,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":823,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:23",{"_index":836,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:29",{"_index":833,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":830,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":852,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.resolver.ts",{"_index":344,"title":{},"body":{"classes/AuthResolver-1.html":{},"coverage.html":{}}}],["src/user/user.resolver.ts:17",{"_index":350,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["src/user/user.resolver.ts:9",{"_index":347,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["src/user/user.service.ts",{"_index":853,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:17",{"_index":856,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:32",{"_index":855,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":854,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":858,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":748,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert",{"_index":744,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert=root.crt",{"_index":745,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":1008,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1009,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1010,"title":{},"body":{"index.html":{}}}],["started",{"_index":927,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["status",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{}}}],["statuscode",{"_index":691,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["stdout",{"_index":736,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":989,"title":{},"body":{"index.html":{}}}],["sub",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":1047,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1040,"title":{},"body":{"license.html":{}}}],["subscriptions",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["substantial",{"_index":1054,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":190,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["super",{"_index":555,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["super.catch(exception",{"_index":702,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["supertest",{"_index":982,"title":{},"body":{"index.html":{}}}],["support",{"_index":1081,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1082,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["t",{"_index":313,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["tabwidth",{"_index":771,"title":{},"body":{"injectables/PrismaService.html":{}}}],["tags",{"_index":472,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["taken",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["tear",{"_index":793,"title":{},"body":{"injectables/PrismaService.html":{}}}],["technical",{"_index":945,"title":{},"body":{"index.html":{}}}],["test",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["test').default('dev",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["test:covlicense",{"_index":1012,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1011,"title":{},"body":{"index.html":{}}}],["testing",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["tests",{"_index":980,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":786,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$executerawunsafe(\"set",{"_index":787,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":790,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('query",{"_index":756,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction",{"_index":792,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethealth",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authcontroller.signin(dto",{"_index":342,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authcontroller.signup(dto",{"_index":340,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.signin(dto",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.bookservice.create(createbookdto",{"_index":442,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findall",{"_index":443,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findone(createorderdto.bookid",{"_index":643,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.bookservice.findone(id",{"_index":445,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.remove(+id",{"_index":449,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.update(+id",{"_index":447,"title":{},"body":{"controllers/BookController.html":{}}}],["this.config.get('jwt_secret",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.jwt.signasync(payload",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create",{"_index":616,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":618,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":619,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.remove(+id",{"_index":621,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.update(+id",{"_index":620,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma",{"_index":186,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["this.prisma.$transaction",{"_index":652,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.book.create",{"_index":463,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.delete",{"_index":467,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.findmany",{"_index":464,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.findunique",{"_index":465,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.update",{"_index":466,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.order.create",{"_index":655,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.delete",{"_index":660,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":657,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":658,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.update",{"_index":659,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.user.create",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.delete",{"_index":861,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":653,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["this.signtoken(user.id",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.deletemany",{"_index":796,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.usercontroller.getme(user",{"_index":359,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["this.userservice.deleteuser(userid",{"_index":848,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituser(userid",{"_index":845,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(createorderdto.customerid",{"_index":639,"title":{},"body":{"injectables/OrderService.html":{}}}],["through",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{}}}],["throws",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["time",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["timezone",{"_index":788,"title":{},"body":{"injectables/PrismaService.html":{}}}],["title",{"_index":473,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["todo",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["token.access_token",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenfield",{"_index":589,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":976,"title":{},"body":{"index.html":{}}}],["tools",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":934,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1076,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":651,"title":{},"body":{"injectables/OrderService.html":{}}}],["transaction.at",{"_index":656,"title":{},"body":{"injectables/OrderService.html":{}}}],["transfer",{"_index":962,"title":{},"body":{"index.html":{}}}],["transferring",{"_index":965,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["transformers",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["transport",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["try",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":754,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["type",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1101,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typepaths",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Flags.html":{}}}],["types",{"_index":810,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":933,"title":{},"body":{"index.html":{}}}],["typings.ts",{"_index":504,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":688,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["unit",{"_index":979,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":168,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["up",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["update",{"_index":417,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["update(@param('id",{"_index":446,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["update(id",{"_index":428,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["updatebookdto",{"_index":429,"title":{"classes/UpdateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":301,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["updateorderdto",{"_index":605,"title":{"classes/UpdateOrderDto.html":{}},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["upper",{"_index":774,"title":{},"body":{"injectables/PrismaService.html":{}}}],["url",{"_index":750,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["useguards",{"_index":607,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":613,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete",{"_index":829,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get('me",{"_index":835,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@patch",{"_index":832,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":307,"title":{"classes/User.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":353,"title":{},"body":{"classes/AuthResolver-1.html":{},"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":494,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":498,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:14",{"_index":499,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:6",{"_index":496,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.email",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.hash",{"_index":860,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":654,"title":{},"body":{"injectables/OrderService.html":{}}}],["user.point",{"_index":646,"title":{},"body":{"injectables/OrderService.html":{}}}],["user.service",{"_index":352,"title":{},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.service",{"_index":626,"title":{},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{}}}],["user[data",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":346,"title":{"controllers/UserController.html":{}},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":63,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userpoint",{"_index":649,"title":{},"body":{"injectables/OrderService.html":{}}}],["users",{"_index":824,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":345,"title":{"injectables/UserService.html":{}},"body":{"classes/AuthResolver-1.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":932,"title":{},"body":{"index.html":{}}}],["utility",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":960,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":290,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["value",{"_index":527,"title":{},"body":{"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1104,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1006,"title":{},"body":{"index.html":{}}}],["version",{"_index":1089,"title":{},"body":{"properties.html":{}}}],["void",{"_index":676,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["w",{"_index":505,"title":{},"body":{"interfaces/Flags.html":{}}}],["walletid",{"_index":544,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["ware",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["warn",{"_index":737,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":1061,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1057,"title":{},"body":{"license.html":{}}}],["watch",{"_index":506,"title":{},"body":{"interfaces/Flags.html":{},"index.html":{}}}],["web2",{"_index":1091,"title":{},"body":{"properties.html":{}}}],["whatever",{"_index":585,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whether",{"_index":1073,"title":{},"body":{"license.html":{}}}],["whitelist:true",{"_index":844,"title":{},"body":{"controllers/UserController.html":{}}}],["without",{"_index":1031,"title":{},"body":{"license.html":{}}}],["work",{"_index":739,"title":{},"body":{"injectables/PrismaService.html":{}}}],["writer",{"_index":474,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["ws",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHealth\n                            \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheTTL(undefined)@Get('health')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@CacheKey('home')@CacheTTL(Number.MAX_SAFE_INTEGER)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { CacheInterceptor, CacheKey, CacheTTL } from '@nestjs/cache-manager'\n\n@Controller()\n@UseInterceptors(CacheInterceptor)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @CacheKey('home')\n  @CacheTTL(Number.MAX_SAFE_INTEGER) //default is just 1 sec\n  getHello() {\n    return this.appService.getHello()\n  }\n\n  @CacheTTL(5 * 1000)\n  @Get('health')\n  getHealth() {\n    return this.appService.getHealth()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BookModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { ConfigModule } from '@nestjs/config'\nimport { AuthModule } from './auth/auth.module'\nimport Joi from 'joi'\nimport { CacheModule } from '@nestjs/cache-manager'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { ApolloServerPluginLandingPageGraphQLPlayground } from '@apollo/server-plugin-landing-page-graphql-playground'\nimport { GraphQLDateTime } from 'graphql-iso-date'\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'\nimport { AppController } from './app.controller'\nimport { GraphqlContext } from './app.dto'\nimport { UserModule } from './user/user.module'\nimport { PrismaModule } from './prisma/prisma.module'\nimport { BookModule } from './book/book.module'\nimport { OrderModule } from './order/order.module'\n\nlet mode = process.env.MODE\nlet envFile = '.env'\n\nswitch (mode) {\n  case 'test':\n    envFile = '.env.test'\n    process.env.NODE_ENV = 'testing'\n    break\n  case 'prod':\n    process.env.NODE_ENV = 'production'\n    envFile = '.env.prod'\n    break\n  default:\n    mode = 'dev'\n    process.env.NODE_ENV = 'development'\n    envFile = '.env.local'\n}\n\nconsole.debug({ mode, envFile })\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [envFile, '.env'],\n      isGlobal: true,\n      cache: true,\n      validationSchema: Joi.object({\n        MODE: Joi.string().valid('dev', 'prod', 'test').default('dev'),\n        PORT: Joi.number().default(3000),\n        DATABASE_URL: Joi.string(),\n        JWT_SECRET: Joi.string().default('Hiro@JWT#TOKEN$'),\n        JWT_MAX_AGE: Joi.number().default(2 * 60 * 60 * 1000),\n      }),\n    }),\n    CacheModule.register({ isGlobal: true }),\n    GraphQLModule.forRoot({\n      context: ({ req, res }: GraphqlContext) => ({ req, res }), //required for cookies\n\n      fieldResolverEnhancers: ['interceptors'], //FIXME:unsure\n\n      autoSchemaFile: false, // schema-first\n      playground: false,\n      driver: ApolloDriver,\n      plugins: [ApolloServerPluginLandingPageGraphQLPlayground()],\n      typePaths: ['./**/*.graphql'],\n      resolvers: { DateTime: GraphQLDateTime },\n      subscriptions: {\n        'graphql-ws': true,\n        'subscriptions-transport-ws': true,\n      },\n    }),\n    PrismaModule,\n    AuthModule,\n    UserModule,\n    BookModule,\n    OrderModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHealth\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Res } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { AuthDto } from './dto'\nimport { Response } from 'express'\nimport { ConfigService } from '@nestjs/config'\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService, private config: ConfigService) {}\n\n  @Post('signup')\n  signup(@Body() dto: AuthDto) {\n    return this.authService.signup(dto)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signin(@Body() dto: AuthDto, @Res() res: Response) {\n    const token = await this.authService.signin(dto)\n\n    /*    res.cookie('user', dto.email, { //TODO:\n      // Set cookie options here (e.g., expiration, domain, path, etc.)\n      maxAge: 3600000, // Cookie expiration time in milliseconds (1 hour)\n      httpOnly: true, // Cookie accessible only through HTTP(S) requests\n      secure: true, // Cookie sent only over HTTPS if true\n      signed: true,\n    })*/\n    // const cookies = req.cookies; //TODO: middle ware to clear the cookies when signin\n    // TODO: utility function to clear and set cookie\n    // for (let cookieName in cookies) {\n    //   res.clearCookie(cookieName); // Replace '.your-domain.com' with your actual domain\n    // }\n    res.clearCookie('token')\n    res.cookie('token', token.access_token, {\n      maxAge: this.config.get('JWT_SECRET') * 1000 || 60 * 60 * 1000,\n      secure: true,\n      httpOnly: true,\n      // signed: true,\n    })\n\n    res.send(token)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsStrongPassword } from 'class-validator'\n\nexport class AuthDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string\n\n  @IsStrongPassword()\n  @IsNotEmpty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInput.html":{"url":"classes/AuthInput.html","title":"class - AuthInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PrismaModule } from '../prisma/prisma.module'\nimport { JwtStrategy } from './strategy'\n\n@Module({\n  imports: [JwtModule.register({}), PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPayload.html":{"url":"classes/AuthPayload.html","title":"class - AuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authController: AuthController)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authController\n                                                  \n                                                        \n                                                                        AuthController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(dto: AuthDto, ctx: GraphqlContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signIn')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n                                    \n                                                GraphqlContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signUp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql'\nimport { AuthService } from './auth.service'\nimport { AuthController } from './auth.controller'\nimport { GraphqlContext } from '../app.dto'\nimport { AuthDto } from './dto'\nimport { AuthInput } from '../graphql'\n\n@Resolver('Auth')\nexport class AuthResolver {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authController: AuthController,\n  ) {}\n\n  @Mutation('signUp')\n  signUp(@Args('data') dto: AuthDto) {\n    console.debug({ dto })\n\n    return this.authController.signup(dto as AuthInput)\n  }\n\n  @Mutation('signIn')\n  signIn(@Args('data') dto: AuthDto, @Context() ctx: GraphqlContext) {\n    console.debug({ dto })\n\n    return this.authController.signin(dto as AuthInput, ctx.res)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver-1.html":{"url":"classes/AuthResolver-1.html","title":"class - AuthResolver-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, userService: UserService, userController: UserController)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userController\n                                                  \n                                                        \n                                                                        UserController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { UserService } from './user.service'\nimport { UserController } from './user.controller'\nimport { GetUserGraphql } from '../auth/decorator'\nimport { User } from '@prisma/client'\n\n@Resolver('User')\nexport class AuthResolver {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly userService: UserService,\n    private readonly userController: UserController,\n  ) {}\n\n  @Query('me')\n  me(@GetUserGraphql() user: User) {\n    return this.userController.getMe(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userId: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { AuthDto } from './dto'\n\nimport argon from 'argon2'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwt: JwtService,\n    private config: ConfigService,\n  ) {}\n\n  async signup(dto: AuthDto) {\n    const hash = await argon.hash(dto.password)\n\n    try {\n      const user = await this.prisma.user.create({\n        data: {\n          email: dto.email,\n          hash: hash,\n        },\n        select: {\n          //FIXME: use transformers\n          id: true,\n          email: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      return user\n    } catch (error) {\n      console.error({\n        code: error.code,\n        error,\n      })\n      if (\n        error instanceof PrismaClientKnownRequestError ||\n        PrismaClientUnknownRequestError\n      ) {\n        if (error.code == 'P2002') {\n          throw new ForbiddenException('credentials taken')\n        }\n      }\n      throw error\n    }\n  }\n\n  async signin(dto: AuthDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email: dto.email,\n      },\n    })\n\n    if (!user) throw new ForbiddenException('incorrect credentials')\n\n    const pwMatches = await argon.verify(user.hash, dto.password)\n\n    if (!pwMatches) throw new ForbiddenException('invalid credentials')\n\n    return this.signToken(user.id, user.email)\n  }\n\n  async signToken(userId: number, email: string) {\n    const payload = {\n      sub: userId,\n      email,\n    }\n    const secret = this.config.get('JWT_SECRET')\n\n    return {\n      access_token: await this.jwt.signAsync(payload, {\n        expiresIn: '1hr', //TODO:\n        secret: secret,\n      }),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/entities/book.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Book {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookController.html":{"url":"controllers/BookController.html","title":"controller - BookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createBookDto: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateBookDto: UpdateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common'\nimport { BookService } from './book.service'\nimport { CreateBookDto } from './dto/create-book.dto'\nimport { UpdateBookDto } from './dto/update-book.dto'\n\n@Controller('books')\nexport class BookController {\n  constructor(private readonly bookService: BookService) {}\n\n  @Post()\n  create(@Body() createBookDto: CreateBookDto) {\n    return this.bookService.create(createBookDto)\n  }\n\n  @Get()\n  findAll() {\n    return this.bookService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.bookService.findOne(id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateBookDto: UpdateBookDto) {\n    return this.bookService.update(+id, updateBookDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.bookService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookModule.html":{"url":"modules/BookModule.html","title":"module - BookModule","body":"\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\n\nBookService\n\nBookService\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/book/book.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { BookService } from './book.service'\nimport { BookController } from './book.controller'\n\n@Module({\n  controllers: [BookController],\n  providers: [BookService],\n})\nexport class BookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/book/book.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBookDto: Prisma.BookCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                Prisma.BookCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBookDto: Prisma.BookUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                Prisma.BookUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Prisma } from '@prisma/client'\nimport { PrismaService } from '../prisma/prisma.service'\n\n@Injectable()\nexport class BookService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(createBookDto: Prisma.BookCreateInput) {\n    return this.prisma.book.create({ data: createBookDto })\n  }\n\n  findAll() {\n    return this.prisma.book.findMany({\n      where: {},\n    })\n  }\n\n  findOne(id: number) {\n    return this.prisma.book.findUnique({\n      where: {\n        id,\n      },\n    })\n  }\n\n  update(id: number, updateBookDto: Prisma.BookUpdateInput) {\n    return this.prisma.book.update({\n      where: { id },\n      data: updateBookDto,\n    })\n  }\n\n  remove(id: number) {\n    return this.prisma.book.delete({\n      where: { id },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/create-book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                coverImage\n                            \n                            \n                                    \n                                    \n                                point\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                writer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        coverImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        point\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        writer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsInt, IsNotEmpty, IsOptional, IsString } from 'class-validator'\n\nexport class CreateBookDto {\n  @IsNotEmpty()\n  @IsString()\n  title: string\n\n  @IsNotEmpty()\n  @IsString()\n  writer: string\n\n  @IsNotEmpty()\n  @IsString()\n  coverImage: string\n\n  @IsNotEmpty()\n  @IsInt()\n  point: number\n\n  @IsOptional()\n  @IsArray()\n  tags?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bookId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bookId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty } from 'class-validator'\n\nexport class CreateOrderDto {\n  @IsNotEmpty()\n  @IsInt()\n  bookId: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserDto.html":{"url":"classes/EditUserDto.html","title":"class - EditUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/edit-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator'\n\nexport class EditUserDto {\n  @IsEmail()\n  @IsOptional()\n  email?: string\n\n  @IsString()\n  @IsOptional()\n  firstName?: string\n\n  @IsString()\n  @IsOptional()\n  lastName?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Flags.html":{"url":"interfaces/Flags.html","title":"interface - Flags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Flags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generate-typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            w\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        w\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        w:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDefinitionsFactory } from '@nestjs/graphql'\nimport { join } from 'path'\n\ninterface Flags {\n  watch?: boolean\n  w?: boolean\n}\n\n// Function to extract flags from the arguments array\nfunction extractFlags(args) {\n  const flags: Flags = {}\n  let currentFlag = null\n\n  for (const arg of args) {\n    if (arg.startsWith('--')) {\n      // Long flag (e.g., --watch)\n      const flagName = arg.slice(2)\n      flags[flagName] = true\n      currentFlag = flagName\n    } else if (arg.startsWith('-')) {\n      // Short flag (e.g., -w)\n      const flagKeys = arg.slice(1).split('')\n      flagKeys.forEach((key) => {\n        flags[key] = true\n      })\n      currentFlag = arg.slice(-1)\n    } else if (currentFlag) {\n      // Flag value (e.g., --name John)\n      flags[currentFlag] = arg\n      currentFlag = null\n    }\n  }\n\n  return flags\n}\n\nconst args = process.argv.slice(2)\nconst flags: Flags = extractFlags(args)\n\nconsole.log('Flags:', flags)\n\nconst definitionsFactory = new GraphQLDefinitionsFactory()\ndefinitionsFactory.generate({\n  typePaths: ['./src/**/*.graphql'],\n  path: join(process.cwd(), 'src/graphql.ts'),\n  outputAs: 'class',\n  watch: flags.watch || flags.w,\n})\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphqlContext.html":{"url":"classes/GraphqlContext.html","title":"class - GraphqlContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphqlContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                req\n                            \n                            \n                                res\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        req\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RequestWithUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Response\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IMutation.html":{"url":"classes/IMutation.html","title":"class - IMutation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IMutation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SignUpPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IQuery.html":{"url":"classes/IQuery.html","title":"class - IQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me()\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User | Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtGuard.html":{"url":"classes/JwtGuard.html","title":"class - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport'\n\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtConstants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                extractJWTFromCookie\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        extractJWTFromCookie\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractJWTFromCookie(req: RequestType)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            RequestType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { userId: number; email: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { ConfigService } from '@nestjs/config'\nimport { PrismaService } from '../../prisma/prisma.service'\nimport { Request as RequestType } from 'express'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  private jwtConstants: any\n\n  constructor(private config: ConfigService, private prisma: PrismaService) {\n    const mode = config.get('MODE') || 'dev'\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        JwtStrategy.extractJWTFromCookie,\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ]),\n      ignoreExpiration: mode == 'dev' || mode == 'test',\n      secretOrKey: config.get('JWT_SECRET'),\n    })\n  }\n\n  validate(payload: { sub: number; email: string }) {\n    const user = this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    })\n    if (!user) return null //throws the 401 error\n\n    return { userId: payload.sub, email: payload.email }\n    // whatever is returned is appended to req.user\n  }\n  private static extractJWTFromCookie(req: RequestType): string | null {\n    const tokenField = 'token'\n    console.debug(req.cookies)\n    if (req.cookies && tokenField in req.cookies && req.cookies[tokenField].length > 0) {\n      console.log('extracted cookie')\n      return req.cookies.token\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Order {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: number, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateOrderDto: UpdateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                UpdateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common'\nimport { CreateOrderDto } from './dto/create-order.dto'\nimport { OrderService } from './order.service'\nimport { UpdateOrderDto } from './dto/update-order.dto'\nimport { GetUser } from '../auth/decorator'\nimport { JwtGuard } from '../auth/guard'\n\n@UseGuards(JwtGuard)\n@Controller('orders')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  async create(\n    @GetUser('userId') userId: number,\n    @Body() createOrderDto: CreateOrderDto,\n  ) {\n    return this.orderService.create({\n      ...createOrderDto,\n      customerId: userId,\n    })\n  }\n\n  @Get()\n  findAll() {\n    return this.orderService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.orderService.findOne(id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateOrderDto: UpdateOrderDto) {\n    return this.orderService.update(+id, updateOrderDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.orderService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nBookService\n\nBookService\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nBookService->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nUserService\n\nUserService\n\nOrderModule -->\n\nUserService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                        \n                            OrderService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { OrderService } from './order.service'\nimport { OrderController } from './order.controller'\nimport { UserService } from '../user/user.service'\nimport { BookService } from '../book/book.service'\n\n@Module({\n  controllers: [OrderController],\n  providers: [OrderService, UserService, BookService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, userService: UserService, bookService: BookService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookService\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createOrderDto: Prisma.OrderUncheckedCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                Prisma.OrderUncheckedCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateOrderDto: Prisma.OrderUncheckedUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                Prisma.OrderUncheckedUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, NotFoundException } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { Prisma } from '@prisma/client'\nimport { UserService } from '../user/user.service'\nimport { BookService } from '../book/book.service'\n\n@Injectable()\nexport class OrderService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly userService: UserService,\n    private readonly bookService: BookService,\n  ) {}\n\n  async create(createOrderDto: Prisma.OrderUncheckedCreateInput) {\n    const user = await this.userService.findOne(createOrderDto.customerId)\n    if (!user) {\n      throw new ForbiddenException(\"user doesn't exist\")\n    }\n\n    const book = await this.bookService.findOne(createOrderDto.bookId)\n    if (!book) {\n      throw new NotFoundException(\"book: doesn't exist\")\n    }\n\n    if (book.point > user.point)\n      throw new ForbiddenException(\"user doesn't have enough point\")\n\n    const netPoint = user.point - book.point\n\n    console.debug({ netPoint, userPoint: user.point, bookPoint: book.point })\n\n    const transaction = await this.prisma.$transaction([\n      this.prisma.user.update({\n        where: {\n          id: user.id,\n        },\n        data: {\n          point: netPoint,\n        },\n      }),\n      this.prisma.order.create({ data: createOrderDto }),\n    ])\n\n    return transaction.at(-1)\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      where: {},\n    })\n  }\n\n  findOne(id: number) {\n    return this.prisma.order.findUnique({\n      where: {\n        id,\n      },\n    })\n  }\n\n  update(id: number, updateOrderDto: Prisma.OrderUncheckedUpdateInput) {\n    return this.prisma.order.update({\n      where: { id },\n      data: updateOrderDto,\n    })\n  }\n\n  remove(id: number) {\n    return this.prisma.order.delete({\n      where: { id },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaClientExceptionFilter.html":{"url":"classes/PrismaClientExceptionFilter.html","title":"class - PrismaClientExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaClientExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma-client-exception/prisma-client-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n            \n                Implements\n            \n            \n                        GqlExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError, host: ArgumentsHost | GraphQLArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma-client-exception/prisma-client-exception.filter.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost | GraphQLArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpStatus } from '@nestjs/common'\nimport { BaseExceptionFilter } from '@nestjs/core'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\nimport { Prisma } from '@prisma/client'\nimport { Response } from 'express'\nimport { GqlExceptionFilter, GraphQLArgumentsHost } from '@nestjs/graphql'\n\n@Catch(PrismaClientUnknownRequestError, PrismaClientKnownRequestError)\nexport class PrismaClientExceptionFilter\n  extends BaseExceptionFilter\n  implements GqlExceptionFilter\n{\n  catch(\n    exception: Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError,\n    host: ArgumentsHost | GraphQLArgumentsHost,\n  ) {\n    console.error(exception.message)\n    const ctx = host.switchToHttp()\n    const response = ctx.getResponse()\n    // const message = exception.message.replace(/\\n/g, '')\n    const message = exception.message\n    switch (exception.code) {\n      case 'P2002': {\n        // https://www.prisma.io/docs/reference/api-reference/error-reference\n        // unique constraint failed\n        // const status = HttpStatus.CONFLICT\n        const payload = {\n          statusCode: HttpStatus.BAD_REQUEST,\n          message: 'DB_ERROR:Unique input fields required',\n          error: message, // You can customize the error message based on your needs\n        }\n\n        console.error('DB:caught P2002 error')\n        response.status(HttpStatus.CONFLICT).json(payload) //FIXME\n        break\n      }\n      default:\n        // default 500 error code\n        // super.catch(exception, host)\n        console.error('DB Error:', exception.code)\n        response.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n          statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n          message: 'Database Error',\n          error: message, // You can customize the error message based on your needs\n        })\n        break\n    }\n  }\n}\n// https://www.prisma.io/blog/nestjs-prisma-error-handling-7D056s1kOop2\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common'\nimport { PrismaService } from './prisma.service'\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDb\n                            \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDb\n                        \n                    \n                \n            \n            \n                \ncleanDb()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common'\nimport { Prisma, PrismaClient } from '@prisma/client'\nimport { ConfigService } from '@nestjs/config'\nimport kleur from 'kleur'\nimport { format } from 'sql-formatter'\n\nconst logEvents: Prisma.LogDefinition[] = [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n\nlet DB_CONNECTED = false\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  // FIXME doesn't work for e2e OnModuleDestroy{\n  // https://docs.nestjs.com/fundamentals/lifecycle-events\n\n  constructor(config: ConfigService) {\n    const sslcert = '?sslcert=root.crt'\n    //https://www.prisma.io/docs/concepts/database-connectors/postgresql#configuring-an-ssl-connection\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL') + sslcert,\n        },\n      },\n      log: logEvents,\n    })\n\n    process.env.FORCE_COLOR = 'true'\n\n    // @ts-ignore\n    this.$on('query', async (e: any) => {\n      if (config.get('MODE') != 'dev') {\n        return\n      }\n\n      // const chalk = await import('chalk')\n      // console.log(chalk.yellow('Query: ') + chalk.green(e.query))\n      // console.log(chalk.yellow('Params: ') + chalk.cyan(JSON.stringify(e.params)))\n      // console.log(chalk.yellow('Duration: ') + chalk.magenta(`${e.duration}ms`))\n      const query = e.query\n\n      const formattedQuery = format(query, {\n        language: 'postgresql',\n        tabWidth: 2,\n        keywordCase: 'upper',\n        linesBetweenQueries: 2,\n        params: e.params || [],\n      })\n      console.log(kleur.yellow('Query: ') + kleur.green(formattedQuery))\n      console.log(kleur.yellow('Params: ') + kleur.cyan(JSON.stringify(e.params)))\n      console.log(kleur.yellow('Duration: ') + kleur.magenta(`${e.duration}ms`))\n    })\n  }\n  async onModuleInit() {\n    if (DB_CONNECTED) return\n\n    console.info(new Date(), 'connecting to the database')\n    await this.$connect()\n    await this.$executeRawUnsafe(\"SET timezone = 'Asia/Kolkata'\")\n\n    DB_CONNECTED = true\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    // @ts-ignore\n    this.$on('beforeExit', async () => {\n      await app.close()\n    })\n  }\n\n  cleanDb() {\n    return this.$transaction([\n      //tear down logic\n      this.user.deleteMany(),\n    ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestWithUser.html":{"url":"classes/RequestWithUser.html","title":"class - RequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceStatus.html":{"url":"classes/ServiceStatus.html","title":"class - ServiceStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ok: boolean, status: string, debug: any)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ok\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        debug\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OK'\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpPayload.html":{"url":"classes/SignUpPayload.html","title":"class - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/update-book.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateBookDto } from './create-book.dto'\n\nexport class UpdateBookDto extends PartialType(CreateBookDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/update-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                bookId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        bookId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/update-order.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateOrderDto } from './create-order.dto'\nimport { IsInt, IsOptional } from 'class-validator'\n\nexport class UpdateOrderDto extends PartialType(CreateOrderDto) {\n  @IsOptional()\n  @IsInt()\n  bookId?: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                hash\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                editUser\n                            \n                            \n                                    \n                                    \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Patch()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Injectable,\n  Patch,\n  UseGuards,\n} from '@nestjs/common'\nimport { JwtGuard } from '../auth/guard'\nimport { GetUser } from '../auth/decorator'\nimport { User } from '@prisma/client'\nimport { EditUserDto } from './dto'\nimport { UserService } from './user.service'\n\n@Injectable()\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtGuard)\n  @Get('me')\n  getMe(@GetUser() user: User) {\n    return user\n  }\n\n  @UseGuards(JwtGuard)\n  @Patch()\n  editUser(@GetUser('userId') userId: number, @Body() dto: EditUserDto) {\n    //needs service\n    // we will get something in api request due to whitelist:true\n    return this.userService.editUser(userId, dto)\n  }\n\n  @UseGuards(JwtGuard)\n  @Delete()\n  async deleteUser(@GetUser('userId') userId: number) {\n    return {\n      message: 'user deleted',\n      user: await this.userService.deleteUser(userId),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserController\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserController } from './user.controller'\nimport { UserService } from './user.service'\nimport { AuthModule } from '../auth/auth.module'\nimport { PrismaModule } from '../prisma/prisma.module'\n\n@Module({\n  imports: [AuthModule, PrismaModule],\n  controllers: [UserController],\n  providers: [UserService, UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { EditUserDto } from './dto'\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  findOne(userId: number) {\n    return this.prisma.user.findUnique({\n      where: {\n        id: userId,\n      },\n    })\n  }\n\n  async editUser(userId: number, dto: EditUserDto) {\n    console.log({ userId, dto })\n    const user = await this.prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: {\n        ...dto,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n\n  async deleteUser(userId: number) {\n    const user = await this.prisma.user.delete({\n      where: {\n        id: userId,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            GraphqlContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            RequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            class\n            ServiceStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUserGraphql\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            class\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/book/book.controller.ts\n            \n            controller\n            BookController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/book/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/book/entities/book.entity.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            interface\n            Flags\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            function\n            extractFlags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            args\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            definitionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            flags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IMutation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            SignUpPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/order/dto/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/prisma-client-exception/prisma-client-exception.filter.ts\n            \n            class\n            PrismaClientExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            DB_CONNECTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            logEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/edit-user.dto.ts\n            \n            class\n            EditUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            injectable\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.7.5\n        \n            @nestjs/apollo : ^12.0.7\n        \n            @nestjs/cache-manager : ^2.0.1\n        \n            @nestjs/common : ^10.0.5\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.5\n        \n            @nestjs/graphql : ^12.0.8\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.5\n        \n            @solana/web3.js : ^1.78.0\n        \n            argon2 : ^0.30.3\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            graphql : 16.7.1\n        \n            graphql-iso-date : ^3.6.1\n        \n            graphql-subscriptions : 2.0.0\n        \n            graphql-tools : ^9.0.0\n        \n            joi : ^17.9.2\n        \n            kleur : ^4.1.5\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-nestjs-graphql : ^18.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : 7.8.1\n        \n            sql-formatter : ^12.2.3\n        \n            ts-morph : ^19.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            extractFlags   (src/.../generate-typings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractFlags\n                        \n                    \n                \n            \n            \n                \nextractFlags(args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\napi.bookstore.nas\nDescription\nAPI Server built using , TypeScript, Prisma, Graphql and PostgreSQL.\nBuilt with ❤️on top of\n\n Typescript\n NestJS\n Prisma\n Passport.js\n Graphql:Schema First\n PostgreSQL\n\nFunctional specs\nAPI allows authenticated to users to create and manage orders\n\nUser SignUp & SignIn\nCRUD Orders\nInspect Items\n\nTechnical methodologies followed\n\nModular architecture: Business Logic & Auth handled in separate modules, separating\nconcerns.\nHTTP requests are handled by Controllers\n API documentation using nest/swagger module \nBusiness logic is implemented in Services\nDatabase interactions are handled using Prisma\nValidation using NestJS Pipes\nData Transfer Object(DTO) pattern for transferring data between layers\nConfiguration management using .env files for development, test & prod configs\nAuthentication / Authorization, Event ownership by users\nPassportJS, JWT tokens, Password hashing, salts\nUnit tests using Jest\nSupertest for E2E testing\n\nTechnical documentation using Compodoc\nAs NestJS is heavily inspired by Angular, we can generate the documentation about project\nstructure modules, controllers, services etc. I have generated the docs.\nFind 'em here - https://jsFame.github.io/api.bookstore.nas/\nInstallation\nnpm install -g pnpm\npnpm installRunning the app\nPrerequisite for running the app in any mode - dev/test/prod\n\nCopy .env.example with .env\nFill in the env vars in .env\n\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covLicense\nThis repo is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Hiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\nOrderModule -->\n\nBookService->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nUserService\n\nUserService\n\nOrderModule -->\n\nUserService->OrderModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    21 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : Web2 backend of bookstore.nas\n        \n            Homepage : https://github.com/jsFame/api.bookstore.nas\n        \n            Bugs : https://github.com/jsFame/api.bookstore.nas/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/jsFame/api.bookstore.nas\n        \n            Author : laciferin@gmail.com\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateTime   (src/.../graphql.ts)\n                        \n                        \n                            Nullable   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            args   (src/.../generate-typings.ts)\n                        \n                        \n                            DB_CONNECTED   (src/.../prisma.service.ts)\n                        \n                        \n                            definitionsFactory   (src/.../generate-typings.ts)\n                        \n                        \n                            envFile   (src/.../app.module.ts)\n                        \n                        \n                            flags   (src/.../generate-typings.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            GetUserGraphql   (src/.../get-user.decorator.ts)\n                        \n                        \n                            logEvents   (src/.../prisma.service.ts)\n                        \n                        \n                            mode   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        args\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.argv.slice(2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        definitionsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLDefinitionsFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Flags\n\n                    \n                \n                \n                    \n                        Default value : extractFlags(args)\n                    \n                \n\n\n        \n    \n\n    src/prisma/prisma.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.LogDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.env'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MODE\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest()\n\n    if (data) return request.user[data]\n\n    return request.user\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetUserGraphql\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, context: ExecutionContext) => {\n    const ctx: GraphqlContext = GqlExecutionContext.create(context).getContext()\n\n    const { user } = ctx.req\n\n    if (data) return user[data]\n\n    return user\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
