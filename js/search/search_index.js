var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.516,1,2.485]],["body/controllers/AppController.html",[0,2.197,1,3.6,2,1.569,3,0.239,4,0.267,5,0.239,6,3.391,7,0.56,8,1.657,9,4.734,10,4.734,11,2.483,12,0.021,13,3.97,14,0.949,15,3.97,16,1.657,17,3.97,18,3.97,19,0.883,20,3.97,21,1.009,22,3.175,23,3.391,24,3.97,25,3.97,26,3.97,27,3.01,28,3.01,29,3.97,30,0.296,31,0.194,32,1.88,33,2.148,34,3.97,35,3.97,36,2.726,37,2.726,38,3.97,39,1.569,40,3.97,41,3.97,42,3.01,43,3.97,44,3.97,45,0.015,46,0.015]],["title/modules/AppModule.html",[47,1.277,48,2.485]],["body/modules/AppModule.html",[1,2.849,2,1.332,3,0.13,4,0.145,5,0.13,12,0.021,19,1,21,0.548,22,2.919,23,1.842,27,1.635,28,1.635,30,0.161,31,0.105,36,1.48,42,1.635,45,0.01,46,0.01,47,1.465,48,4.562,49,0.959,50,1.021,51,1.166,52,1.166,53,1.021,54,2.245,55,1.166,56,1.842,57,1.842,58,1.842,59,3.139,60,3.396,61,3.396,62,2.919,63,3.396,64,1.823,65,1.166,66,1.089,67,1.635,68,2.556,69,2.156,70,1.254,71,1.842,72,2.879,73,2.156,74,2.156,75,1.357,76,3.37,77,1.842,78,2.156,79,2.156,80,2.156,81,3.221,82,3.37,83,3.37,84,1.842,85,1.635,86,3.37,87,2.156,88,1.842,89,2.156,90,1.823,91,1.842,92,2.156,93,1.635,94,2.156,95,2.156,96,3.204,97,1.842,98,4.092,99,2.556,100,2.156,101,3.37,102,1.635,103,2.156,104,4.149,105,1.842,106,3.37,107,2.879,108,1.842,109,2.156,110,1.635,111,1.842,112,2.156,113,1.842,114,2.156,115,2.156,116,3.37,117,2.754,118,1.842,119,2.156,120,2.156,121,2.156,122,2.156,123,2.156,124,2.156,125,2.156,126,2.156,127,2.156,128,2.156,129,2.156,130,2.156,131,2.879,132,2.156,133,2.156,134,1.635,135,2.314,136,2.314,137,2.156,138,1.842,139,2.156,140,2.156,141,2.156,142,2.156,143,2.121,144,2.156,145,1.842,146,2.156,147,2.156,148,1.842,149,2.156,150,1.089,151,2.879,152,3.37,153,2.156]],["title/injectables/AppService.html",[22,1.958,154,1.083]],["body/injectables/AppService.html",[3,0.193,4,0.216,5,0.193,7,0.452,8,1.433,9,4.329,10,4.329,12,0.021,14,0.951,16,1.433,19,0.682,21,0.816,22,2.451,30,0.239,31,0.222,32,1.519,33,1.735,39,1.357,45,0.013,46,0.013,117,1.735,143,2.019,154,1.357,155,1.621,156,2.432,157,2.842,158,2.146,159,2.203,160,2.393,161,3.207,162,1.014,163,0.96,164,0.514,165,0.861,166,2.488,167,3.207,168,2.203,169,3.207,170,3.436,171,1.357,172,1.866,173,3.608,174,4.488,175,3.871,176,2.432,177,2.74,178,2.74,179,2.432,180,3.111,181,2.74,182,2.432,183,3.871,184,2.29,185,1.735,186,2.74,187,2.74,188,2.74,189,2.74,190,2.74,191,2.74,192,2.432,193,3.111,194,3.871,195,2.432,196,3.871,197,2.74,198,2.74,199,2.74,200,2.432]],["title/controllers/AuthController.html",[0,1.516,201,2.278]],["body/controllers/AuthController.html",[0,1.082,2,1.021,3,0.155,4,0.174,5,0.155,7,0.364,8,1.223,11,1.832,12,0.021,14,0.7,16,1.223,19,0.831,21,0.656,30,0.192,31,0.126,32,1.223,37,1.773,39,0.773,42,2.934,45,0.011,46,0.011,70,1.502,117,3.251,131,3.305,136,3.79,138,3.964,157,2.51,162,1.223,163,1.158,164,0.62,165,1.039,185,1.397,201,2.435,202,2.206,203,1.773,204,2.206,205,2.921,206,2.435,207,1.958,208,3.496,209,3.908,210,2.582,211,2.582,212,3.475,213,1.958,214,3.869,215,2.582,216,1.773,217,2.582,218,2.582,219,1.958,220,2.51,221,1.958,222,1.502,223,2.657,224,2.582,225,1.625,226,1.773,227,2.582,228,2.582,229,2.582,230,2.582,231,2.582,232,2.093,233,2.206,234,2.582,235,2.582,236,2.206,237,3.964,238,3.869,239,4.186,240,2.582,241,2.206,242,2.206,243,3.869,244,3.869,245,2.206,246,2.206,247,3.869,248,2.582,249,2.582,250,2.582,251,2.582,252,3.869,253,2.582,254,2.582,255,2.582,256,2.206,257,3.869,258,2.582,259,2.582,260,2.582,261,3.869,262,2.206,263,2.582,264,2.582,265,3.869,266,2.582,267,1.958,268,2.582,269,2.582,270,2.582,271,2.582,272,2.582,273,2.582,274,2.582,275,2.582,276,2.206,277,2.582]],["title/classes/AuthDto.html",[31,0.177,208,2.105]],["body/classes/AuthDto.html",[3,0.269,4,0.301,5,0.269,7,0.631,11,2.683,12,0.021,14,1.026,19,0.673,30,0.334,31,0.277,45,0.016,46,0.016,164,0.908,171,1.956,208,3.296,278,1.077,279,3.823,280,2.115,281,2.766,282,3.141,283,4.475,284,4.475,285,4.475,286,4.475,287,4.839,288,6.215,289,5.664,290,3.394]],["title/classes/AuthInput.html",[31,0.177,291,1.714]],["body/classes/AuthInput.html",[3,0.214,4,0.239,5,0.214,7,0.501,12,0.021,14,0.881,30,0.493,31,0.316,45,0.014,46,0.014,150,3.159,164,0.957,171,1.979,278,0.855,280,1.817,281,2.782,282,2.804,291,2.827,292,1.683,293,3.554,294,3.554,295,2.459,296,1.923,297,2.459,298,1.817,299,1.718,300,2.633,301,2.633,302,3.637,303,1.796,304,2.068,305,3.229,306,2.068,307,1.457,308,1.923,309,3.229,310,1.923,311,1.923,312,1.796,313,1.923,314,1.683]],["title/modules/AuthModule.html",[47,1.277,59,2.105]],["body/modules/AuthModule.html",[2,2.01,3,0.228,4,0.255,5,0.228,12,0.021,19,0.99,21,0.964,30,0.283,31,0.185,45,0.015,46,0.015,47,2.025,49,1.688,50,1.796,51,2.052,52,2.052,53,1.796,54,3.104,55,2.052,59,4.068,62,3.56,64,2.751,65,2.052,66,1.916,68,3.856,93,2.876,201,3.611,220,3.56,221,2.876,315,3.24,316,3.24,317,3.792,318,4.142,319,3.792,320,3.24,321,3.792,322,2.876,323,3.24,324,3.792]],["title/classes/AuthPayload.html",[31,0.177,295,1.828]],["body/classes/AuthPayload.html",[3,0.219,4,0.245,5,0.219,7,0.514,12,0.021,14,0.66,30,0.496,31,0.318,45,0.014,46,0.014,150,3.186,164,0.901,171,1.947,278,0.877,280,1.848,281,2.502,282,1.841,291,2.662,292,1.725,295,2.84,296,3.041,297,2.501,298,1.848,299,1.747,300,2.678,301,2.678,302,3.669,303,1.841,304,2.12,305,3.27,306,2.12,307,1.482,308,1.971,309,3.262,310,1.971,311,1.971,312,1.841,313,1.971,314,1.725,325,3.643]],["title/classes/AuthResolver.html",[31,0.177,326,2.278]],["body/classes/AuthResolver.html",[3,0.191,4,0.214,5,0.191,7,0.448,8,1.423,11,2.132,12,0.021,14,0.946,16,1.423,19,0.938,30,0.237,31,0.155,33,2.435,39,1.348,45,0.013,46,0.013,75,2,81,2.182,90,3.076,91,2.715,113,3.845,134,3.413,158,2.132,162,1.653,163,1.565,164,0.838,165,1.404,201,4.033,205,2.833,206,2.833,207,2.41,208,3.728,212,4.033,213,2.41,220,3.371,221,2.41,225,2.833,278,0.765,291,2.475,320,2.715,326,2.833,327,2.715,328,3.177,329,3.177,330,4.465,331,4.501,332,3.177,333,4.501,334,3.177,335,2,336,3.177,337,2.715,338,3.177,339,3.177,340,3.177,341,3.177,342,3.177,343,3.177]],["title/classes/AuthResolver-1.html",[31,0.148,37,2.079,326,1.906]],["body/classes/AuthResolver-1.html",[3,0.217,4,0.242,5,0.217,7,0.508,8,1.553,11,1.707,12,0.021,14,0.89,16,1.14,19,0.975,30,0.269,31,0.176,33,3.024,39,1.079,45,0.014,46,0.014,75,2.269,158,2.327,159,2.475,160,2.516,162,1.553,163,1.471,164,0.788,165,1.319,166,2.327,172,2.097,225,3.519,278,0.868,307,1.941,326,3.093,337,3.079,344,3.079,345,3.589,346,3.86,347,3.605,348,3.605,349,4.913,350,3.605,351,2.734,352,2.734,353,3.079,354,2.734,355,3.079,356,2.734,357,3.605,358,3.605,359,3.605]],["title/injectables/AuthService.html",[154,1.083,220,1.958]],["body/injectables/AuthService.html",[3,0.135,4,0.151,5,0.135,7,0.316,8,1.098,12,0.021,14,0.867,16,1.345,19,0.861,21,0.57,30,0.167,31,0.11,39,1.273,45,0.01,46,0.01,70,1.304,117,2.591,154,1.04,155,1.133,157,3.283,158,1.645,159,1.539,160,2.008,162,1.514,163,1.434,164,0.768,165,1.286,166,1.645,168,2.92,171,1.273,172,1.304,184,2.149,185,2.804,192,1.7,205,2.186,206,2.186,207,2.634,208,3.328,212,2.677,213,2.634,220,1.879,223,3.289,225,2.677,226,2.92,232,2.966,236,2.967,237,1.915,276,1.915,281,2.545,296,1.213,298,0.837,299,1.501,300,1.213,301,1.213,307,1.434,308,2.301,322,1.7,360,1.915,361,3.473,362,2.92,363,4.79,364,2.241,365,2.241,366,3.473,367,2.241,368,2.385,369,2.241,370,2.241,371,2.241,372,1.915,373,3.473,374,3.473,375,2.241,376,2.241,377,2.241,378,2.241,379,1.411,380,2.241,381,1.915,382,1.915,383,2.241,384,2.241,385,3.289,386,2.241,387,3.473,388,2.241,389,2.241,390,4.79,391,2.241,392,2.241,393,1.915,394,2.241,395,3.473,396,3.473,397,2.241,398,2.241,399,2.241,400,2.241,401,2.241,402,1.915,403,1.915,404,4.253,405,2.241,406,2.241,407,2.241]],["title/classes/Book.html",[31,0.177,408,2.278]],["body/classes/Book.html",[3,0.326,4,0.365,5,0.326,12,0.019,30,0.405,31,0.265,45,0.018,46,0.018,278,1.307,408,4.011,409,4.638]],["title/controllers/BookController.html",[0,1.516,410,2.485]],["body/controllers/BookController.html",[0,1.211,2,1.142,3,0.174,4,0.194,5,0.174,7,0.407,8,1.329,11,2.739,12,0.021,14,1.047,16,1.828,19,0.819,21,0.735,30,0.215,31,0.141,32,1.368,33,1.563,39,1.731,45,0.012,46,0.012,162,1.721,163,1.629,164,0.872,165,1.461,171,1.948,203,1.984,216,2.887,219,3.758,298,2.253,408,1.819,410,2.887,411,2.468,412,2.274,413,3.737,414,2.887,415,2.887,416,2.887,417,2.468,418,3.511,419,2.889,420,2.889,421,1.984,422,3.592,423,2.889,424,1.984,425,3.592,426,2.889,427,1.984,428,4.017,429,3.592,430,2.889,431,1.984,432,2.468,433,2.191,434,2.883,435,2.468,436,1.984,437,3.188,438,1.984,439,2.889,440,2.468,441,2.889,442,2.889,443,2.468,444,2.889,445,2.468,446,2.889,447,2.468,448,2.889]],["title/modules/BookModule.html",[47,1.277,60,2.278]],["body/modules/BookModule.html",[2,2.203,3,0.262,4,0.293,5,0.262,12,0.021,19,0.924,21,1.109,30,0.325,31,0.213,45,0.016,46,0.016,47,2.167,49,1.941,50,2.065,51,2.359,52,2.359,53,2.065,54,3.322,55,2.359,60,4.304,64,3.014,65,2.359,66,2.203,410,4.216,434,3.978,435,3.725,449,3.725,450,3.725,451,4.36,452,4.36]],["title/injectables/BookService.html",[154,1.083,434,2.105]],["body/injectables/BookService.html",[3,0.185,4,0.207,5,0.185,7,0.434,8,1.392,12,0.021,14,1.074,16,2.008,19,0.773,21,0.783,30,0.23,31,0.151,39,1.776,45,0.013,46,0.013,154,1.318,155,1.557,162,1.773,163,1.679,164,0.899,165,1.506,171,1.776,184,1.557,298,2.303,299,2.333,408,3.733,412,2.383,413,3.85,414,3.024,415,3.024,416,3.024,417,3.762,418,3.451,421,3.024,424,3.024,427,3.024,428,3.997,434,2.562,436,2.116,437,3.34,438,2.116,453,2.633,454,3.081,455,3.081,456,3.081,457,3.081,458,3.081,459,4.498,460,2.633,461,2.633,462,2.633]],["title/classes/CreateBookDto.html",[31,0.177,418,2.105]],["body/classes/CreateBookDto.html",[3,0.324,4,0.363,5,0.324,12,0.019,30,0.402,31,0.264,45,0.018,46,0.018,278,1.3,418,3.696,463,4.613,464,4.095]],["title/classes/CreateOrderDto.html",[31,0.177,465,2.105]],["body/classes/CreateOrderDto.html",[3,0.324,4,0.363,5,0.324,12,0.019,30,0.402,31,0.264,45,0.018,46,0.018,278,1.3,465,3.696,466,4.613,467,4.095]],["title/classes/EditUserDto.html",[31,0.177,468,2.278]],["body/classes/EditUserDto.html",[3,0.243,4,0.272,5,0.243,7,0.571,11,2.806,12,0.021,14,1.073,19,0.609,30,0.302,31,0.26,45,0.015,46,0.015,164,0.95,165,1.8,171,2.007,278,0.974,280,1.983,281,2.637,287,4.537,290,3.07,310,3.206,311,3.206,468,3.343,469,5.374,470,3.459,471,4.048,472,4.048,473,5.31,474,4.048,475,4.048,476,6.29,477,5.926]],["title/interfaces/Flags.html",[478,2.278,479,2.485]],["body/interfaces/Flags.html",[3,0.182,4,0.204,5,0.182,7,0.428,12,0.021,19,0.656,31,0.148,37,2.084,39,0.909,45,0.012,46,0.012,75,1.911,117,2.357,148,2.593,163,0.909,164,0.698,165,1.495,176,4.655,184,1.534,232,3.42,242,4.354,245,3.722,267,3.304,280,1.627,292,1.438,314,2.063,335,2.742,478,1.911,479,4.523,480,2.593,481,2.084,482,2.084,483,5.897,484,5.244,485,3.722,486,3.036,487,3.036,488,3.036,489,3.036,490,3.304,491,5.897,492,4.357,493,4.357,494,3.036,495,5.096,496,4.357,497,3.036,498,3.036,499,3.036,500,3.036,501,3.036,502,3.036,503,3.036,504,3.036,505,2.302,506,3.036,507,3.036,508,2.593,509,3.036,510,2.302,511,3.036,512,3.036,513,3.036,514,3.036,515,3.036,516,3.036]],["title/classes/GraphqlContext.html",[31,0.177,90,1.958]],["body/classes/GraphqlContext.html",[3,0.265,4,0.297,5,0.265,7,0.623,12,0.021,14,1.017,19,0.665,30,0.419,31,0.275,45,0.016,46,0.016,90,3.039,135,4.242,136,4.242,164,0.901,209,4.685,222,2.57,278,1.063,280,2.098,299,1.559,307,1.849,478,2.78,517,3.35,518,4.242,519,4.417,520,4.417,521,3.536,522,3.773,523,2.39]],["title/classes/IMutation.html",[31,0.177,303,1.828]],["body/classes/IMutation.html",[3,0.196,4,0.219,5,0.196,7,0.459,8,1.449,12,0.021,14,0.83,16,1.449,30,0.481,31,0.307,45,0.013,46,0.013,150,3.061,162,1.449,163,1.372,164,0.922,165,1.23,171,1.814,205,2.884,206,2.884,278,0.784,281,2.358,282,1.647,291,3.057,292,1.543,295,2.678,296,1.763,297,2.678,298,1.711,299,1.618,300,2.479,301,2.479,302,3.897,303,2.315,304,2.666,305,3.525,306,2.666,307,1.372,308,1.763,309,3.11,310,1.763,311,1.763,312,1.647,313,1.763,314,1.543,379,2.884,524,3.259,525,3.259]],["title/classes/IQuery.html",[31,0.177,312,1.828]],["body/classes/IQuery.html",[3,0.217,4,0.243,5,0.217,7,0.51,8,1.557,12,0.021,14,0.655,16,1.144,30,0.495,31,0.317,45,0.014,46,0.014,150,3.178,164,0.79,171,1.883,278,0.871,281,2.492,282,1.828,291,2.652,292,1.713,295,2.489,296,1.957,297,2.489,298,1.839,299,1.739,300,2.665,301,2.665,302,3.863,303,1.828,304,2.105,305,3.498,306,2.105,307,1.677,308,1.957,309,3.253,310,1.957,311,1.957,312,2.489,313,1.957,314,1.713,526,3.617]],["title/classes/JwtGuard.html",[31,0.177,527,2.485]],["body/classes/JwtGuard.html",[3,0.301,4,0.336,5,0.301,12,0.021,14,0.906,19,0.753,30,0.373,31,0.245,45,0.017,46,0.017,158,3.094,278,1.204,523,2.706,527,4.168,528,4.273,529,5.002,530,5.002,531,3.793,532,5.002,533,3.793]],["title/injectables/JwtStrategy.html",[154,1.083,318,2.278]],["body/injectables/JwtStrategy.html",[3,0.154,4,0.172,5,0.154,7,0.36,8,1.214,12,0.021,14,0.928,16,1.214,19,0.869,21,0.65,30,0.191,31,0.125,32,1.21,39,1.535,45,0.011,46,0.011,70,1.487,96,2.903,102,1.938,110,2.912,135,1.755,154,1.15,155,1.292,158,1.21,160,2.149,162,1.458,163,1.381,164,0.925,165,1.238,166,2.184,171,1.535,172,1.487,222,1.487,223,3.521,225,3.769,226,2.637,232,2.495,233,2.184,239,1.938,262,3.28,280,1.434,281,2.053,298,0.954,299,1.355,307,1.15,314,2.428,318,2.417,323,2.184,362,2.637,368,2.637,385,1.755,393,2.184,402,2.184,403,2.184,521,1.609,523,1.383,531,1.938,533,1.938,534,2.184,535,4.612,536,4.612,537,3.84,538,3.84,539,2.184,540,3.84,541,3.84,542,5.127,543,2.556,544,3.84,545,3.84,546,2.556,547,2.556,548,2.556,549,2.184,550,2.556,551,2.184,552,2.556,553,2.556,554,2.556,555,2.556,556,2.556,557,2.556,558,2.556,559,3.84,560,2.556,561,2.556,562,2.556,563,2.556,564,2.556,565,2.556,566,2.556,567,3.84,568,2.556,569,2.556,570,2.184,571,2.556,572,2.556]],["title/classes/Order.html",[31,0.177,573,2.278]],["body/classes/Order.html",[3,0.326,4,0.365,5,0.326,12,0.019,30,0.405,31,0.265,45,0.018,46,0.018,278,1.307,573,4.011,574,4.638]],["title/controllers/OrderController.html",[0,1.516,575,2.485]],["body/controllers/OrderController.html",[0,1.211,2,1.142,3,0.174,4,0.194,5,0.174,7,0.407,8,1.329,11,2.739,12,0.021,14,1.047,16,1.828,19,0.819,21,0.735,30,0.215,31,0.141,32,1.368,33,1.563,39,1.731,45,0.012,46,0.012,162,1.721,163,1.629,164,0.872,165,1.461,171,1.948,203,1.984,216,2.887,219,3.758,298,2.253,412,2.274,413,3.737,414,2.887,415,2.887,416,2.887,421,1.984,422,3.592,424,1.984,425,3.592,427,1.984,429,3.592,431,1.984,432,2.468,433,2.191,436,1.984,438,1.984,440,2.468,443,2.468,445,2.468,447,2.468,465,3.511,573,1.819,575,2.887,576,2.468,577,2.468,578,2.889,579,2.889,580,2.889,581,2.889,582,4.017,583,2.889,584,2.883,585,2.468,586,3.188,587,2.889,588,2.889,589,2.889,590,2.889,591,2.889,592,2.889]],["title/modules/OrderModule.html",[47,1.277,61,2.278]],["body/modules/OrderModule.html",[2,2.203,3,0.262,4,0.293,5,0.262,12,0.021,19,0.924,21,1.109,30,0.325,31,0.213,45,0.016,46,0.016,47,2.167,49,1.941,50,2.065,51,2.359,52,2.359,53,2.065,54,3.322,55,2.359,61,4.304,64,3.014,65,2.359,66,2.203,575,4.216,584,3.978,585,3.725,593,3.725,594,3.725,595,4.36,596,4.36]],["title/injectables/OrderService.html",[154,1.083,584,2.105]],["body/injectables/OrderService.html",[3,0.185,4,0.207,5,0.185,7,0.434,8,1.392,12,0.021,14,1.074,16,2.008,19,0.773,21,0.783,30,0.23,31,0.151,39,1.776,45,0.013,46,0.013,154,1.318,155,1.557,162,1.773,163,1.679,164,0.899,165,1.506,171,1.776,184,1.557,298,2.303,299,2.333,412,2.383,413,3.85,414,3.024,415,3.024,416,3.024,421,3.024,424,3.024,427,3.024,436,2.116,438,2.116,459,4.498,460,2.633,461,2.633,462,2.633,465,3.451,573,3.733,577,3.762,582,3.997,584,2.562,586,3.34,597,2.633,598,3.081,599,3.081,600,3.081,601,3.081,602,3.081]],["title/modules/PrismaModule.html",[47,1.277,62,1.958]],["body/modules/PrismaModule.html",[3,0.258,4,0.288,5,0.258,12,0.02,19,0.829,21,1.09,30,0.32,31,0.21,45,0.016,46,0.016,47,2.15,49,1.908,50,2.03,51,2.319,52,2.319,53,2.03,54,3.295,55,3.295,62,3.746,64,2.982,65,2.319,66,2.166,160,3.031,603,3.662,604,3.662,605,3.662,606,4.287,607,5.511,608,4.287]],["title/injectables/PrismaService.html",[154,1.083,160,1.516]],["body/injectables/PrismaService.html",[3,0.208,4,0.15,5,0.134,7,0.314,8,1.093,12,0.021,14,0.864,16,1.339,19,0.778,21,0.566,30,0.166,31,0.109,39,1.268,45,0.01,46,0.01,70,1.295,85,1.688,110,1.688,117,1.87,143,1.401,154,1.035,155,1.125,157,3.191,158,1.054,160,1.448,162,1.093,163,1.035,164,0.554,165,0.928,166,1.054,180,1.529,185,2.582,193,1.529,200,1.688,223,3.278,226,1.529,232,2.796,351,2.621,356,1.688,381,1.902,385,1.529,523,1.87,533,1.688,539,2.952,551,1.902,609,1.688,610,4.235,611,4.773,612,3.456,613,5.468,614,2.226,615,2.226,616,3.456,617,4.773,618,2.226,619,2.226,620,2.952,621,2.226,622,1.902,623,1.902,624,2.621,625,1.902,626,4.078,627,1.529,628,4.078,629,3.618,630,1.902,631,3.212,632,2.226,633,2.226,634,2.226,635,1.902,636,2.226,637,2.226,638,2.226,639,3.456,640,2.226,641,2.226,642,2.226,643,2.226,644,2.226,645,2.226,646,2.226,647,2.226,648,2.226,649,2.952,650,3.456,651,2.226,652,2.226,653,2.226,654,2.226,655,2.226,656,2.226,657,2.226,658,2.226,659,2.226,660,2.226,661,2.226,662,2.226,663,2.226,664,2.226,665,1.902,666,2.226,667,2.952,668,2.226,669,2.226,670,2.226,671,2.226,672,2.226,673,2.226,674,2.226,675,2.226,676,2.226,677,2.226,678,2.226,679,2.226,680,2.226,681,1.902,682,2.226,683,2.226,684,2.226,685,2.226,686,2.226,687,2.226,688,2.226,689,2.226,690,2.226,691,1.902,692,2.226]],["title/classes/RequestWithUser.html",[31,0.177,518,2.485]],["body/classes/RequestWithUser.html",[3,0.271,4,0.303,5,0.271,7,0.636,12,0.021,14,0.817,19,0.679,30,0.425,31,0.278,45,0.016,46,0.016,90,2.443,135,3.1,136,3.1,164,0.724,209,4.32,222,2.627,278,1.087,280,2.127,299,1.594,307,2.066,478,2.842,517,3.424,518,4.285,521,3.928,522,3.857,523,3.082,693,4.515]],["title/classes/ServiceStatus.html",[31,0.177,173,2.485]],["body/classes/ServiceStatus.html",[3,0.18,4,0.201,5,0.18,7,0.422,9,2.268,10,2.268,12,0.021,14,1.001,19,0.649,21,0.76,22,1.618,30,0.223,31,0.211,32,1.417,33,1.618,36,3.471,39,1.291,45,0.012,46,0.012,117,2.332,143,1.883,154,1.291,156,2.268,157,1.618,158,2.042,160,1.807,162,0.946,163,0.895,164,0.887,165,0.803,166,2.042,170,2.268,171,1.656,172,1.74,173,3.798,174,5.607,175,5.217,176,4.194,177,5.009,178,5.009,179,3.269,180,2.96,181,2.555,182,2.268,183,3.683,184,2.178,185,1.618,186,2.555,187,2.555,188,2.555,189,2.555,190,2.555,191,2.555,192,2.268,193,2.96,194,3.683,195,2.268,196,3.683,197,2.555,198,2.555,199,2.555,200,2.268,278,0.72,280,1.61,505,3.833,694,2.991,695,2.991,696,2.991,697,2.991,698,2.991]],["title/classes/SignUpPayload.html",[31,0.177,297,1.828]],["body/classes/SignUpPayload.html",[3,0.204,4,0.228,5,0.204,7,0.478,12,0.021,14,1.059,30,0.486,31,0.311,45,0.013,46,0.013,150,3.297,164,1.02,171,1.904,278,0.816,280,1.758,281,2.735,282,1.712,291,2.563,292,1.605,295,2.38,296,1.833,297,2.735,298,2.184,299,1.91,300,3.164,301,3.164,302,3.576,303,1.712,304,1.972,305,3.149,306,1.972,307,1.41,308,1.833,309,3.164,310,1.833,311,1.833,312,1.712,313,1.833,314,1.605,699,3.389,700,3.389,701,3.389,702,3.389]],["title/classes/UpdateBookDto.html",[31,0.177,428,2.278]],["body/classes/UpdateBookDto.html",[3,0.302,4,0.338,5,0.302,12,0.021,19,0.916,30,0.375,31,0.246,45,0.017,46,0.017,278,1.21,412,2.72,418,2.925,428,3.832,437,3.812,464,3.812,523,2.72,703,4.295,704,4.295,705,3.812,706,3.812,707,5.027]],["title/classes/UpdateOrderDto.html",[31,0.177,582,2.278]],["body/classes/UpdateOrderDto.html",[3,0.302,4,0.338,5,0.302,12,0.021,19,0.916,30,0.375,31,0.246,45,0.017,46,0.017,278,1.21,412,2.72,465,2.925,467,3.812,523,2.72,582,3.832,586,3.812,704,4.295,705,3.812,706,3.812,708,4.295,709,5.027]],["title/classes/User.html",[31,0.177,307,1.083]],["body/classes/User.html",[3,0.187,4,0.209,5,0.187,7,0.438,12,0.021,14,1.153,30,0.475,31,0.302,45,0.013,46,0.013,150,3.218,164,1.062,165,1.661,171,1.852,278,0.748,280,1.655,281,2.649,282,1.571,291,2.446,292,1.473,295,2.24,296,1.682,297,2.24,298,2.102,299,1.823,300,3.046,301,3.046,302,3.463,303,1.571,304,1.809,305,3.005,306,1.809,307,1.546,308,2.794,309,3.445,310,2.794,311,2.794,312,1.571,313,1.682,314,1.473,710,3.11,711,3.11,712,3.11,713,3.11,714,3.11,715,3.11,716,3.11]],["title/controllers/UserController.html",[0,1.516,346,2.105]],["body/controllers/UserController.html",[0,1.243,2,1.172,3,0.178,4,0.199,5,0.178,7,0.418,8,1.354,11,2.382,12,0.021,14,0.911,16,1.59,19,0.916,21,0.754,30,0.221,31,0.145,32,1.404,39,1.506,45,0.012,46,0.012,154,1.282,157,2.721,162,1.59,163,1.506,164,0.806,165,1.35,168,2.036,170,2.248,185,1.604,195,2.248,203,2.036,212,3.678,216,2.941,299,2.149,307,1.991,345,2.721,346,2.492,352,2.248,355,2.533,356,2.248,368,3.783,431,2.941,433,3.248,468,3.467,521,1.866,527,2.036,717,2.533,718,2.533,719,3.659,720,3.659,721,4.283,722,2.533,723,2.965,724,2.965,725,2.533,726,2.965,727,2.965,728,2.965,729,2.965,730,2.965,731,2.965,732,2.965,733,2.248,734,2.965,735,5.029,736,2.965,737,2.965,738,2.965,739,2.965,740,2.965,741,2.965,742,2.533,743,2.965,744,2.965,745,2.965,746,2.965,747,2.965]],["title/modules/UserModule.html",[47,1.277,63,2.278]],["body/modules/UserModule.html",[2,2,3,0.226,4,0.253,5,0.226,12,0.021,19,0.959,21,0.957,30,0.281,31,0.184,45,0.015,46,0.015,47,2.018,49,1.675,50,1.783,51,2.037,52,2.037,53,1.783,54,3.092,55,2.037,59,3.82,62,3.552,63,4.466,64,2.737,65,2.037,66,1.902,68,3.837,71,3.216,93,2.855,345,3.552,346,3.968,352,2.855,353,3.216,748,3.216,749,3.216,750,3.764,751,3.764]],["title/injectables/UserService.html",[154,1.083,345,1.958]],["body/injectables/UserService.html",[3,0.196,4,0.22,5,0.196,7,0.461,8,1.452,12,0.021,14,0.961,16,1.452,19,0.799,21,0.831,30,0.244,31,0.16,32,1.548,39,1.375,45,0.013,46,0.013,154,1.375,155,1.652,157,3.403,158,1.548,159,2.245,160,2.413,162,1.678,163,1.589,164,0.851,165,1.425,166,2.175,168,3.154,172,1.902,185,2.485,212,3.959,232,2.485,298,1.715,299,2.22,307,1.724,345,2.485,368,4.165,379,2.058,431,3.154,468,3.624,719,3.923,720,3.923,722,3.923,725,3.923,752,2.793,753,3.269,754,3.269,755,3.269,756,3.269,757,3.269,758,4.592,759,3.269]],["title/coverage.html",[760,3.736]],["body/coverage.html",[0,2.129,1,1.474,5,0.129,6,1.834,12,0.021,22,1.161,31,0.334,45,0.01,46,0.01,53,1.017,67,2.547,90,1.161,96,1.351,98,1.628,154,1.744,156,2.547,160,0.9,164,0.344,173,1.474,184,1.085,201,1.351,202,1.834,208,1.249,220,1.161,267,2.547,279,1.834,291,1.017,292,2.551,295,1.085,297,1.085,303,1.085,307,1.006,312,1.085,318,1.351,326,2.114,327,1.834,335,1.351,344,1.834,345,1.161,346,1.954,354,1.628,360,1.834,408,1.351,409,1.834,410,1.474,411,1.834,418,1.249,428,1.351,434,1.249,453,1.834,463,1.834,464,2.547,465,1.249,466,1.834,467,2.547,468,1.351,469,1.834,470,1.834,478,2.114,479,2.306,481,3.488,482,3.488,510,1.628,517,3.138,518,1.474,527,1.474,528,1.834,534,1.834,570,6.239,573,1.351,574,1.834,575,1.474,576,1.834,582,1.351,584,1.249,597,1.834,609,3.138,624,1.628,631,1.628,703,1.834,708,1.834,717,2.869,733,1.628,752,1.834,760,1.628,761,1.628,762,2.147,763,2.147,764,5.826,765,5.08,766,5.989,767,6.693,768,5.386,769,5.08,770,2.869,771,2.869,772,4.68,773,1.834,774,2.147,775,1.834,776,2.147,777,2.147]],["title/dependencies.html",[50,2.059,778,2.586]],["body/dependencies.html",[12,0.021,21,0.897,27,2.677,28,3.673,31,0.237,45,0.014,46,0.014,50,1.672,70,2.054,72,3.015,75,2.222,77,3.015,81,4.282,84,3.015,85,2.677,88,3.015,118,3.015,151,3.015,166,1.672,222,2.054,239,2.677,290,2.677,322,2.677,362,2.424,372,3.015,531,2.677,549,4.138,620,3.015,622,3.015,623,3.015,649,3.015,705,2.677,706,2.677,779,3.53,780,3.53,781,3.53,782,5.529,783,3.53,784,3.53,785,3.53,786,3.53,787,3.53,788,3.53,789,3.53,790,3.53,791,3.53,792,3.53,793,3.53,794,3.53,795,3.53,796,3.53,797,3.53,798,3.53,799,3.53,800,3.53,801,3.53,802,3.53,803,3.53,804,3.53,805,3.53,806,3.53,807,3.53,808,3.53,809,3.53,810,3.015,811,3.53,812,3.53,813,3.53,814,3.53,815,3.53,816,3.53,817,3.53,818,3.53,819,3.53]],["title/miscellaneous/functions.html",[820,1.761,821,3.715]],["body/miscellaneous/functions.html",[7,0.727,12,0.019,45,0.018,46,0.018,53,3.135,162,1.63,163,1.543,165,1.384,335,3.244,481,3.539,482,4.243,490,3.909,773,5.279,775,4.403,820,2.999,821,4.403,822,5.154,823,4.403]],["title/index.html",[7,0.427,824,2.586,825,2.586]],["body/index.html",[2,1.593,12,0.02,45,0.012,46,0.012,47,0.963,49,1.793,81,1.873,96,3.017,99,4.015,102,3.634,105,2.33,107,2.33,108,2.33,111,3.442,145,2.33,166,2.27,180,2.767,182,2.068,204,2.33,205,1.716,206,1.716,241,2.33,246,2.33,256,2.33,282,1.378,307,0.816,362,1.873,379,2.536,412,1.475,484,2.33,627,1.873,635,3.442,665,3.442,681,2.33,691,3.442,718,3.442,742,4.094,760,2.068,761,3.634,810,4.094,826,2.727,827,2.33,828,2.727,829,4.029,830,6.116,831,4.029,832,2.727,833,2.727,834,2.727,835,2.727,836,2.727,837,2.727,838,2.727,839,2.727,840,4.029,841,2.727,842,2.727,843,2.727,844,4.029,845,2.727,846,2.727,847,2.727,848,2.727,849,4.029,850,4.793,851,2.727,852,2.727,853,2.727,854,2.727,855,2.727,856,2.727,857,4.029,858,2.727,859,2.727,860,2.727,861,2.727,862,2.727,863,2.727,864,2.727,865,2.727,866,2.727,867,2.727,868,2.727,869,2.33,870,2.727,871,2.727,872,2.727,873,2.727,874,2.727,875,2.727,876,2.727,877,2.727,878,4.029,879,4.793,880,2.727,881,2.727,882,2.727,883,2.727,884,2.727,885,2.727,886,2.727,887,2.727,888,2.727,889,2.727,890,2.727,891,2.727,892,2.727,893,2.727,894,2.727,895,2.727,896,2.727,897,2.727,898,6.279,899,2.727,900,2.727,901,2.727,902,2.33,903,2.727,904,2.727,905,2.727,906,5.912,907,2.727,908,2.727,909,2.727,910,2.727,911,2.727,912,2.727,913,2.068,914,2.727]],["title/license.html",[824,2.586,825,2.586,915,2.296]],["body/license.html",[12,0.015,45,0.015,46,0.015,66,1.909,193,2.594,222,2.198,382,4.333,459,2.865,627,2.594,761,2.865,869,3.228,902,4.333,913,2.865,915,2.865,916,5.726,917,3.778,918,3.778,919,3.778,920,5.072,921,3.778,922,3.778,923,3.778,924,3.778,925,3.778,926,3.778,927,6.914,928,3.778,929,3.778,930,5.726,931,3.778,932,5.072,933,3.778,934,3.778,935,3.778,936,3.778,937,3.778,938,3.778,939,3.778,940,3.778,941,3.778,942,5.072,943,3.778,944,3.778,945,3.778,946,3.778,947,3.778,948,3.778,949,3.778,950,5.072,951,5.072,952,3.778,953,3.778,954,3.778,955,3.778,956,3.778,957,3.778,958,3.778,959,3.778,960,3.778,961,3.778,962,3.778,963,3.778,964,3.778,965,3.778,966,3.778,967,3.778,968,3.778,969,3.778,970,3.778,971,3.778,972,3.778,973,3.778,974,3.778,975,3.778,976,3.778,977,3.778]],["title/modules.html",[49,2.192]],["body/modules.html",[12,0.017,45,0.017,46,0.017,48,3.353,49,2.173,59,2.841,60,3.073,61,3.073,62,2.641,63,3.073,978,7.034,979,7.034,980,7.034,981,7.034]],["title/overview.html",[982,4.208]],["body/overview.html",[2,1.292,12,0.021,22,2.872,45,0.013,46,0.013,47,1.154,48,4.829,49,1.455,50,1.548,51,1.769,52,1.769,53,1.548,54,1.769,55,1.769,56,2.793,57,2.793,58,2.793,59,3.951,60,3.818,61,3.818,62,3.567,63,4.322,64,2.485,65,1.769,66,1.652,155,1.652,160,2.707,220,2.872,278,0.787,315,2.793,316,2.793,318,3.341,345,2.872,346,3.089,434,3.089,449,2.793,450,2.793,480,2.793,584,3.089,593,2.793,594,2.793,603,2.793,604,2.793,605,2.793,667,2.793,748,2.793,749,2.793,982,2.793,983,3.269,984,3.269,985,3.269,986,3.269]],["title/properties.html",[280,1.624,778,2.586]],["body/properties.html",[12,0.021,45,0.017,46,0.017,280,1.886,827,4.316,913,3.831,915,3.831,987,5.052,988,5.052,989,5.052,990,5.052,991,5.052,992,5.052,993,6.105,994,5.052,995,5.052,996,5.052,997,5.052,998,5.052]],["title/miscellaneous/typealiases.html",[820,1.761,999,4.348]],["body/miscellaneous/typealiases.html",[7,0.749,12,0.019,45,0.018,46,0.018,150,3.18,164,0.852,292,2.517,309,3.405,313,2.876,314,2.517,820,3.093,1000,5.315,1001,6.294]],["title/miscellaneous/variables.html",[820,1.761,1002,3.715]],["body/miscellaneous/variables.html",[3,0.183,7,0.429,12,0.021,36,4.526,39,1.669,45,0.013,46,0.013,67,2.309,90,1.647,96,2.748,97,2.601,98,3.311,99,2.309,134,2.309,143,1.916,164,0.818,171,1.528,179,3.311,184,1.539,232,2.762,307,1.307,330,3.73,335,2.748,351,2.309,354,3.311,379,3.51,385,2.091,479,3.505,481,2.091,482,3.829,485,2.601,490,2.309,505,4.998,508,2.601,510,3.311,521,1.916,609,2.309,624,3.311,625,2.601,626,4.764,627,2.091,628,4.764,629,4.361,630,2.601,631,3.311,733,3.311,770,2.601,771,4.361,820,1.771,823,4.361,1002,2.601,1003,4.366,1004,4.366,1005,4.366,1006,4.366,1007,4.366,1008,3.045,1009,3.045,1010,3.045,1011,3.045,1012,3.045,1013,3.045]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["0.1.13",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":988,"title":{},"body":{"properties.html":{}}}],["0.30.3",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":37,"title":{"classes/AuthResolver-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["1.4.6",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["1.78.0",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["12.0.7",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["12.0.8",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["16.7.1",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["17.9.2",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["18.0.2",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":667,"title":{},"body":{"injectables/PrismaService.html":{},"overview.html":{}}}],["2.0.0",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":986,"title":{},"body":{"overview.html":{}}}],["2023",{"_index":918,"title":{},"body":{"license.html":{}}}],["3.0.0",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["3600000",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["4.0.1",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5",{"_index":984,"title":{},"body":{"overview.html":{}}}],["5.2.3",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":983,"title":{},"body":{"overview.html":{}}}],["60",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["7.8.1",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":985,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":949,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":302,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["access_token",{"_index":296,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["accessible",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":459,"title":{},"body":{"injectables/BookService.html":{},"injectables/OrderService.html":{},"license.html":{}}}],["actual",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["adds",{"_index":460,"title":{},"body":{"injectables/BookService.html":{},"injectables/OrderService.html":{}}}],["aliases",{"_index":1000,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":837,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":940,"title":{},"body":{"license.html":{}}}],["angular",{"_index":885,"title":{},"body":{"index.html":{}}}],["api",{"_index":742,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["api.bookstore.nas",{"_index":826,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["apollodriver",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagegraphqlplayground",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["app.close",{"_index":687,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["app.dto",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appended",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":848,"title":{},"body":{"index.html":{}}}],["arg",{"_index":492,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice",{"_index":504,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(1).split",{"_index":501,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(2",{"_index":497,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.startswith",{"_index":493,"title":{},"body":{"interfaces/Flags.html":{}}}],["argon",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(dto.password",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.verify(user.hash",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["args",{"_index":335,"title":{},"body":{"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":488,"title":{},"body":{"interfaces/Flags.html":{}}}],["arising",{"_index":976,"title":{},"body":{"license.html":{}}}],["array",{"_index":489,"title":{},"body":{"interfaces/Flags.html":{}}}],["asia/kolkata",{"_index":685,"title":{},"body":{"injectables/PrismaService.html":{}}}],["associated",{"_index":928,"title":{},"body":{"license.html":{}}}],["async",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth.service",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth/auth.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/decorator",{"_index":355,"title":{},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{}}}],["auth/guard",{"_index":732,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":201,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authdto",{"_index":208,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authenticated",{"_index":838,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":871,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":530,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authguard('jwt",{"_index":532,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authinput",{"_index":291,"title":{"classes/AuthInput.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":997,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":872,"title":{},"body":{"index.html":{}}}],["authors",{"_index":966,"title":{},"body":{"license.html":{}}}],["authpayload",{"_index":295,"title":{"classes/AuthPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["authresolver",{"_index":326,"title":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{}},"body":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"coverage.html":{}}}],["authservice",{"_index":220,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":990,"title":{},"body":{"properties.html":{}}}],["between",{"_index":865,"title":{},"body":{"index.html":{}}}],["body",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["book",{"_index":408,"title":{"classes/Book.html":{}},"body":{"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"coverage.html":{}}}],["book.controller",{"_index":452,"title":{},"body":{"modules/BookModule.html":{}}}],["book.dto",{"_index":437,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts",{"_index":464,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.service",{"_index":435,"title":{},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{}}}],["book/book.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["bookcontroller",{"_index":410,"title":{"controllers/BookController.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"coverage.html":{}}}],["bookmodule",{"_index":60,"title":{"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["bookservice",{"_index":434,"title":{"injectables/BookService.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"coverage.html":{},"overview.html":{}}}],["bookstore.nas",{"_index":991,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":981,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":978,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":994,"title":{},"body":{"properties.html":{}}}],["built",{"_index":829,"title":{},"body":{"index.html":{}}}],["business",{"_index":849,"title":{},"body":{"index.html":{}}}],["c",{"_index":917,"title":{},"body":{"license.html":{}}}],["cache",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('home",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["cachemodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(5",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(number.max_safe_integer",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(undefined)@get('health",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["case",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["catch",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch((err",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["chalk",{"_index":653,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.cyan(json.stringify(e.params",{"_index":658,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.green(e.query",{"_index":656,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.magenta(`${e.duration}ms",{"_index":660,"title":{},"body":{"injectables/PrismaService.html":{}}}],["charge",{"_index":924,"title":{},"body":{"license.html":{}}}],["claim",{"_index":969,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"classes/Order.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":278,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"classes/Order.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cleandb",{"_index":611,"title":{},"body":{"injectables/PrismaService.html":{}}}],["clear",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bookmodule",{"_index":449,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_providers",{"_index":450,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":593,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_providers",{"_index":594,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":603,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":604,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":605,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":748,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":750,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":749,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["compodoc",{"_index":882,"title":{},"body":{"index.html":{}}}],["compression",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["concerns",{"_index":853,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":948,"title":{},"body":{"license.html":{}}}],["config",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":646,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mode",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":870,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configuration",{"_index":867,"title":{},"body":{"index.html":{}}}],["connect",{"_index":187,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connected",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connecting",{"_index":680,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"license.html":{}}}],["connectors/postgresql#configuring",{"_index":642,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.count('db",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["console.debug",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["console.debug(req.cookies",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.error",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ServiceStatus.html":{}}}],["console.info(new",{"_index":679,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":756,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('extracted",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('flags",{"_index":509,"title":{},"body":{"interfaces/Flags.html":{}}}],["console.log(chalk.yellow('duration",{"_index":659,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('params",{"_index":657,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('query",{"_index":655,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('duration",{"_index":677,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('params",{"_index":675,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('query",{"_index":673,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":328,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(config",{"_index":539,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(ok",{"_index":694,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["constructor(prisma",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["context",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":973,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('book",{"_index":439,"title":{},"body":{"controllers/BookController.html":{}}}],["controller('order",{"_index":587,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('users",{"_index":734,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["cookie",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["cookiename",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["cookies",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["copies",{"_index":942,"title":{},"body":{"license.html":{}}}],["copy",{"_index":902,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":916,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":760,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":412,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"index.html":{}}}],["create(@body",{"_index":440,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["create(createbookdto",{"_index":417,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["create(createorderdto",{"_index":577,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["createbookdto",{"_index":418,"title":{"classes/CreateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["createdat",{"_index":300,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["createorderdto",{"_index":465,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":841,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":330,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["ctx.req",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.res",{"_index":343,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentflag",{"_index":491,"title":{},"body":{"interfaces/Flags.html":{}}}],["damages",{"_index":970,"title":{},"body":{"license.html":{}}}],["data",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":681,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["database_url",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["datasources",{"_index":644,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["datetime",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["db",{"_index":200,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["db_connected",{"_index":631,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbstatus",{"_index":183,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.debug",{"_index":199,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.ok",{"_index":197,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.status",{"_index":198,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["deal",{"_index":929,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":977,"title":{},"body":{"license.html":{}}}],["debug",{"_index":178,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"controllers/BookController.html":{},"classes/EditUserDto.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["definitionsfactory",{"_index":510,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["definitionsfactory.generate",{"_index":511,"title":{},"body":{"interfaces/Flags.html":{}}}],["delete",{"_index":431,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":425,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["deleted",{"_index":746,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":719,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@getuser('userid",{"_index":745,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":722,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":827,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["dev/test/prod",{"_index":901,"title":{},"body":{"index.html":{}}}],["development",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["distribute",{"_index":938,"title":{},"body":{"license.html":{}}}],["docs",{"_index":890,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":761,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":633,"title":{},"body":{"injectables/PrismaService.html":{}}}],["domain",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["domain.com",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["down",{"_index":690,"title":{},"body":{"injectables/PrismaService.html":{}}}],["driver",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.password",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/create",{"_index":436,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["dto/update",{"_index":438,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["due",{"_index":195,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["e",{"_index":652,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.g",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["e.params",{"_index":672,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.query",{"_index":661,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e2e",{"_index":635,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["edituser",{"_index":720,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituser(@getuser('userid",{"_index":738,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(userid",{"_index":725,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituserdto",{"_index":468,"title":{"classes/EditUserDto.html":{}},"body":{"classes/EditUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["em",{"_index":892,"title":{},"body":{"index.html":{}}}],["email",{"_index":281,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["emit",{"_index":626,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":612,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":616,"title":{},"body":{"injectables/PrismaService.html":{}}}],["env",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":903,"title":{},"body":{"index.html":{}}}],["env.local",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["env.prod",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["envfile",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["error",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["error.code",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["event",{"_index":627,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":638,"title":{},"body":{"injectables/PrismaService.html":{}}}],["executioncontext",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiration",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":523,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{}}}],["extract",{"_index":487,"title":{},"body":{"interfaces/Flags.html":{}}}],["extractflags",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractflags(args",{"_index":490,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":548,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie",{"_index":537,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie(req",{"_index":541,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":194,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["false",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["fieldresolverenhancers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":869,"title":{},"body":{"index.html":{},"license.html":{}}}],["fill",{"_index":904,"title":{},"body":{"index.html":{}}}],["find",{"_index":891,"title":{},"body":{"index.html":{}}}],["findall",{"_index":413,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findone",{"_index":414,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findone(@param('id",{"_index":443,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["findone(id",{"_index":421,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["first",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firstname",{"_index":310,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["fitness",{"_index":962,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["fixme:unsure",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["flag",{"_index":495,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys",{"_index":500,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys.foreach((key",{"_index":502,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagname",{"_index":496,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags",{"_index":479,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["flags.w",{"_index":516,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags.watch",{"_index":515,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[currentflag",{"_index":507,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[flagname",{"_index":498,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[key",{"_index":503,"title":{},"body":{"interfaces/Flags.html":{}}}],["followed",{"_index":846,"title":{},"body":{"index.html":{}}}],["following",{"_index":947,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('credentials",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('incorrect",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":621,"title":{},"body":{"injectables/PrismaService.html":{}}}],["format(query",{"_index":663,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formattedquery",{"_index":662,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formatter",{"_index":623,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["free",{"_index":923,"title":{},"body":{"license.html":{}}}],["function",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{},"coverage.html":{}}}],["functional",{"_index":835,"title":{},"body":{"index.html":{}}}],["functions",{"_index":821,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":945,"title":{},"body":{"license.html":{}}}],["g",{"_index":897,"title":{},"body":{"index.html":{}}}],["generate",{"_index":886,"title":{},"body":{"index.html":{}}}],["generated",{"_index":889,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":422,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["get('health",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":736,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@cachekey('home')@cachettl(number.max_safe_integer",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["gethealth",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["getme",{"_index":721,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(@getuser",{"_index":737,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(user",{"_index":728,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":824,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":733,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getusergraphql",{"_index":354,"title":{},"body":{"classes/AuthResolver-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":607,"title":{},"body":{"modules/PrismaModule.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":922,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"dependencies.html":{},"index.html":{}}}],["graphql:schema",{"_index":834,"title":{},"body":{"index.html":{}}}],["graphqlcontext",{"_index":90,"title":{"classes/GraphqlContext.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqldatetime",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqldefinitionsfactory",{"_index":485,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["handled",{"_index":850,"title":{},"body":{"index.html":{}}}],["hash",{"_index":308,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["hashing",{"_index":876,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":883,"title":{},"body":{"index.html":{}}}],["here",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":921,"title":{},"body":{"license.html":{}}}],["hiro",{"_index":919,"title":{},"body":{"license.html":{}}}],["holders",{"_index":967,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":992,"title":{},"body":{"properties.html":{}}}],["hour",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["http",{"_index":854,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('signin",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["httponly",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["https",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com/fundamentals/lifecycle",{"_index":637,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://github.com/jsfame/api.bookstore.nas",{"_index":993,"title":{},"body":{"properties.html":{}}}],["https://github.com/jsfame/api.bookstore.nas/issues",{"_index":995,"title":{},"body":{"properties.html":{}}}],["https://jsfame.github.io/api.bookstore.nas",{"_index":893,"title":{},"body":{"index.html":{}}}],["https://www.prisma.io/docs/concepts/database",{"_index":641,"title":{},"body":{"injectables/PrismaService.html":{}}}],["httpstatus",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":298,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":650,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ignoreexpiration",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implemented",{"_index":856,"title":{},"body":{"index.html":{}}}],["implements",{"_index":632,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":958,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["import('chalk",{"_index":654,"title":{},"body":{"injectables/PrismaService.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["imutation",{"_index":303,"title":{"classes/IMutation.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["included",{"_index":952,"title":{},"body":{"license.html":{}}}],["including",{"_index":932,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":617,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":154,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inspect",{"_index":842,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":884,"title":{},"body":{"index.html":{}}}],["install",{"_index":896,"title":{},"body":{"index.html":{}}}],["installation",{"_index":894,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":899,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["interactions",{"_index":858,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":478,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":480,"title":{},"body":{"interfaces/Flags.html":{},"overview.html":{}}}],["iquery",{"_index":312,"title":{"classes/IQuery.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["isemail",{"_index":287,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{}}}],["isemail()@isnotempty",{"_index":283,"title":{},"body":{"classes/AuthDto.html":{}}}],["isemail()@isoptional",{"_index":471,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isglobal",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":288,"title":{},"body":{"classes/AuthDto.html":{}}}],["iso",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["isoptional",{"_index":476,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring",{"_index":477,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring()@isoptional",{"_index":473,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstrongpassword",{"_index":289,"title":{},"body":{"classes/AuthDto.html":{}}}],["isstrongpassword()@isnotempty",{"_index":285,"title":{},"body":{"classes/AuthDto.html":{}}}],["items",{"_index":843,"title":{},"body":{"index.html":{}}}],["jest",{"_index":880,"title":{},"body":{"index.html":{}}}],["john",{"_index":506,"title":{},"body":{"interfaces/Flags.html":{}}}],["joi",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(2",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('hiro@jwt#token",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().valid('dev",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":486,"title":{},"body":{"interfaces/Flags.html":{}}}],["join(process.cwd",{"_index":513,"title":{},"body":{"interfaces/Flags.html":{}}}],["jwt",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt_max_age",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt_secret",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtconstants",{"_index":535,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":527,"title":{"classes/JwtGuard.html":{}},"body":{"classes/JwtGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":324,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":318,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtstrategy.extractjwtfromcookie",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["keywordcase",{"_index":668,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kind",{"_index":957,"title":{},"body":{"license.html":{}}}],["kleur",{"_index":620,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["kleur.cyan(json.stringify(e.params",{"_index":676,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.green(formattedquery",{"_index":674,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.magenta(`${e.duration}ms",{"_index":678,"title":{},"body":{"injectables/PrismaService.html":{}}}],["laciferin@gmail.com",{"_index":998,"title":{},"body":{"properties.html":{}}}],["landing",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["language",{"_index":664,"title":{},"body":{"injectables/PrismaService.html":{}}}],["lastname",{"_index":311,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["layers",{"_index":866,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":628,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":971,"title":{},"body":{"license.html":{}}}],["liable",{"_index":968,"title":{},"body":{"license.html":{}}}],["license",{"_index":915,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":914,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":933,"title":{},"body":{"license.html":{}}}],["limited",{"_index":959,"title":{},"body":{"license.html":{}}}],["linesbetweenqueries",{"_index":670,"title":{},"body":{"injectables/PrismaService.html":{}}}],["literal",{"_index":545,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["log",{"_index":647,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logevents",{"_index":624,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":691,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["long",{"_index":494,"title":{},"body":{"interfaces/Flags.html":{}}}],["manage",{"_index":839,"title":{},"body":{"index.html":{}}}],["management",{"_index":868,"title":{},"body":{"index.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(@getusergraphql",{"_index":358,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["me(user",{"_index":348,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["merchantability",{"_index":961,"title":{},"body":{"license.html":{}}}],["merge",{"_index":936,"title":{},"body":{"license.html":{}}}],["message",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["methodologies",{"_index":845,"title":{},"body":{"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["milliseconds",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":820,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":913,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":935,"title":{},"body":{"license.html":{}}}],["modular",{"_index":847,"title":{},"body":{"index.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["morph",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["mutation",{"_index":336,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signin",{"_index":331,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signup",{"_index":333,"title":{},"body":{"classes/AuthResolver.html":{}}}],["name",{"_index":163,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["needs",{"_index":739,"title":{},"body":{"controllers/UserController.html":{}}}],["nest/swagger",{"_index":855,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":810,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"interfaces/Flags.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":705,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":531,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":184,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"interfaces/Flags.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":965,"title":{},"body":{"license.html":{}}}],["notice",{"_index":950,"title":{},"body":{"license.html":{}}}],["npm",{"_index":895,"title":{},"body":{"index.html":{}}}],["null",{"_index":314,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":309,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":299,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object(dto",{"_index":862,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":926,"title":{},"body":{"license.html":{}}}],["ok",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["onmoduledestroy",{"_index":636,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":613,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["order",{"_index":573,"title":{"classes/Order.html":{}},"body":{"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["order.controller",{"_index":596,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":586,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts",{"_index":467,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.service",{"_index":585,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":575,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":61,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orders",{"_index":840,"title":{},"body":{"index.html":{}}}],["orderservice",{"_index":584,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["otherwise",{"_index":975,"title":{},"body":{"license.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outputas",{"_index":514,"title":{},"body":{"interfaces/Flags.html":{}}}],["over",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["overview",{"_index":982,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":873,"title":{},"body":{"index.html":{}}}],["p2002",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":778,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":432,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["parameters",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":671,"title":{},"body":{"injectables/PrismaService.html":{}}}],["parser",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":704,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{}}}],["partialtype(createbookdto",{"_index":707,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["partialtype(createorderdto",{"_index":709,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["particular",{"_index":963,"title":{},"body":{"license.html":{}}}],["passport",{"_index":549,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passport.js",{"_index":833,"title":{},"body":{"index.html":{}}}],["passportjs",{"_index":874,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":547,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":550,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":282,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"index.html":{}}}],["patch",{"_index":433,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":429,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["path",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["pattern",{"_index":863,"title":{},"body":{"index.html":{}}}],["payload",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":920,"title":{},"body":{"license.html":{}}}],["permit",{"_index":943,"title":{},"body":{"license.html":{}}}],["person",{"_index":925,"title":{},"body":{"license.html":{}}}],["persons",{"_index":944,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":860,"title":{},"body":{"index.html":{}}}],["playground",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["pnpm",{"_index":898,"title":{},"body":{"index.html":{}}}],["port",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":954,"title":{},"body":{"license.html":{}}}],["post",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["post('signin",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":665,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prefix",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["prerequisite",{"_index":900,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.logdefinition",{"_index":625,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":608,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":356,"title":{},"body":{"classes/AuthResolver-1.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{}}}],["prisma/client/runtime/library",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["prisma/prisma.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":610,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientknownrequesterror",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismaclientunknownrequesterror",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismamodule",{"_index":62,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":160,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["process.argv.slice(2",{"_index":508,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["process.env.force_color",{"_index":648,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.mode",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["prod",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["production",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project",{"_index":887,"title":{},"body":{"index.html":{}}}],["promise",{"_index":305,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["properties",{"_index":280,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"properties.html":{}}}],["provided",{"_index":955,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["publish",{"_index":937,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":964,"title":{},"body":{"license.html":{}}}],["pwmatches",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":351,"title":{},"body":{"classes/AuthResolver-1.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["query('me",{"_index":349,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"classes/ServiceStatus.html":{}}}],["reflect",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":415,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["remove(@param('id",{"_index":447,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["remove(id",{"_index":424,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["removes",{"_index":462,"title":{},"body":{"injectables/BookService.html":{},"injectables/OrderService.html":{}}}],["replace",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["repo",{"_index":912,"title":{},"body":{"index.html":{}}}],["repository",{"_index":996,"title":{},"body":{"properties.html":{}}}],["req",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{}}}],["req.cookies",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.cookies.token",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies[tokenfield].length",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request",{"_index":521,"title":{},"body":{"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["requesttype",{"_index":542,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestwithuser",{"_index":518,"title":{"classes/RequestWithUser.html":{}},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["required",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["res.clearcookie('token",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie(cookiename",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('token",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('user",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send(token",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolver",{"_index":337,"title":{},"body":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{}}}],["resolver('auth",{"_index":338,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('user",{"_index":357,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["resolvers",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["restriction",{"_index":931,"title":{},"body":{"license.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":934,"title":{},"body":{"license.html":{}}}],["run",{"_index":906,"title":{},"body":{"index.html":{}}}],["running",{"_index":182,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["rxjs",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["salts",{"_index":877,"title":{},"body":{"index.html":{}}}],["schema",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["sec",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["secret",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["select",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["sell",{"_index":941,"title":{},"body":{"license.html":{}}}],["sent",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["separate",{"_index":851,"title":{},"body":{"index.html":{}}}],["separating",{"_index":852,"title":{},"body":{"index.html":{}}}],["server",{"_index":828,"title":{},"body":{"index.html":{}}}],["service",{"_index":740,"title":{},"body":{"controllers/UserController.html":{}}}],["services",{"_index":857,"title":{},"body":{"index.html":{}}}],["servicestatus",{"_index":173,"title":{"classes/ServiceStatus.html":{}},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["set",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["shall",{"_index":951,"title":{},"body":{"license.html":{}}}],["short",{"_index":499,"title":{},"body":{"interfaces/Flags.html":{}}}],["signed",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signin(@args('data",{"_index":341,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signin(@body",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(data",{"_index":306,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["signin(dto",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signtoken",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(userid",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signup(@args('data",{"_index":339,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signup(@body",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(data",{"_index":304,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["signup(dto",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signuppayload",{"_index":297,"title":{"classes/SignUpPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["software",{"_index":927,"title":{},"body":{"license.html":{}}}],["solana/web3.js",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["something",{"_index":741,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specs",{"_index":836,"title":{},"body":{"index.html":{}}}],["sql",{"_index":622,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["src/**/*.graphql",{"_index":512,"title":{},"body":{"interfaces/Flags.html":{}}}],["src/.../app.module.ts",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generate",{"_index":823,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":1001,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.service.ts",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.dto.ts",{"_index":517,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["src/app.dto.ts:11",{"_index":519,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:12",{"_index":520,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:8",{"_index":693,"title":{},"body":{"classes/RequestWithUser.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":156,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":161,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":169,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:4",{"_index":695,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:6",{"_index":697,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:7",{"_index":698,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:8",{"_index":696,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/auth/auth.controller.ts",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":327,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:16",{"_index":334,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:23",{"_index":332,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:9",{"_index":329,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.service.ts",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/get",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":279,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":286,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":284,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/guard/jwt.guard.ts",{"_index":528,"title":{},"body":{"classes/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guard/jwt.guard.ts:3",{"_index":529,"title":{},"body":{"classes/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":534,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":540,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:24",{"_index":546,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:35",{"_index":543,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/book/book.controller.ts",{"_index":411,"title":{},"body":{"controllers/BookController.html":{},"coverage.html":{}}}],["src/book/book.controller.ts:11",{"_index":419,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:16",{"_index":420,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:21",{"_index":423,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:26",{"_index":430,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:31",{"_index":426,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.module.ts",{"_index":451,"title":{},"body":{"modules/BookModule.html":{}}}],["src/book/book.service.ts",{"_index":453,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{}}}],["src/book/book.service.ts:11",{"_index":455,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:15",{"_index":456,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:19",{"_index":458,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:23",{"_index":457,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:7",{"_index":454,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/dto/create",{"_index":463,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{}}}],["src/book/dto/update",{"_index":703,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/book/entities/book.entity.ts",{"_index":409,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/generate",{"_index":481,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/graphql.ts",{"_index":292,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/graphql.ts:12",{"_index":293,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:13",{"_index":294,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:17",{"_index":325,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/graphql.ts:21",{"_index":701,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:22",{"_index":700,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:23",{"_index":699,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:24",{"_index":702,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:28",{"_index":525,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:30",{"_index":524,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:34",{"_index":714,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:35",{"_index":711,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:36",{"_index":713,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:37",{"_index":712,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:38",{"_index":715,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:39",{"_index":710,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:40",{"_index":716,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:44",{"_index":526,"title":{},"body":{"classes/IQuery.html":{}}}],["src/main.ts",{"_index":775,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":466,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/order/dto/update",{"_index":708,"title":{},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":574,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/order.controller.ts",{"_index":576,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:11",{"_index":578,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:16",{"_index":579,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:21",{"_index":580,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:26",{"_index":583,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:31",{"_index":581,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":595,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":597,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:11",{"_index":599,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:15",{"_index":600,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:19",{"_index":602,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:23",{"_index":601,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:7",{"_index":598,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module.ts",{"_index":606,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":609,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.service.ts:29",{"_index":614,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:71",{"_index":619,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:81",{"_index":618,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:88",{"_index":615,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/user/dto/edit",{"_index":469,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":717,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:23",{"_index":730,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:29",{"_index":727,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":724,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":751,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.resolver.ts",{"_index":344,"title":{},"body":{"classes/AuthResolver-1.html":{},"coverage.html":{}}}],["src/user/user.resolver.ts:17",{"_index":350,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["src/user/user.resolver.ts:9",{"_index":347,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["src/user/user.service.ts",{"_index":752,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:24",{"_index":754,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":753,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":755,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":643,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert",{"_index":639,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert=root.crt",{"_index":640,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":907,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":908,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":909,"title":{},"body":{"index.html":{}}}],["started",{"_index":825,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":536,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["status",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["stdout",{"_index":629,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":888,"title":{},"body":{"index.html":{}}}],["sub",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":946,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":939,"title":{},"body":{"license.html":{}}}],["subscriptions",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["substantial",{"_index":953,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":190,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["super",{"_index":533,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["supertest",{"_index":881,"title":{},"body":{"index.html":{}}}],["support",{"_index":979,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":980,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":313,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["tabwidth",{"_index":666,"title":{},"body":{"injectables/PrismaService.html":{}}}],["taken",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["tear",{"_index":689,"title":{},"body":{"injectables/PrismaService.html":{}}}],["technical",{"_index":844,"title":{},"body":{"index.html":{}}}],["test",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["test').default('dev",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["test:covlicense",{"_index":911,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":910,"title":{},"body":{"index.html":{}}}],["testing",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["tests",{"_index":879,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":682,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$executerawunsafe(\"set",{"_index":683,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":686,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('query",{"_index":651,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction",{"_index":688,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethealth",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authcontroller.signin(dto",{"_index":342,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authcontroller.signup(dto",{"_index":340,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.signin(dto",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.bookservice.create(createbookdto",{"_index":441,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findall",{"_index":442,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findone(+id",{"_index":444,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.remove(+id",{"_index":448,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.update(+id",{"_index":446,"title":{},"body":{"controllers/BookController.html":{}}}],["this.config.get('jwt_secret",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.jwt.signasync(payload",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(createorderdto",{"_index":588,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":589,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(+id",{"_index":590,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.remove(+id",{"_index":592,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.update(+id",{"_index":591,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma",{"_index":186,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["this.prisma.user.create",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.delete",{"_index":759,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.prisma.user.update",{"_index":757,"title":{},"body":{"injectables/UserService.html":{}}}],["this.signtoken(user.id",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.deletemany",{"_index":692,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.usercontroller.getme(user",{"_index":359,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["this.userservice.deleteuser(userid",{"_index":747,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituser(userid",{"_index":744,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["throws",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["time",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["timezone",{"_index":684,"title":{},"body":{"injectables/PrismaService.html":{}}}],["todo",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["token.access_token",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenfield",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":875,"title":{},"body":{"index.html":{}}}],["tools",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":832,"title":{},"body":{"index.html":{}}}],["tort",{"_index":974,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":861,"title":{},"body":{"index.html":{}}}],["transferring",{"_index":864,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["transformers",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["transport",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["try",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":649,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["type",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":999,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typepaths",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Flags.html":{}}}],["types",{"_index":706,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":831,"title":{},"body":{"index.html":{}}}],["typings.ts",{"_index":482,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":878,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":168,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["up",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["update",{"_index":416,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["update(@param('id",{"_index":445,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["update(id",{"_index":427,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["updatebookdto",{"_index":428,"title":{"classes/UpdateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":301,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["updateorderdto",{"_index":582,"title":{"classes/UpdateOrderDto.html":{}},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["updates",{"_index":461,"title":{},"body":{"injectables/BookService.html":{},"injectables/OrderService.html":{}}}],["upper",{"_index":669,"title":{},"body":{"injectables/PrismaService.html":{}}}],["url",{"_index":645,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["useguards",{"_index":731,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":735,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete",{"_index":723,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get('me",{"_index":729,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@patch",{"_index":726,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":307,"title":{"classes/User.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":353,"title":{},"body":{"classes/AuthResolver-1.html":{},"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":470,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":474,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:14",{"_index":475,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:6",{"_index":472,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.email",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.hash",{"_index":758,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":352,"title":{},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["user[data",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":346,"title":{"controllers/UserController.html":{}},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":63,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":718,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":345,"title":{"injectables/UserService.html":{}},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":830,"title":{},"body":{"index.html":{}}}],["utility",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":538,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":544,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":859,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":290,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":505,"title":{},"body":{"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1002,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":905,"title":{},"body":{"index.html":{}}}],["version",{"_index":987,"title":{},"body":{"properties.html":{}}}],["w",{"_index":483,"title":{},"body":{"interfaces/Flags.html":{}}}],["walletid",{"_index":522,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["ware",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["warn",{"_index":630,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":960,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":956,"title":{},"body":{"license.html":{}}}],["watch",{"_index":484,"title":{},"body":{"interfaces/Flags.html":{},"index.html":{}}}],["web2",{"_index":989,"title":{},"body":{"properties.html":{}}}],["whatever",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whether",{"_index":972,"title":{},"body":{"license.html":{}}}],["whitelist:true",{"_index":743,"title":{},"body":{"controllers/UserController.html":{}}}],["without",{"_index":930,"title":{},"body":{"license.html":{}}}],["work",{"_index":634,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ws",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHealth\n                            \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheTTL(undefined)@Get('health')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@CacheKey('home')@CacheTTL(Number.MAX_SAFE_INTEGER)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { CacheInterceptor, CacheKey, CacheTTL } from '@nestjs/cache-manager'\n\n@Controller()\n@UseInterceptors(CacheInterceptor)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @CacheKey('home')\n  @CacheTTL(Number.MAX_SAFE_INTEGER) //default is just 1 sec\n  getHello() {\n    return this.appService.getHello()\n  }\n\n  @CacheTTL(5 * 1000)\n  @Get('health')\n  getHealth() {\n    return this.appService.getHealth()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BookModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { ConfigModule } from '@nestjs/config'\nimport { AuthModule } from './auth/auth.module'\nimport Joi from 'joi'\nimport { CacheModule } from '@nestjs/cache-manager'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { ApolloServerPluginLandingPageGraphQLPlayground } from '@apollo/server-plugin-landing-page-graphql-playground'\nimport { GraphQLDateTime } from 'graphql-iso-date'\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'\nimport { AppController } from './app.controller'\nimport { GraphqlContext } from './app.dto'\nimport { UserModule } from './user/user.module'\nimport { PrismaModule } from './prisma/prisma.module'\nimport { BookModule } from './book/book.module'\nimport { OrderModule } from './order/order.module'\n\nlet mode = process.env.MODE\nlet envFile = '.env'\n\nswitch (mode) {\n  case 'test':\n    envFile = '.env.test'\n    process.env.NODE_ENV = 'testing'\n    break\n  case 'prod':\n    process.env.NODE_ENV = 'production'\n    envFile = '.env.prod'\n    break\n  default:\n    mode = 'dev'\n    process.env.NODE_ENV = 'development'\n    envFile = '.env.local'\n}\n\nconsole.debug({ mode, envFile })\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [envFile, '.env'],\n      isGlobal: true,\n      cache: true,\n      validationSchema: Joi.object({\n        MODE: Joi.string().valid('dev', 'prod', 'test').default('dev'),\n        PORT: Joi.number().default(3000),\n        DATABASE_URL: Joi.string(),\n        JWT_SECRET: Joi.string().default('Hiro@JWT#TOKEN$'),\n        JWT_MAX_AGE: Joi.number().default(2 * 60 * 60 * 1000),\n      }),\n    }),\n    CacheModule.register({ isGlobal: true }),\n    GraphQLModule.forRoot({\n      context: ({ req, res }: GraphqlContext) => ({ req, res }), //required for cookies\n\n      fieldResolverEnhancers: ['interceptors'], //FIXME:unsure\n\n      autoSchemaFile: false, // schema-first\n      playground: false,\n      driver: ApolloDriver,\n      plugins: [ApolloServerPluginLandingPageGraphQLPlayground()],\n      typePaths: ['./**/*.graphql'],\n      resolvers: { DateTime: GraphQLDateTime },\n      subscriptions: {\n        'graphql-ws': true,\n        'subscriptions-transport-ws': true,\n      },\n    }),\n    PrismaModule,\n    AuthModule,\n    UserModule,\n    BookModule,\n    OrderModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHealth\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Res } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { AuthDto } from './dto'\nimport { Response } from 'express'\nimport { ConfigService } from '@nestjs/config'\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService, private config: ConfigService) {}\n\n  @Post('signup')\n  signup(@Body() dto: AuthDto) {\n    return this.authService.signup(dto)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signin(@Body() dto: AuthDto, @Res() res: Response) {\n    const token = await this.authService.signin(dto)\n\n    /*    res.cookie('user', dto.email, { //TODO:\n      // Set cookie options here (e.g., expiration, domain, path, etc.)\n      maxAge: 3600000, // Cookie expiration time in milliseconds (1 hour)\n      httpOnly: true, // Cookie accessible only through HTTP(S) requests\n      secure: true, // Cookie sent only over HTTPS if true\n      signed: true,\n    })*/\n    // const cookies = req.cookies; //TODO: middle ware to clear the cookies when signin\n    // TODO: utility function to clear and set cookie\n    // for (let cookieName in cookies) {\n    //   res.clearCookie(cookieName); // Replace '.your-domain.com' with your actual domain\n    // }\n    res.clearCookie('token')\n    res.cookie('token', token.access_token, {\n      maxAge: this.config.get('JWT_SECRET') * 1000 || 60 * 60 * 1000,\n      secure: true,\n      httpOnly: true,\n      // signed: true,\n    })\n\n    res.send(token)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsStrongPassword } from 'class-validator'\n\nexport class AuthDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string\n\n  @IsStrongPassword()\n  @IsNotEmpty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInput.html":{"url":"classes/AuthInput.html","title":"class - AuthInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PrismaModule } from '../prisma/prisma.module'\nimport { JwtStrategy } from './strategy'\n\n@Module({\n  imports: [JwtModule.register({}), PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPayload.html":{"url":"classes/AuthPayload.html","title":"class - AuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authController: AuthController)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authController\n                                                  \n                                                        \n                                                                        AuthController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(dto: AuthDto, ctx: GraphqlContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signIn')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n                                    \n                                                GraphqlContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signUp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql'\nimport { AuthService } from './auth.service'\nimport { AuthController } from './auth.controller'\nimport { GraphqlContext } from '../app.dto'\nimport { AuthDto } from './dto'\nimport { AuthInput } from '../graphql'\n\n@Resolver('Auth')\nexport class AuthResolver {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authController: AuthController,\n  ) {}\n\n  @Mutation('signUp')\n  signUp(@Args('data') dto: AuthDto) {\n    console.debug({ dto })\n\n    return this.authController.signup(dto as AuthInput)\n  }\n\n  @Mutation('signIn')\n  signIn(@Args('data') dto: AuthDto, @Context() ctx: GraphqlContext) {\n    console.debug({ dto })\n\n    return this.authController.signin(dto as AuthInput, ctx.res)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver-1.html":{"url":"classes/AuthResolver-1.html","title":"class - AuthResolver-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, userService: UserService, userController: UserController)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userController\n                                                  \n                                                        \n                                                                        UserController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { UserService } from './user.service'\nimport { UserController } from './user.controller'\nimport { GetUserGraphql } from '../auth/decorator'\nimport { User } from '@prisma/client'\n\n@Resolver('User')\nexport class AuthResolver {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly userService: UserService,\n    private readonly userController: UserController,\n  ) {}\n\n  @Query('me')\n  me(@GetUserGraphql() user: User) {\n    return this.userController.getMe(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userId: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { AuthDto } from './dto'\n\nimport argon from 'argon2'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwt: JwtService,\n    private config: ConfigService,\n  ) {}\n\n  async signup(dto: AuthDto) {\n    const hash = await argon.hash(dto.password)\n\n    try {\n      const user = await this.prisma.user.create({\n        data: {\n          email: dto.email,\n          hash: hash,\n        },\n        select: {\n          //FIXME: use transformers\n          id: true,\n          email: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      return user\n    } catch (error) {\n      console.error({\n        code: error.code,\n        error,\n      })\n      if (\n        error instanceof PrismaClientKnownRequestError ||\n        PrismaClientUnknownRequestError\n      ) {\n        if (error.code == 'P2002') {\n          throw new ForbiddenException('credentials taken')\n        }\n      }\n      throw error\n    }\n  }\n\n  async signin(dto: AuthDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email: dto.email,\n      },\n    })\n\n    if (!user) throw new ForbiddenException('incorrect credentials')\n\n    const pwMatches = await argon.verify(user.hash, dto.password)\n\n    if (!pwMatches) throw new ForbiddenException('invalid credentials')\n\n    return this.signToken(user.id, user.email)\n  }\n\n  async signToken(userId: number, email: string) {\n    const payload = {\n      sub: userId,\n      email,\n    }\n    const secret = this.config.get('JWT_SECRET')\n\n    return {\n      access_token: await this.jwt.signAsync(payload, {\n        expiresIn: '1hr', //TODO:\n        secret: secret,\n      }),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/entities/book.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Book {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookController.html":{"url":"controllers/BookController.html","title":"controller - BookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                book\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createBookDto: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateBookDto: UpdateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common'\nimport { BookService } from './book.service'\nimport { CreateBookDto } from './dto/create-book.dto'\nimport { UpdateBookDto } from './dto/update-book.dto'\n\n@Controller('book')\nexport class BookController {\n  constructor(private readonly bookService: BookService) {}\n\n  @Post()\n  create(@Body() createBookDto: CreateBookDto) {\n    return this.bookService.create(createBookDto)\n  }\n\n  @Get()\n  findAll() {\n    return this.bookService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.bookService.findOne(+id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateBookDto: UpdateBookDto) {\n    return this.bookService.update(+id, updateBookDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.bookService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookModule.html":{"url":"modules/BookModule.html","title":"module - BookModule","body":"\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\n\nBookService\n\nBookService\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/book/book.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { BookService } from './book.service'\nimport { BookController } from './book.controller'\n\n@Module({\n  controllers: [BookController],\n  providers: [BookService],\n})\nexport class BookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBookDto: CreateBookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBookDto: UpdateBookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateBookDto } from './dto/create-book.dto'\nimport { UpdateBookDto } from './dto/update-book.dto'\n\n@Injectable()\nexport class BookService {\n  create(createBookDto: CreateBookDto) {\n    return 'This action adds a new book'\n  }\n\n  findAll() {\n    return `This action returns all book`\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} book`\n  }\n\n  update(id: number, updateBookDto: UpdateBookDto) {\n    return `This action updates a #${id} book`\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} book`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/create-book.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateBookDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOrderDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserDto.html":{"url":"classes/EditUserDto.html","title":"class - EditUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/edit-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator'\n\nexport class EditUserDto {\n  @IsEmail()\n  @IsOptional()\n  email?: string\n\n  @IsString()\n  @IsOptional()\n  firstName?: string\n\n  @IsString()\n  @IsOptional()\n  lastName?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Flags.html":{"url":"interfaces/Flags.html","title":"interface - Flags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Flags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generate-typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            w\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        w\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        w:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDefinitionsFactory } from '@nestjs/graphql'\nimport { join } from 'path'\n\ninterface Flags {\n  watch?: boolean\n  w?: boolean\n}\n\n// Function to extract flags from the arguments array\nfunction extractFlags(args) {\n  const flags: Flags = {}\n  let currentFlag = null\n\n  for (const arg of args) {\n    if (arg.startsWith('--')) {\n      // Long flag (e.g., --watch)\n      const flagName = arg.slice(2)\n      flags[flagName] = true\n      currentFlag = flagName\n    } else if (arg.startsWith('-')) {\n      // Short flag (e.g., -w)\n      const flagKeys = arg.slice(1).split('')\n      flagKeys.forEach((key) => {\n        flags[key] = true\n      })\n      currentFlag = arg.slice(-1)\n    } else if (currentFlag) {\n      // Flag value (e.g., --name John)\n      flags[currentFlag] = arg\n      currentFlag = null\n    }\n  }\n\n  return flags\n}\n\nconst args = process.argv.slice(2)\nconst flags: Flags = extractFlags(args)\n\nconsole.log('Flags:', flags)\n\nconst definitionsFactory = new GraphQLDefinitionsFactory()\ndefinitionsFactory.generate({\n  typePaths: ['./src/**/*.graphql'],\n  path: join(process.cwd(), 'src/graphql.ts'),\n  outputAs: 'class',\n  watch: flags.watch || flags.w,\n})\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphqlContext.html":{"url":"classes/GraphqlContext.html","title":"class - GraphqlContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphqlContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                req\n                            \n                            \n                                res\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        req\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RequestWithUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Response\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IMutation.html":{"url":"classes/IMutation.html","title":"class - IMutation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IMutation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SignUpPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IQuery.html":{"url":"classes/IQuery.html","title":"class - IQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me()\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User | Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtGuard.html":{"url":"classes/JwtGuard.html","title":"class - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport'\n\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtConstants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                extractJWTFromCookie\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        extractJWTFromCookie\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractJWTFromCookie(req: RequestType)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            RequestType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { userId: number; email: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { ConfigService } from '@nestjs/config'\nimport { PrismaService } from '../../prisma/prisma.service'\nimport { Request as RequestType } from 'express'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  private jwtConstants: any\n\n  constructor(private config: ConfigService, private prisma: PrismaService) {\n    const mode = config.get('MODE') || 'dev'\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        JwtStrategy.extractJWTFromCookie,\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ]),\n      ignoreExpiration: mode == 'dev' || mode == 'test',\n      secretOrKey: config.get('JWT_SECRET'),\n    })\n  }\n\n  validate(payload: { sub: number; email: string }) {\n    const user = this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    })\n    if (!user) return null //throws the 401 error\n\n    return { userId: payload.sub, email: payload.email }\n    // whatever is returned is appended to req.user\n  }\n  private static extractJWTFromCookie(req: RequestType): string | null {\n    const tokenField = 'token'\n    console.debug(req.cookies)\n    if (req.cookies && tokenField in req.cookies && req.cookies[tokenField].length > 0) {\n      console.log('extracted cookie')\n      return req.cookies.token\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Order {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateOrderDto: UpdateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                UpdateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common'\nimport { OrderService } from './order.service'\nimport { CreateOrderDto } from './dto/create-order.dto'\nimport { UpdateOrderDto } from './dto/update-order.dto'\n\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  create(@Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(createOrderDto)\n  }\n\n  @Get()\n  findAll() {\n    return this.orderService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(+id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateOrderDto: UpdateOrderDto) {\n    return this.orderService.update(+id, updateOrderDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.orderService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nOrderService\n\nOrderService\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { OrderService } from './order.service'\nimport { OrderController } from './order.controller'\n\n@Module({\n  controllers: [OrderController],\n  providers: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateOrderDto: UpdateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                UpdateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateOrderDto } from './dto/create-order.dto'\nimport { UpdateOrderDto } from './dto/update-order.dto'\n\n@Injectable()\nexport class OrderService {\n  create(createOrderDto: CreateOrderDto) {\n    return 'This action adds a new order'\n  }\n\n  findAll() {\n    return `This action returns all order`\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} order`\n  }\n\n  update(id: number, updateOrderDto: UpdateOrderDto) {\n    return `This action updates a #${id} order`\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} order`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common'\nimport { PrismaService } from './prisma.service'\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDb\n                            \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDb\n                        \n                    \n                \n            \n            \n                \ncleanDb()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common'\nimport { Prisma, PrismaClient } from '@prisma/client'\nimport { ConfigService } from '@nestjs/config'\nimport kleur from 'kleur'\nimport { format } from 'sql-formatter'\n\nconst logEvents: Prisma.LogDefinition[] = [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n\nlet DB_CONNECTED = false\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  // FIXME doesn't work for e2e OnModuleDestroy{\n  // https://docs.nestjs.com/fundamentals/lifecycle-events\n\n  constructor(config: ConfigService) {\n    const sslcert = '?sslcert=root.crt'\n    //https://www.prisma.io/docs/concepts/database-connectors/postgresql#configuring-an-ssl-connection\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL') + sslcert,\n        },\n      },\n      log: logEvents,\n    })\n\n    process.env.FORCE_COLOR = 'true'\n\n    // @ts-ignore\n    this.$on('query', async (e: any) => {\n      if (config.get('MODE') != 'dev') {\n        return\n      }\n\n      // const chalk = await import('chalk')\n      // console.log(chalk.yellow('Query: ') + chalk.green(e.query))\n      // console.log(chalk.yellow('Params: ') + chalk.cyan(JSON.stringify(e.params)))\n      // console.log(chalk.yellow('Duration: ') + chalk.magenta(`${e.duration}ms`))\n      const query = e.query\n\n      const formattedQuery = format(query, {\n        language: 'postgresql',\n        tabWidth: 2,\n        keywordCase: 'upper',\n        linesBetweenQueries: 2,\n        params: e.params || [],\n      })\n      console.log(kleur.yellow('Query: ') + kleur.green(formattedQuery))\n      console.log(kleur.yellow('Params: ') + kleur.cyan(JSON.stringify(e.params)))\n      console.log(kleur.yellow('Duration: ') + kleur.magenta(`${e.duration}ms`))\n    })\n  }\n  async onModuleInit() {\n    if (DB_CONNECTED) return\n\n    console.info(new Date(), 'connecting to the database')\n    await this.$connect()\n    await this.$executeRawUnsafe(\"SET timezone = 'Asia/Kolkata'\")\n\n    DB_CONNECTED = true\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    // @ts-ignore\n    this.$on('beforeExit', async () => {\n      await app.close()\n    })\n  }\n\n  cleanDb() {\n    return this.$transaction([\n      //tear down logic\n      this.user.deleteMany(),\n    ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestWithUser.html":{"url":"classes/RequestWithUser.html","title":"class - RequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceStatus.html":{"url":"classes/ServiceStatus.html","title":"class - ServiceStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ok: boolean, status: string, debug: any)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ok\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        debug\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OK'\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpPayload.html":{"url":"classes/SignUpPayload.html","title":"class - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/update-book.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateBookDto } from './create-book.dto'\n\nexport class UpdateBookDto extends PartialType(CreateBookDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/update-order.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateOrderDto } from './create-order.dto'\n\nexport class UpdateOrderDto extends PartialType(CreateOrderDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                hash\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                editUser\n                            \n                            \n                                    \n                                    \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Patch()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Injectable,\n  Patch,\n  UseGuards,\n} from '@nestjs/common'\nimport { JwtGuard } from '../auth/guard'\nimport { GetUser } from '../auth/decorator'\nimport { User } from '@prisma/client'\nimport { EditUserDto } from './dto'\nimport { UserService } from './user.service'\n\n@Injectable()\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtGuard)\n  @Get('me')\n  getMe(@GetUser() user: User) {\n    return user\n  }\n\n  @UseGuards(JwtGuard)\n  @Patch()\n  editUser(@GetUser('userId') userId: number, @Body() dto: EditUserDto) {\n    //needs service\n    // we will get something in api request due to whitelist:true\n    return this.userService.editUser(userId, dto)\n  }\n\n  @UseGuards(JwtGuard)\n  @Delete()\n  async deleteUser(@GetUser('userId') userId: number) {\n    return {\n      message: 'user deleted',\n      user: await this.userService.deleteUser(userId),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserController\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserController } from './user.controller'\nimport { UserService } from './user.service'\nimport { AuthModule } from '../auth/auth.module'\nimport { PrismaModule } from '../prisma/prisma.module'\n\n@Module({\n  imports: [AuthModule, PrismaModule],\n  controllers: [UserController],\n  providers: [UserService, UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { EditUserDto } from './dto'\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  async editUser(userId: number, dto: EditUserDto) {\n    console.log({ userId, dto })\n    const user = await this.prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: {\n        ...dto,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n\n  async deleteUser(userId: number) {\n    const user = await this.prisma.user.delete({\n      where: {\n        id: userId,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            GraphqlContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            RequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            class\n            ServiceStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUserGraphql\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            class\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/book/book.controller.ts\n            \n            controller\n            BookController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/book/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/book/entities/book.entity.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            interface\n            Flags\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            function\n            extractFlags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            args\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            definitionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            flags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IMutation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            SignUpPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            DB_CONNECTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            logEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/edit-user.dto.ts\n            \n            class\n            EditUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            injectable\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.7.5\n        \n            @nestjs/apollo : ^12.0.7\n        \n            @nestjs/cache-manager : ^2.0.1\n        \n            @nestjs/common : ^10.0.5\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.5\n        \n            @nestjs/graphql : ^12.0.8\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.5\n        \n            @solana/web3.js : ^1.78.0\n        \n            argon2 : ^0.30.3\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            graphql : 16.7.1\n        \n            graphql-iso-date : ^3.6.1\n        \n            graphql-subscriptions : 2.0.0\n        \n            graphql-tools : ^9.0.0\n        \n            joi : ^17.9.2\n        \n            kleur : ^4.1.5\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-nestjs-graphql : ^18.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : 7.8.1\n        \n            sql-formatter : ^12.2.3\n        \n            ts-morph : ^19.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            extractFlags   (src/.../generate-typings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractFlags\n                        \n                    \n                \n            \n            \n                \nextractFlags(args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\napi.bookstore.nas\nDescription\nAPI Server built using , TypeScript, Prisma, Graphql and PostgreSQL.\nBuilt with ❤️on top of\n\n Typescript\n NestJS\n Prisma\n Passport.js\n Graphql:Schema First\n PostgreSQL\n\nFunctional specs\nAPI allows authenticated to users to create and manage orders\n\nUser SignUp & SignIn\nCRUD Orders\nInspect Items\n\nTechnical methodologies followed\n\nModular architecture: Business Logic & Auth handled in separate modules, separating\nconcerns.\nHTTP requests are handled by Controllers\n API documentation using nest/swagger module \nBusiness logic is implemented in Services\nDatabase interactions are handled using Prisma\nValidation using NestJS Pipes\nData Transfer Object(DTO) pattern for transferring data between layers\nConfiguration management using .env files for development, test & prod configs\nAuthentication / Authorization, Event ownership by users\nPassportJS, JWT tokens, Password hashing, salts\nUnit tests using Jest\nSupertest for E2E testing\n\nTechnical documentation using Compodoc\nAs NestJS is heavily inspired by Angular, we can generate the documentation about project\nstructure modules, controllers, services etc. I have generated the docs.\nFind 'em here - https://jsFame.github.io/api.bookstore.nas/\nInstallation\nnpm install -g pnpm\npnpm installRunning the app\nPrerequisite for running the app in any mode - dev/test/prod\n\nCopy .env.example with .env\nFill in the env vars in .env\n\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covLicense\nThis repo is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Hiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : Web2 backend of bookstore.nas\n        \n            Homepage : https://github.com/jsFame/api.bookstore.nas\n        \n            Bugs : https://github.com/jsFame/api.bookstore.nas/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/jsFame/api.bookstore.nas\n        \n            Author : laciferin@gmail.com\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateTime   (src/.../graphql.ts)\n                        \n                        \n                            Nullable   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            args   (src/.../generate-typings.ts)\n                        \n                        \n                            DB_CONNECTED   (src/.../prisma.service.ts)\n                        \n                        \n                            definitionsFactory   (src/.../generate-typings.ts)\n                        \n                        \n                            envFile   (src/.../app.module.ts)\n                        \n                        \n                            flags   (src/.../generate-typings.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            GetUserGraphql   (src/.../get-user.decorator.ts)\n                        \n                        \n                            logEvents   (src/.../prisma.service.ts)\n                        \n                        \n                            mode   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        args\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.argv.slice(2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        definitionsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLDefinitionsFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Flags\n\n                    \n                \n                \n                    \n                        Default value : extractFlags(args)\n                    \n                \n\n\n        \n    \n\n    src/prisma/prisma.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.LogDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.env'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MODE\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest()\n\n    if (data) return request.user[data]\n\n    return request.user\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetUserGraphql\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, context: ExecutionContext) => {\n    const ctx: GraphqlContext = GqlExecutionContext.create(context).getContext()\n\n    const { user } = ctx.req\n\n    if (data) return user[data]\n\n    return user\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
