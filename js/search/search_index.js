var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.53,1,2.495]],["body/controllers/AppController.html",[0,2.264,1,3.69,2,1.632,3,0.239,4,0.268,5,0.239,6,3.501,7,0.454,8,1.626,9,4.816,10,4.816,11,2.137,12,0.021,13,4.094,14,0.781,15,4.094,16,1.626,17,4.094,18,4.094,19,0.763,20,4.094,21,1.003,22,3.248,23,3.501,24,4.094,25,4.094,26,4.094,27,3.11,28,3.11,29,4.094,30,0.297,31,0.209,32,1.835,33,1.951,34,4.094,35,4.094,36,2.585,37,2.818,38,4.094,39,1.626,40,4.094,41,4.094,42,3.11,43,4.094,44,4.094,45,0.015,46,0.015]],["title/modules/AppModule.html",[47,1.292,48,2.495]],["body/modules/AppModule.html",[1,2.963,2,1.404,3,0.133,4,0.149,5,0.133,12,0.021,19,0.862,21,0.558,22,3.01,23,1.947,27,1.73,28,1.73,30,0.165,31,0.116,36,1.438,42,1.73,45,0.01,46,0.01,47,1.535,48,4.642,49,1.02,50,1.085,51,1.238,52,1.238,53,1.085,54,2.34,55,1.238,56,1.947,57,1.947,58,1.947,59,3.234,60,3.497,61,3.497,62,3.01,63,3.497,64,1.914,65,1.238,66,1.157,67,1.73,68,2.674,69,2.277,70,1.33,71,1.947,72,3.01,73,2.277,74,2.277,75,1.33,76,3.52,77,1.947,78,2.277,79,2.277,80,2.277,81,3.334,82,3.52,83,3.52,84,1.947,85,1.73,86,3.52,87,2.277,88,1.947,89,2.277,90,1.914,91,1.947,92,2.277,93,1.73,94,2.277,95,2.277,96,3.307,97,1.947,98,4.206,99,2.674,100,1.947,101,3.01,102,1.73,103,2.277,104,4.304,105,1.947,106,3.01,107,3.01,108,1.947,109,2.277,110,1.73,111,1.947,112,2.277,113,1.73,114,2.277,115,2.277,116,3.52,117,2.847,118,1.947,119,2.277,120,2.277,121,2.277,122,2.277,123,2.277,124,2.277,125,2.277,126,2.277,127,2.277,128,2.277,129,2.277,130,2.277,131,3.01,132,2.277,133,2.277,134,1.73,135,2.424,136,2.424,137,1.947,138,1.947,139,2.277,140,2.277,141,2.277,142,2.277,143,2.223,144,2.277,145,1.947,146,2.277,147,2.277,148,1.947,149,2.277,150,1.157,151,3.01,152,3.52,153,2.277]],["title/injectables/AppService.html",[22,1.97,154,1.099]],["body/injectables/AppService.html",[3,0.195,4,0.218,5,0.195,7,0.37,8,1.417,9,4.43,10,4.43,12,0.021,14,0.785,16,1.417,19,0.597,21,0.818,22,2.539,30,0.242,31,0.238,32,1.497,33,1.592,39,1.417,45,0.013,46,0.013,117,1.816,143,2.11,154,1.417,155,1.697,156,2.538,157,2.566,158,1.973,159,1.952,160,2.198,161,3.341,162,1.013,163,0.961,164,0.427,165,0.775,166,2.147,167,3.341,168,1.952,169,3.341,170,3.215,171,1.666,172,1.697,173,3.707,174,4.605,175,3.994,176,2.538,177,2.538,178,2.857,179,2.538,180,3.215,181,2.857,182,2.538,183,3.994,184,2.539,185,1.697,186,2.857,187,2.857,188,2.857,189,2.857,190,2.857,191,2.857,192,2.538,193,3.215,194,3.548,195,2.538,196,3.994,197,2.857,198,2.857,199,2.857,200,2.538]],["title/controllers/AuthController.html",[0,1.53,201,2.288]],["body/controllers/AuthController.html",[0,1.145,2,1.081,3,0.158,4,0.177,5,0.158,7,0.301,8,1.219,11,1.602,12,0.021,14,0.586,16,1.219,19,0.722,21,0.664,30,0.196,31,0.138,32,1.215,37,1.867,39,0.822,42,3.053,45,0.011,46,0.011,70,1.584,117,3.331,131,3.436,136,3.892,138,4.094,157,2.282,162,1.219,163,1.156,164,0.513,165,0.932,185,1.378,201,2.538,202,2.319,203,1.867,204,2.319,205,3.024,206,2.538,207,2.06,208,3.58,209,3.645,210,2.711,211,2.711,212,3.57,213,2.06,214,4.018,215,2.711,216,1.867,217,2.711,218,2.319,219,2.06,220,2.602,221,2.06,222,1.474,223,2.766,224,2.711,225,1.584,226,1.867,227,2.711,228,2.711,229,2.711,230,2.711,231,2.711,232,1.915,233,2.319,234,2.711,235,2.711,236,2.319,237,4.094,238,4.018,239,4.295,240,2.711,241,2.319,242,2.319,243,4.018,244,4.018,245,2.319,246,2.319,247,4.018,248,2.711,249,2.711,250,2.711,251,2.711,252,4.018,253,2.711,254,2.711,255,2.711,256,2.319,257,4.018,258,2.711,259,2.711,260,2.711,261,4.018,262,2.319,263,2.711,264,2.711,265,4.018,266,2.711,267,2.06,268,2.711,269,2.711,270,2.711,271,2.711,272,2.711,273,2.711,274,2.711,275,2.711,276,2.319,277,2.711]],["title/classes/AuthDto.html",[31,0.185,208,2.117]],["body/classes/AuthDto.html",[3,0.268,4,0.3,5,0.268,7,0.508,11,2.298,12,0.02,14,0.84,19,0.586,30,0.332,31,0.294,45,0.016,46,0.016,164,0.736,171,2.359,208,3.367,278,1.064,279,3.921,280,1.844,281,2.825,282,3.203,283,4.585,284,4.585,285,4.585,286,4.585,287,4.929,288,4.789,289,5.764,290,2.678]],["title/classes/AuthInput.html",[31,0.185,291,1.727]],["body/classes/AuthInput.html",[3,0.215,4,0.241,5,0.215,7,0.408,12,0.021,14,0.728,30,0.486,31,0.334,45,0.014,46,0.014,150,3.228,164,0.777,171,2.39,278,0.855,280,1.599,281,2.848,282,2.881,291,2.897,292,1.756,293,3.685,294,3.685,295,2.539,296,2.003,297,2.539,298,1.883,299,1.362,300,2.716,301,2.716,302,3.712,303,1.872,304,2.153,305,3.312,306,2.153,307,1.437,308,2.003,309,3.304,310,2.003,311,2.003,312,1.872,313,2.003,314,1.756]],["title/modules/AuthModule.html",[47,1.292,59,2.117]],["body/modules/AuthModule.html",[2,2.043,3,0.224,4,0.25,5,0.224,12,0.021,19,0.864,21,0.937,30,0.277,31,0.195,45,0.014,46,0.014,47,2.061,49,1.714,50,1.823,51,2.079,52,2.079,53,1.823,54,3.141,55,2.079,59,4.11,62,3.6,64,2.785,65,2.079,66,1.944,68,3.893,93,2.906,201,3.898,220,3.6,221,2.906,315,3.271,316,3.271,317,3.825,318,4.183,319,3.825,320,3.271,321,3.825,322,2.906,323,3.271,324,3.528,325,3.825,326,3.825]],["title/classes/AuthPayload.html",[31,0.185,295,1.841]],["body/classes/AuthPayload.html",[3,0.221,4,0.247,5,0.221,7,0.418,12,0.021,14,0.55,30,0.488,31,0.336,45,0.014,46,0.014,150,3.254,164,0.733,171,2.353,278,0.876,280,1.625,281,2.572,282,1.917,291,2.734,292,1.798,295,2.915,296,3.119,297,2.58,298,1.914,299,1.384,300,2.76,301,2.76,302,3.742,303,1.917,304,2.204,305,3.352,306,2.204,307,1.46,308,2.051,309,3.336,310,2.051,311,2.051,312,1.917,313,2.051,314,1.798,327,3.773]],["title/classes/AuthResolver.html",[31,0.185,324,2.495]],["body/classes/AuthResolver.html",[3,0.194,4,0.216,5,0.194,7,0.367,8,1.408,11,1.851,12,0.021,14,0.781,16,1.408,19,0.81,30,0.24,31,0.169,33,2.212,39,1.408,45,0.013,46,0.013,75,1.934,81,2.279,90,3.157,91,2.831,113,3.526,134,3.526,158,1.96,162,1.625,163,1.541,164,0.685,165,1.244,201,4.111,205,2.931,206,2.931,207,2.515,208,3.802,212,4.111,213,2.515,220,3.446,221,2.515,225,2.711,278,0.768,291,2.554,320,2.831,324,3.195,328,2.831,329,3.311,330,3.311,331,4.071,332,4.641,333,3.311,334,4.641,335,3.311,336,2.091,337,3.311,338,2.831,339,3.311,340,3.311,341,3.311,342,3.311,343,3.311,344,3.311]],["title/injectables/AuthService.html",[154,1.099,220,1.97]],["body/injectables/AuthService.html",[3,0.138,4,0.155,5,0.138,7,0.262,8,1.099,12,0.021,14,0.72,16,1.337,19,0.748,21,0.579,30,0.171,31,0.12,39,1.337,45,0.01,46,0.01,70,1.381,117,2.685,154,1.099,155,1.201,157,2.949,158,1.531,159,1.381,160,1.862,162,1.498,163,1.421,164,0.631,165,1.146,166,1.445,168,2.574,171,1.572,172,1.201,184,2.395,185,2.707,192,1.796,205,2.289,206,2.289,207,2.753,208,3.418,212,2.783,213,2.753,220,1.97,223,3.401,225,2.574,226,3.034,232,2.679,236,3.099,237,2.022,276,2.022,281,2.622,296,1.285,298,0.891,299,1.201,300,1.285,301,1.285,307,1.421,308,2.395,322,1.796,345,2.022,346,3.624,347,3.034,348,4.94,349,2.364,350,2.364,351,3.624,352,2.364,353,2.289,354,2.364,355,2.022,356,2.364,357,2.022,358,3.099,359,3.099,360,2.022,361,2.364,362,2.364,363,2.364,364,1.285,365,2.364,366,1.796,367,2.022,368,2.364,369,2.022,370,3.12,371,2.022,372,3.624,373,2.364,374,2.022,375,4.225,376,2.364,377,2.364,378,1.796,379,2.364,380,3.624,381,3.624,382,2.364,383,2.364,384,2.364,385,2.364,386,2.364,387,1.796,388,2.022,389,4.407,390,2.364,391,2.364,392,2.364]],["title/classes/Book.html",[31,0.185,393,2.495]],["body/classes/Book.html",[3,0.321,4,0.359,5,0.321,12,0.019,30,0.398,31,0.28,45,0.018,46,0.018,278,1.275,393,4.429,394,4.698]],["title/controllers/BookController.html",[0,1.53,395,2.495]],["body/controllers/BookController.html",[0,1.276,2,1.205,3,0.177,4,0.198,5,0.177,7,0.335,8,1.319,11,2.355,12,0.021,14,0.861,16,1.792,19,0.712,21,0.74,30,0.219,31,0.154,32,1.354,33,1.44,39,1.792,45,0.012,46,0.012,162,1.691,163,1.603,164,0.712,165,1.293,203,2.08,216,2.994,219,3.871,298,2.318,299,1.801,395,2.994,396,2.584,397,3.022,398,2.364,399,3.837,400,2.747,401,2.994,402,2.994,403,2.584,404,3.593,405,3.022,406,3.022,407,2.08,408,3.719,409,3.022,410,2.08,411,3.719,412,3.022,413,2.08,414,4.097,415,3.719,416,3.022,417,2.08,418,2.584,419,2.296,420,2.589,421,2.584,422,2.584,423,3.719,424,2.584,425,3.022,426,3.022,427,3.022,428,3.022,429,2.584,430,3.022,431,2.584,432,3.022,433,2.584,434,3.022]],["title/modules/BookModule.html",[47,1.292,60,2.288]],["body/modules/BookModule.html",[2,2.263,3,0.262,4,0.292,5,0.262,12,0.02,19,0.796,21,1.096,30,0.324,31,0.228,45,0.016,46,0.016,47,2.223,49,2.005,50,2.132,51,2.432,52,2.432,53,2.132,54,3.388,55,2.432,60,4.365,64,3.085,65,2.432,66,2.273,395,4.291,420,3.512,421,3.826,435,3.826,436,3.826,437,4.474,438,4.474]],["title/injectables/BookService.html",[154,1.099,420,1.841]],["body/injectables/BookService.html",[3,0.18,4,0.201,5,0.18,7,0.341,8,1.338,12,0.021,14,0.903,16,1.805,19,0.658,21,0.755,30,0.223,31,0.157,32,1.381,33,1.468,39,1.805,45,0.012,46,0.012,154,1.338,155,1.565,158,1.301,159,1.8,160,2.12,162,1.805,163,1.711,164,0.76,165,1.381,166,2.054,172,1.565,298,2.334,299,1.81,364,2.397,398,2.397,399,3.872,400,2.785,401,3.036,402,3.036,403,3.771,404,2.576,407,3.036,410,3.036,413,3.036,414,3.552,420,2.241,439,2.634,440,3.081,441,5.151,442,3.081,443,3.081,444,3.081,445,3.081,446,5.151,447,3.081,448,1.8,449,3.081,450,3.081,451,3.081,452,3.081,453,3.081]],["title/classes/CreateBookDto.html",[31,0.185,404,2.117]],["body/classes/CreateBookDto.html",[3,0.221,4,0.247,5,0.221,7,0.418,11,2.554,12,0.02,14,0.934,19,0.482,30,0.273,31,0.259,45,0.014,46,0.014,164,0.818,165,1.178,171,2.444,278,0.876,280,1.625,288,4.866,290,2.204,299,1.384,404,2.966,454,5.641,455,2.866,456,5.738,457,4.907,458,5.738,459,5.738,460,5.738,461,5.738,462,3.773,463,3.226,464,3.773,465,3.773,466,3.773,467,3.773,468,3.773,469,5.077,470,3.857,471,3.857,472,5.248]],["title/classes/CreateOrderDto.html",[31,0.185,473,2.117]],["body/classes/CreateOrderDto.html",[3,0.283,4,0.317,5,0.283,7,0.537,11,1.932,12,0.02,14,0.706,19,0.619,30,0.351,31,0.304,45,0.017,46,0.017,164,0.619,278,1.124,280,1.909,288,4.532,290,2.831,299,1.626,463,4.144,470,4.532,473,3.485,474,5.101,475,3.681,476,5.527,477,4.845]],["title/classes/EditUserDto.html",[31,0.185,478,2.288]],["body/classes/EditUserDto.html",[3,0.244,4,0.273,5,0.244,7,0.462,11,2.404,12,0.02,14,0.879,19,0.533,30,0.302,31,0.276,45,0.015,46,0.015,164,0.77,165,1.575,171,2.42,278,0.968,280,1.736,281,2.702,287,4.639,290,2.436,310,3.278,311,3.278,471,4.851,472,5.156,478,3.426,479,5.46,480,3.566,481,4.171,482,4.171,483,5.425,484,4.171,485,4.171]],["title/interfaces/Flags.html",[486,2.288,487,2.495]],["body/interfaces/Flags.html",[3,0.185,4,0.207,5,0.185,7,0.351,12,0.021,19,0.575,31,0.161,37,2.182,39,0.961,45,0.013,46,0.013,75,1.851,117,2.446,148,2.71,163,0.911,164,0.575,165,1.322,176,4.748,184,1.723,232,3.063,242,4.474,245,3.848,267,3.418,280,1.44,292,1.51,314,2.144,336,2.842,486,2.001,487,4.601,488,2.71,489,2.182,490,2.182,491,6.016,492,5.344,493,3.848,494,3.169,495,3.169,496,3.169,497,3.169,498,3.418,499,6.016,500,4.5,501,4.5,502,3.169,503,5.232,504,4.5,505,3.169,506,3.169,507,3.169,508,3.169,509,3.169,510,3.169,511,3.169,512,3.169,513,2.407,514,3.169,515,3.169,516,2.71,517,3.169,518,2.407,519,3.169,520,3.169,521,3.169,522,3.169,523,3.169,524,3.169]],["title/classes/GraphqlContext.html",[31,0.185,90,1.97]],["body/classes/GraphqlContext.html",[3,0.265,4,0.296,5,0.265,7,0.502,12,0.02,14,0.834,19,0.579,30,0.414,31,0.291,45,0.016,46,0.016,90,3.109,135,4.315,136,4.315,164,0.731,209,4.315,222,2.462,278,1.051,280,1.83,299,1.235,307,1.802,486,2.86,525,3.441,526,4.315,527,4.529,528,4.529,529,3.612,530,3.873,531,2.301]],["title/classes/IMutation.html",[31,0.185,303,1.841]],["body/classes/IMutation.html",[3,0.198,4,0.222,5,0.198,7,0.376,8,1.432,12,0.021,14,0.688,16,1.432,30,0.475,31,0.325,45,0.013,46,0.013,150,3.135,162,1.432,163,1.357,164,0.75,165,1.095,171,2.2,205,2.981,206,2.981,278,0.787,281,2.433,282,1.723,291,3.123,292,1.616,295,2.758,296,1.844,297,2.758,298,1.779,299,1.287,300,2.566,301,2.566,302,3.965,303,2.398,304,2.757,305,3.604,306,2.757,307,1.357,308,1.844,309,3.19,310,1.844,311,1.844,312,1.723,313,1.844,314,1.616,364,2.566,532,3.392,533,3.392]],["title/classes/IQuery.html",[31,0.185,312,1.841]],["body/classes/IQuery.html",[3,0.219,4,0.245,5,0.219,7,0.415,8,1.533,12,0.021,14,0.546,16,1.137,30,0.488,31,0.335,45,0.014,46,0.014,150,3.247,164,0.646,171,2.279,278,0.87,281,2.563,282,1.904,291,2.725,292,1.786,295,2.568,296,2.037,297,2.568,298,1.905,299,1.378,300,2.747,301,2.747,302,3.931,303,1.904,304,2.189,305,3.575,306,2.189,307,1.644,308,2.037,309,3.327,310,2.037,311,2.037,312,2.568,313,2.037,314,1.786,534,3.747]],["title/classes/JwtGuard.html",[31,0.185,535,2.288]],["body/classes/JwtGuard.html",[3,0.298,4,0.333,5,0.298,12,0.02,14,0.742,19,0.65,30,0.369,31,0.259,45,0.017,46,0.017,158,2.79,278,1.181,531,2.586,535,3.882,536,4.353,537,5.09,538,5.09,539,3.867,540,5.09,541,3.867]],["title/injectables/JwtStrategy.html",[154,1.099,318,2.288]],["body/injectables/JwtStrategy.html",[3,0.157,4,0.176,5,0.157,7,0.298,8,1.21,12,0.021,14,0.768,16,1.21,19,0.754,21,0.658,30,0.195,31,0.137,32,1.203,39,1.598,45,0.011,46,0.011,70,1.569,96,3.006,102,2.04,110,3.031,135,1.849,154,1.21,155,1.364,158,1.134,160,1.986,162,1.444,163,1.369,164,0.754,165,1.105,166,1.898,171,1.879,172,1.364,222,1.46,223,3.628,225,3.569,226,2.746,232,2.268,233,2.296,239,2.04,262,3.411,280,1.277,281,2.133,298,1.012,299,1.088,307,1.147,314,2.511,318,2.519,323,2.296,347,2.746,353,2.519,370,1.696,378,2.04,387,2.04,388,2.296,529,1.696,531,1.364,539,2.04,541,2.04,542,2.296,543,4.76,544,4.76,545,3.989,546,3.989,547,2.296,548,3.989,549,3.989,550,5.269,551,2.685,552,3.989,553,3.989,554,2.685,555,2.685,556,2.685,557,2.296,558,2.685,559,2.296,560,2.685,561,2.685,562,2.685,563,2.685,564,2.685,565,2.685,566,2.685,567,3.989,568,2.685,569,2.685,570,2.685,571,2.685,572,2.685,573,2.685,574,2.685,575,3.989,576,2.685,577,2.685,578,2.296,579,2.685,580,2.685]],["title/classes/Order.html",[31,0.185,581,2.753]],["body/classes/Order.html",[3,0.321,4,0.359,5,0.321,12,0.019,30,0.398,31,0.28,45,0.018,46,0.018,278,1.275,581,4.887,582,4.698]],["title/controllers/OrderController.html",[0,1.53,583,2.495]],["body/controllers/OrderController.html",[0,1.183,2,1.117,3,0.164,4,0.183,5,0.164,7,0.31,8,1.248,11,2.285,12,0.021,14,0.835,16,1.738,19,0.765,21,0.686,30,0.203,31,0.143,32,1.255,33,1.335,39,1.738,45,0.011,46,0.011,157,2.325,162,1.631,163,1.546,164,0.687,165,1.248,168,1.636,203,1.928,216,3.359,219,3.707,298,2.258,299,1.843,353,3.081,398,2.652,399,3.702,400,2.599,401,2.833,402,2.833,407,1.928,408,3.519,410,1.928,411,3.519,413,1.928,415,3.519,417,1.928,418,2.395,419,2.127,422,2.395,424,2.395,429,2.395,431,2.395,433,2.395,473,3.711,535,1.769,583,2.833,584,2.395,585,2.395,586,2.8,587,2.8,588,2.8,589,2.8,590,2.8,591,4.012,592,2.8,593,2.395,594,3.519,595,2.85,596,2.395,597,1.928,598,2.127,599,2.395,600,2.395,601,2.8,602,2.8,603,2.8,604,2.8,605,2.8,606,2.8,607,2.8,608,2.8]],["title/modules/OrderModule.html",[47,1.292,61,2.288]],["body/modules/OrderModule.html",[2,2.122,3,0.237,4,0.265,5,0.237,12,0.021,19,0.838,21,0.992,30,0.293,31,0.206,45,0.015,46,0.015,47,2.12,49,1.815,50,1.929,51,2.201,52,2.201,53,1.929,54,3.231,55,2.201,61,4.488,64,2.892,65,2.201,66,2.057,420,3.42,583,4.092,595,3.932,596,3.462,609,3.462,610,3.462,611,3.207,612,4.049,613,4.049,614,3.462,615,3.462]],["title/injectables/OrderService.html",[154,1.099,595,2.117]],["body/injectables/OrderService.html",[3,0.141,4,0.158,5,0.141,7,0.267,8,1.116,12,0.021,14,0.826,16,1.63,19,0.687,21,0.59,30,0.175,31,0.123,33,2.125,37,1.659,39,1.63,45,0.01,46,0.01,113,1.831,154,1.116,155,1.225,157,2.125,158,1.554,159,1.408,160,1.881,162,1.63,163,1.545,164,0.687,165,1.247,166,1.778,168,1.408,172,1.225,184,2.424,185,2.266,225,2.605,232,2.378,298,2.22,299,1.697,307,1.058,355,2.061,364,2.424,375,3.814,393,2.532,398,1.999,399,3.436,400,2.323,401,2.532,402,2.532,407,2.532,410,2.532,413,2.532,420,2.993,448,1.408,457,3.145,473,2.149,591,3.152,595,2.149,611,2.807,614,2.061,615,2.061,616,2.061,617,2.41,618,3.678,619,4.46,620,2.41,621,2.41,622,2.41,623,2.41,624,4.46,625,2.41,626,2.41,627,2.41,628,3.678,629,3.814,630,3.678,631,2.41,632,2.41,633,4.46,634,4.46,635,2.41,636,4.46,637,2.41,638,2.41,639,2.41,640,2.41,641,2.061,642,2.41,643,2.41,644,2.41,645,2.41,646,2.41,647,2.41,648,2.41]],["title/classes/PrismaClientExceptionFilter.html",[31,0.185,649,2.753]],["body/classes/PrismaClientExceptionFilter.html",[3,0.163,4,0.182,5,0.163,7,0.309,8,1.244,12,0.021,14,0.406,16,0.845,19,0.764,21,0.682,30,0.202,31,0.142,36,2.589,45,0.011,46,0.011,75,1.628,100,2.383,101,2.383,106,3.506,137,2.383,162,0.845,163,0.801,164,0.356,165,0.647,166,1.635,170,4.367,177,2.117,194,2.117,209,2.823,218,2.383,222,1.515,232,2.85,278,0.647,331,2.117,358,4.889,359,2.383,360,2.383,366,2.117,369,4.588,370,4.089,371,2.383,374,3.506,387,2.117,448,1.628,531,2.083,649,3.115,650,3.506,651,4.588,652,3.506,653,2.383,654,4.865,655,3.506,656,4.865,657,2.786,658,4.865,659,5.365,660,5.365,661,5.365,662,2.786,663,4.1,664,2.786,665,2.383,666,2.786,667,2.786,668,2.786,669,2.786,670,2.786,671,2.786,672,4.1,673,2.786,674,2.786,675,2.786,676,2.786,677,2.786,678,2.786,679,4.1,680,2.786,681,2.786,682,2.786,683,2.786,684,4.1,685,4.1,686,3.506,687,2.786,688,2.786,689,2.786,690,2.786,691,2.786,692,2.786,693,2.786,694,2.117,695,2.786,696,2.786,697,2.786]],["title/modules/PrismaModule.html",[47,1.292,62,1.97]],["body/modules/PrismaModule.html",[3,0.257,4,0.288,5,0.257,12,0.02,19,0.718,21,1.078,30,0.319,31,0.224,45,0.016,46,0.016,47,2.206,49,1.973,50,2.098,51,2.393,52,2.393,53,2.098,54,3.363,55,3.363,62,3.803,64,3.054,65,2.393,66,2.237,160,2.749,698,3.765,699,3.765,700,3.765,701,4.403,702,5.617,703,4.403]],["title/injectables/PrismaService.html",[154,1.099,160,1.366]],["body/injectables/PrismaService.html",[3,0.21,4,0.153,5,0.137,7,0.259,8,1.09,12,0.021,14,0.716,16,1.328,19,0.677,21,0.573,30,0.17,31,0.119,39,1.328,45,0.01,46,0.01,70,1.367,85,1.777,110,1.777,117,1.954,143,1.477,154,1.09,155,1.189,157,2.867,158,0.988,160,1.355,162,1.09,163,1.034,164,0.459,165,0.834,166,0.933,180,1.61,185,2.496,193,1.61,200,1.777,223,3.382,226,1.61,232,2.527,366,1.777,370,1.477,448,1.367,531,1.826,541,1.777,547,3.074,559,2,629,2,655,2,694,1.777,704,1.777,705,4.378,706,4.913,707,3.595,708,5.597,709,2.339,710,2.339,711,3.595,712,4.913,713,2.339,714,2.339,715,3.074,716,2.339,717,2,718,2,719,2.731,720,2,721,4.201,722,1.61,723,4.201,724,2.731,725,3.744,726,2,727,3.326,728,2.339,729,2,730,2.339,731,2.339,732,2.339,733,3.595,734,2.339,735,2.339,736,2.339,737,2.339,738,2.339,739,2.339,740,2.339,741,2.339,742,2.339,743,3.074,744,3.595,745,2.339,746,2.339,747,2.339,748,2.339,749,2.339,750,2.339,751,2.339,752,2.339,753,2.339,754,2.339,755,2.339,756,2.339,757,2.339,758,2.339,759,2,760,2.339,761,3.074,762,2.339,763,2.339,764,2.339,765,2.339,766,2.339,767,2.339,768,2.339,769,2.339,770,2.339,771,2.339,772,2.339,773,2.339,774,2.339,775,2.339,776,2.339,777,2.339,778,2.339,779,2.339,780,2.339,781,2.339,782,2.339,783,2.339,784,2,785,2.339,786,2.339,787,2.339]],["title/classes/RequestWithUser.html",[31,0.185,526,2.495]],["body/classes/RequestWithUser.html",[3,0.27,4,0.302,5,0.27,7,0.512,12,0.02,14,0.674,19,0.591,30,0.42,31,0.295,45,0.016,46,0.016,90,2.513,135,3.183,136,3.183,164,0.591,209,3.989,222,2.513,278,1.073,280,1.854,299,1.26,307,2.004,486,2.92,525,3.512,526,4.356,529,3.996,530,3.953,531,2.944,788,4.623]],["title/classes/ServiceStatus.html",[31,0.185,173,2.495]],["body/classes/ServiceStatus.html",[3,0.183,4,0.204,5,0.183,7,0.346,9,2.373,10,2.373,12,0.021,14,0.825,19,0.569,21,0.765,22,1.698,30,0.226,31,0.227,32,1.4,33,1.489,36,3.279,39,1.351,45,0.012,46,0.012,117,2.421,143,1.973,154,1.351,156,2.373,157,1.489,158,1.881,160,1.679,162,0.948,163,0.898,164,0.723,165,0.725,166,1.776,170,2.151,171,2.018,172,1.587,173,3.896,174,5.696,175,5.319,176,4.3,177,4.545,178,5.116,179,3.384,180,3.067,181,2.672,182,2.373,183,3.809,184,2.421,185,1.587,186,2.672,187,2.672,188,2.672,189,2.672,190,2.672,191,2.672,192,2.373,193,3.067,194,3.384,195,2.373,196,3.809,197,2.672,198,2.672,199,2.672,200,2.373,278,0.725,280,1.425,513,3.944,789,3.124,790,3.124,791,3.124,792,3.124,793,3.124]],["title/classes/SignUpPayload.html",[31,0.185,297,1.841]],["body/classes/SignUpPayload.html",[3,0.206,4,0.23,5,0.206,7,0.39,12,0.021,14,0.869,30,0.48,31,0.329,45,0.014,46,0.014,150,3.364,164,0.826,171,2.305,278,0.817,280,1.55,281,2.803,282,1.789,291,2.639,292,1.678,295,2.461,296,1.914,297,2.813,298,2.248,299,1.51,300,3.242,301,3.242,302,3.653,303,1.789,304,2.057,305,3.235,306,2.057,307,1.393,308,1.914,309,3.242,310,1.914,311,1.914,312,1.789,313,1.914,314,1.678,794,3.521,795,3.521,796,3.521,797,3.521]],["title/classes/UpdateBookDto.html",[31,0.185,414,2.288]],["body/classes/UpdateBookDto.html",[3,0.299,4,0.334,5,0.299,12,0.02,19,0.788,30,0.371,31,0.261,45,0.017,46,0.017,278,1.187,398,2.78,404,2.987,414,3.893,423,4.373,455,3.885,531,2.598,798,4.373,799,4.373,800,3.885,801,3.885,802,5.114]],["title/classes/UpdateOrderDto.html",[31,0.185,591,2.288]],["body/classes/UpdateOrderDto.html",[3,0.265,4,0.296,5,0.265,7,0.502,11,1.806,12,0.02,14,0.66,19,0.801,30,0.328,31,0.291,45,0.016,46,0.016,164,0.579,165,1.327,278,1.051,280,1.83,290,2.646,299,1.559,398,2.462,470,4.345,471,4.345,473,2.646,475,3.441,476,5.36,531,2.301,591,3.612,594,3.873,799,3.873,800,3.441,801,3.441,803,4.89,804,4.529,805,4.529,806,4.529]],["title/classes/User.html",[31,0.185,307,1.042]],["body/classes/User.html",[3,0.19,4,0.212,5,0.19,7,0.359,12,0.021,14,0.943,30,0.469,31,0.321,45,0.013,46,0.013,150,3.288,164,0.858,165,1.461,171,2.246,278,0.753,280,1.464,281,2.72,282,1.648,291,2.525,292,1.545,295,2.324,296,1.763,297,2.324,298,2.169,299,1.445,300,3.128,301,3.128,302,3.545,303,1.648,304,1.894,305,3.095,306,1.894,307,1.524,308,2.88,309,3.518,310,2.88,311,2.88,312,1.648,313,1.763,314,1.545,807,3.243,808,3.243,809,3.243,810,3.243,811,3.243,812,3.243,813,3.243]],["title/controllers/UserController.html",[0,1.53,814,2.117]],["body/controllers/UserController.html",[0,1.308,2,1.235,3,0.181,4,0.203,5,0.181,7,0.343,8,1.343,11,2.06,12,0.021,14,0.753,16,1.567,19,0.793,21,0.759,30,0.224,31,0.158,32,1.388,39,1.567,45,0.012,46,0.012,154,1.343,157,2.462,162,1.567,163,1.486,164,0.66,165,1.199,168,1.81,170,2.133,185,1.574,195,2.354,203,2.133,212,3.766,216,3.048,299,1.691,307,1.939,353,3.561,417,3.048,419,3.364,448,1.81,478,3.561,529,1.956,535,1.956,593,2.649,597,2.133,598,2.354,599,2.649,600,4.419,611,2.462,686,2.649,814,2.587,815,2.649,816,2.649,817,3.786,818,3.786,819,4.428,820,2.649,821,3.098,822,3.098,823,2.649,824,3.098,825,3.098,826,3.098,827,3.098,828,3.098,829,2.354,830,3.098,831,3.098,832,3.098,833,3.098,834,3.098,835,3.098,836,2.649,837,3.098,838,3.098,839,3.098,840,3.098,841,3.098]],["title/modules/UserModule.html",[47,1.292,63,2.288]],["body/modules/UserModule.html",[2,2.038,3,0.223,4,0.249,5,0.223,12,0.021,19,0.845,21,0.934,30,0.276,31,0.194,45,0.014,46,0.014,47,2.057,49,1.708,50,1.817,51,2.072,52,2.072,53,1.817,54,3.135,55,2.072,59,3.865,62,3.597,63,4.51,64,2.779,65,2.072,66,1.937,68,3.884,71,3.26,93,2.896,611,3.153,814,4.013,829,2.896,842,3.26,843,3.812,844,3.26,845,3.812,846,3.26,847,3.519,848,3.812]],["title/classes/UserResolver.html",[31,0.185,847,2.495]],["body/classes/UserResolver.html",[3,0.218,4,0.244,5,0.218,7,0.414,8,1.529,11,1.489,12,0.021,14,0.735,16,1.133,19,0.84,30,0.271,31,0.19,33,2.72,39,1.133,45,0.014,46,0.014,75,2.182,158,2.13,159,2.182,160,2.304,162,1.529,163,1.45,164,0.644,165,1.17,166,2.011,172,1.898,225,3.335,278,0.867,307,1.891,338,3.194,448,2.182,598,2.837,611,3.204,724,2.837,814,3.928,829,2.837,846,3.194,847,3.471,849,3.194,850,3.735,851,3.735,852,5.042,853,3.735,854,2.837,855,3.735,856,3.735,857,3.735]],["title/injectables/UserService.html",[154,1.099,611,1.727]],["body/injectables/UserService.html",[3,0.184,4,0.206,5,0.184,7,0.349,8,1.359,12,0.021,14,0.828,16,1.582,19,0.666,21,0.772,30,0.228,31,0.161,32,1.412,39,1.582,45,0.013,46,0.013,154,1.359,155,1.601,157,2.973,158,1.331,159,1.841,160,2.141,162,1.723,163,1.634,164,0.726,165,1.318,166,1.787,168,2.618,172,1.601,185,2.277,212,3.939,232,2.136,298,1.966,299,1.819,307,1.634,353,4.053,364,1.713,378,2.394,400,2.83,417,3.085,478,3.588,611,2.136,641,2.694,817,3.832,818,3.832,820,3.832,823,3.832,858,2.694,859,3.151,860,3.151,861,3.151,862,4.481,863,3.151,864,3.151,865,4.481,866,3.151]],["title/coverage.html",[867,3.753]],["body/coverage.html",[0,2.187,1,1.53,5,0.13,6,1.9,12,0.021,22,1.208,31,0.353,45,0.01,46,0.01,53,1.059,67,2.624,90,1.208,96,1.403,98,1.688,154,1.794,156,2.624,160,0.837,164,0.284,173,1.53,184,1.208,201,1.403,202,1.9,208,1.298,220,1.208,267,2.624,279,1.9,291,1.059,292,2.612,295,1.129,297,1.129,303,1.129,307,0.993,312,1.129,318,1.403,324,1.53,328,1.9,336,1.403,345,1.9,393,1.53,394,1.9,395,1.53,396,1.9,404,1.298,414,1.403,420,1.129,439,1.9,454,1.9,455,2.624,473,1.298,474,1.9,475,2.624,478,1.403,479,1.9,480,1.9,486,2.182,487,2.378,489,3.565,490,3.565,518,1.688,525,3.22,526,1.53,535,1.403,536,1.9,542,1.9,578,6.3,581,1.688,582,1.9,583,1.53,584,1.9,591,1.403,595,1.298,597,1.53,611,1.059,616,1.9,649,1.688,650,1.9,651,2.954,652,1.9,653,1.9,704,3.22,719,1.688,727,1.688,798,1.9,803,1.9,814,2.018,815,2.954,847,1.53,849,1.9,854,1.688,858,1.9,867,1.688,868,1.688,869,2.222,870,2.222,871,5.916,872,5.916,873,6.076,874,6.586,875,5.722,876,4.78,877,2.954,878,2.954,879,4.238,880,3.454,881,1.9,882,2.222,883,1.9,884,2.222,885,2.222]],["title/dependencies.html",[50,2.076,886,2.59]],["body/dependencies.html",[12,0.021,21,0.897,27,2.781,28,3.779,31,0.253,45,0.014,46,0.014,50,1.745,70,2.139,72,3.131,75,2.139,77,3.131,81,4.364,84,3.131,85,2.781,88,3.131,118,3.131,151,3.131,166,1.46,222,1.99,239,2.781,290,2.139,322,2.781,347,2.52,357,3.131,539,2.781,557,4.254,665,3.131,715,3.131,717,3.131,718,3.131,743,3.131,800,2.781,801,2.781,887,3.661,888,3.661,889,3.661,890,5.65,891,3.661,892,3.661,893,3.661,894,3.661,895,3.661,896,3.661,897,3.661,898,3.661,899,3.661,900,3.661,901,3.661,902,3.661,903,3.661,904,3.661,905,3.661,906,3.661,907,3.661,908,3.661,909,3.661,910,3.661,911,3.661,912,3.661,913,3.661,914,3.661,915,3.661,916,3.661,917,3.131,918,3.661,919,3.661,920,3.661,921,3.661,922,3.661,923,3.661,924,3.661,925,3.661,926,3.661]],["title/miscellaneous/functions.html",[927,1.769,928,3.725]],["body/miscellaneous/functions.html",[7,0.58,12,0.019,45,0.017,46,0.017,53,3.185,162,1.588,163,1.505,165,1.215,336,3.306,489,3.604,490,4.304,498,3.977,881,5.346,883,4.476,927,3.058,928,4.476,929,5.235,930,4.476]],["title/index.html",[7,0.336,931,2.59,932,2.59]],["body/index.html",[2,1.666,12,0.02,45,0.012,46,0.012,47,1.019,49,1.872,81,1.968,96,3.118,99,4.126,102,3.751,105,2.444,107,2.444,108,2.444,111,3.572,145,2.444,166,1.969,180,2.876,182,2.171,204,2.444,205,1.805,206,1.805,241,2.444,246,2.444,256,2.444,282,1.452,307,0.822,347,1.968,364,2.271,398,1.554,492,2.444,585,3.572,694,2.171,722,1.968,729,3.572,759,3.572,784,3.572,816,3.572,836,4.222,867,2.171,868,3.751,917,4.222,933,2.858,934,2.444,935,2.858,936,4.177,937,6.232,938,4.177,939,2.858,940,2.858,941,2.858,942,2.858,943,2.858,944,2.858,945,2.858,946,2.858,947,2.858,948,2.858,949,2.858,950,4.177,951,2.858,952,2.858,953,2.858,954,2.858,955,4.177,956,4.937,957,2.858,958,2.858,959,2.858,960,2.858,961,2.858,962,2.858,963,4.177,964,2.858,965,2.858,966,2.858,967,2.858,968,2.858,969,2.858,970,2.858,971,2.858,972,2.858,973,2.858,974,2.858,975,2.444,976,2.858,977,2.858,978,2.858,979,2.858,980,2.858,981,2.858,982,2.858,983,2.858,984,4.177,985,4.937,986,2.858,987,2.858,988,2.858,989,2.858,990,2.858,991,2.858,992,2.858,993,2.858,994,2.858,995,2.858,996,2.858,997,2.858,998,2.858,999,2.858,1000,2.858,1001,2.858,1002,2.858,1003,2.858,1004,6.389,1005,2.858,1006,2.858,1007,2.858,1008,2.444,1009,2.858,1010,2.858,1011,2.858,1012,6.034,1013,2.858,1014,2.858,1015,2.858,1016,2.858,1017,2.858,1018,2.858,1019,2.171,1020,2.858]],["title/license.html",[931,2.59,932,2.59,1021,2.301]],["body/license.html",[12,0.015,45,0.015,46,0.015,66,1.985,193,2.689,222,2.123,367,4.443,722,2.689,868,2.967,975,3.34,1008,4.443,1019,2.967,1021,2.967,1022,5.839,1023,3.906,1024,3.906,1025,3.906,1026,5.196,1027,3.906,1028,3.906,1029,3.906,1030,3.906,1031,3.906,1032,3.906,1033,6.992,1034,3.906,1035,3.906,1036,5.839,1037,3.906,1038,5.196,1039,3.906,1040,3.906,1041,3.906,1042,3.906,1043,3.906,1044,3.906,1045,3.906,1046,3.906,1047,3.906,1048,5.196,1049,3.906,1050,3.906,1051,3.906,1052,3.906,1053,3.906,1054,3.906,1055,3.906,1056,5.196,1057,5.196,1058,3.906,1059,3.906,1060,3.906,1061,3.906,1062,3.906,1063,3.906,1064,3.906,1065,3.906,1066,3.906,1067,3.906,1068,3.906,1069,3.906,1070,3.906,1071,3.906,1072,3.906,1073,3.906,1074,3.906,1075,3.906,1076,3.906,1077,3.906,1078,3.906,1079,3.906,1080,3.906,1081,3.906,1082,3.906,1083,3.906,1084,3.906]],["title/modules.html",[49,2.214]],["body/modules.html",[12,0.017,45,0.017,46,0.017,48,3.426,49,2.23,59,2.907,60,3.143,61,3.143,62,2.705,63,3.143,1085,7.097,1086,7.097,1087,7.097,1088,7.097]],["title/overview.html",[1089,4.224]],["body/overview.html",[2,1.324,12,0.02,22,2.918,45,0.013,46,0.013,47,1.184,48,4.876,49,1.488,50,1.583,51,1.805,52,1.805,53,1.583,54,1.805,55,1.805,56,2.84,57,2.84,58,2.84,59,3.998,60,3.866,61,4.266,62,3.614,63,4.369,64,2.528,65,1.805,66,1.687,155,1.687,160,2.455,220,2.918,278,0.771,315,2.84,316,2.84,318,3.39,420,2.955,435,2.84,436,2.84,488,2.84,595,3.135,609,2.84,610,2.84,611,2.771,698,2.84,699,2.84,700,2.84,761,2.84,814,3.135,842,2.84,844,2.84,1089,2.84,1090,3.321,1091,3.321,1092,3.321,1093,3.321]],["title/properties.html",[280,1.394,886,2.59]],["body/properties.html",[12,0.021,45,0.017,46,0.017,280,1.644,934,4.393,1019,3.903,1021,3.903,1094,5.138,1095,5.138,1096,5.138,1097,5.138,1098,5.138,1099,5.138,1100,6.182,1101,5.138,1102,5.138,1103,5.138,1104,5.138,1105,5.138]],["title/miscellaneous/typealiases.html",[927,1.769,1106,4.356]],["body/miscellaneous/typealiases.html",[7,0.597,12,0.019,45,0.018,46,0.018,150,3.231,164,0.688,292,2.567,309,3.457,313,2.929,314,2.567,927,3.147,1107,5.387,1108,6.359]],["title/miscellaneous/variables.html",[927,1.769,1109,3.725]],["body/miscellaneous/variables.html",[3,0.186,7,0.352,12,0.021,36,4.223,39,1.73,45,0.013,46,0.013,67,2.414,90,1.727,96,2.848,97,2.718,98,3.425,99,2.414,134,2.414,143,2.007,164,0.67,171,1.869,179,3.425,184,1.727,232,2.497,307,1.297,331,3.425,336,2.848,364,3.1,370,2.007,487,3.608,489,2.188,490,3.926,493,2.718,498,2.414,513,5.08,516,2.718,518,3.425,529,2.007,597,3.104,704,2.414,719,3.425,720,2.718,721,4.877,722,2.188,723,4.877,724,2.414,725,4.481,726,2.718,727,3.425,854,3.425,877,2.718,878,4.481,927,1.856,930,4.481,1109,2.718,1110,4.509,1111,4.509,1112,4.509,1113,4.509,1114,4.509,1115,3.178,1116,3.178,1117,3.178,1118,3.178,1119,3.178,1120,3.178]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":578,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["0.1.13",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1095,"title":{},"body":{"properties.html":{}}}],["0.30.3",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/Flags.html":{},"injectables/OrderService.html":{}}}],["1.4.6",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["1.78.0",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["12.0.7",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["12.0.8",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["16.7.1",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["17.9.2",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["18.0.2",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":761,"title":{},"body":{"injectables/PrismaService.html":{},"overview.html":{}}}],["2.0.0",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1024,"title":{},"body":{"license.html":{}}}],["21",{"_index":1093,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["3600000",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["4.0.1",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5",{"_index":1091,"title":{},"body":{"overview.html":{}}}],["5.2.3",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":689,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["6",{"_index":1090,"title":{},"body":{"overview.html":{}}}],["60",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["7.8.1",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["7d056s1koop2",{"_index":697,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["8",{"_index":1092,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1055,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":302,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["access_token",{"_index":296,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["accessible",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":1079,"title":{},"body":{"license.html":{}}}],["actual",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["aliases",{"_index":1107,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":944,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1046,"title":{},"body":{"license.html":{}}}],["angular",{"_index":991,"title":{},"body":{"index.html":{}}}],["api",{"_index":836,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["api.bookstore.nas",{"_index":933,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["apollodriver",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagegraphqlplayground",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["app.close",{"_index":780,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["app.dto",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appended",{"_index":573,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":954,"title":{},"body":{"index.html":{}}}],["arg",{"_index":500,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice",{"_index":512,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(1).split",{"_index":509,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(2",{"_index":505,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.startswith",{"_index":501,"title":{},"body":{"interfaces/Flags.html":{}}}],["argon",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(dto.password",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.verify(user.hash",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["args",{"_index":336,"title":{},"body":{"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":496,"title":{},"body":{"interfaces/Flags.html":{}}}],["argumentshost",{"_index":660,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["arising",{"_index":1083,"title":{},"body":{"license.html":{}}}],["array",{"_index":497,"title":{},"body":{"interfaces/Flags.html":{}}}],["asia/kolkata",{"_index":778,"title":{},"body":{"injectables/PrismaService.html":{}}}],["associated",{"_index":1034,"title":{},"body":{"license.html":{}}}],["async",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth.resolver",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth/auth.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/decorator",{"_index":598,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{}}}],["auth/guard",{"_index":599,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["authcontroller",{"_index":201,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authdto",{"_index":208,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authenticated",{"_index":945,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":977,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":538,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authguard('jwt",{"_index":540,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authinput",{"_index":291,"title":{"classes/AuthInput.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1104,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":978,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1072,"title":{},"body":{"license.html":{}}}],["authpayload",{"_index":295,"title":{"classes/AuthPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["authresolver",{"_index":324,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":220,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":1097,"title":{},"body":{"properties.html":{}}}],["based",{"_index":685,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["baseexceptionfilter",{"_index":654,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["between",{"_index":971,"title":{},"body":{"index.html":{}}}],["body",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["book",{"_index":393,"title":{"classes/Book.html":{}},"body":{"classes/Book.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["book.controller",{"_index":438,"title":{},"body":{"modules/BookModule.html":{}}}],["book.dto",{"_index":423,"title":{},"body":{"controllers/BookController.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts",{"_index":455,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.dto.ts:10",{"_index":468,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:14",{"_index":462,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:18",{"_index":464,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:22",{"_index":466,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:6",{"_index":467,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.point",{"_index":633,"title":{},"body":{"injectables/OrderService.html":{}}}],["book.service",{"_index":421,"title":{},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{}}}],["book/book.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["book/book.service",{"_index":615,"title":{},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{}}}],["bookcontroller",{"_index":395,"title":{"controllers/BookController.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"coverage.html":{}}}],["bookid",{"_index":476,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["bookmodule",{"_index":60,"title":{"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["bookpoint",{"_index":638,"title":{},"body":{"injectables/OrderService.html":{}}}],["books",{"_index":397,"title":{},"body":{"controllers/BookController.html":{}}}],["bookservice",{"_index":420,"title":{"injectables/BookService.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["bookstore.nas",{"_index":1098,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["browse",{"_index":1088,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1085,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1101,"title":{},"body":{"properties.html":{}}}],["built",{"_index":936,"title":{},"body":{"index.html":{}}}],["business",{"_index":955,"title":{},"body":{"index.html":{}}}],["c",{"_index":1023,"title":{},"body":{"license.html":{}}}],["cache",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('home",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["cachemodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(5",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(number.max_safe_integer",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(undefined)@get('health",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["case",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["catch",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["catch((err",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["catch(exception",{"_index":657,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["catch(prismaclientunknownrequesterror",{"_index":666,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["chalk",{"_index":747,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.cyan(json.stringify(e.params",{"_index":752,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.green(e.query",{"_index":750,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.magenta(`${e.duration}ms",{"_index":754,"title":{},"body":{"injectables/PrismaService.html":{}}}],["charge",{"_index":1030,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1075,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"classes/Order.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"classes/UserResolver.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":278,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"classes/Order.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["cleandb",{"_index":706,"title":{},"body":{"injectables/PrismaService.html":{}}}],["clear",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["client",{"_index":651,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bookmodule",{"_index":435,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_providers",{"_index":436,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":609,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_providers",{"_index":610,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":698,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":699,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":700,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":842,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":843,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":844,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["compodoc",{"_index":988,"title":{},"body":{"index.html":{}}}],["compression",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["concerns",{"_index":959,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1054,"title":{},"body":{"license.html":{}}}],["config",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":740,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mode",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":976,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configuration",{"_index":973,"title":{},"body":{"index.html":{}}}],["connect",{"_index":187,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connected",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connecting",{"_index":774,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"license.html":{}}}],["connectors/postgresql#configuring",{"_index":736,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.count('db",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["console.debug",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/OrderService.html":{}}}],["console.debug(req.cookies",{"_index":576,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.error",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ServiceStatus.html":{}}}],["console.error('db",{"_index":691,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.error('db:caught",{"_index":687,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.error(exception.message",{"_index":667,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.info(new",{"_index":773,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":864,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('extracted",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('flags",{"_index":517,"title":{},"body":{"interfaces/Flags.html":{}}}],["console.log(chalk.yellow('duration",{"_index":753,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('params",{"_index":751,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('query",{"_index":749,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('duration",{"_index":771,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('params",{"_index":769,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('query",{"_index":767,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":677,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["constructor",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":329,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(config",{"_index":547,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(ok",{"_index":789,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["constructor(prisma",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/OrderService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["context",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1080,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('books",{"_index":425,"title":{},"body":{"controllers/BookController.html":{}}}],["controller('orders",{"_index":601,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('users",{"_index":830,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["cookie",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["cookiename",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["cookies",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["copies",{"_index":1048,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1008,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1022,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":867,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coverimage",{"_index":456,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["create",{"_index":398,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"index.html":{}}}],["create(@body",{"_index":426,"title":{},"body":{"controllers/BookController.html":{}}}],["create(createbookdto",{"_index":403,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["create(createorderdto",{"_index":618,"title":{},"body":{"injectables/OrderService.html":{}}}],["create(userid",{"_index":586,"title":{},"body":{"controllers/OrderController.html":{}}}],["createbookdto",{"_index":404,"title":{"classes/CreateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["createdat",{"_index":300,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["createorderdto",{"_index":473,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":947,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":331,"title":{},"body":{"classes/AuthResolver.html":{},"classes/PrismaClientExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":669,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["ctx.req",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.res",{"_index":344,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentflag",{"_index":499,"title":{},"body":{"interfaces/Flags.html":{}}}],["customerid",{"_index":604,"title":{},"body":{"controllers/OrderController.html":{}}}],["customize",{"_index":684,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["damages",{"_index":1076,"title":{},"body":{"license.html":{}}}],["data",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":694,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["database_url",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["datasources",{"_index":738,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["datetime",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["db",{"_index":200,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["db_connected",{"_index":727,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_error:unique",{"_index":681,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["dbstatus",{"_index":183,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.debug",{"_index":199,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.ok",{"_index":197,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.status",{"_index":198,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["deal",{"_index":1035,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1084,"title":{},"body":{"license.html":{}}}],["debug",{"_index":178,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"controllers/BookController.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"controllers/OrderController.html":{},"classes/UpdateOrderDto.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["definitionsfactory",{"_index":518,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["definitionsfactory.generate",{"_index":519,"title":{},"body":{"interfaces/Flags.html":{}}}],["delete",{"_index":417,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":411,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["deleted",{"_index":840,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":817,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@getuser('userid",{"_index":839,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":820,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":934,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["dev/test/prod",{"_index":1007,"title":{},"body":{"index.html":{}}}],["development",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["distribute",{"_index":1044,"title":{},"body":{"license.html":{}}}],["docs",{"_index":996,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":868,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":629,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{}}}],["domain",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["domain.com",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["down",{"_index":783,"title":{},"body":{"injectables/PrismaService.html":{}}}],["driver",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.password",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/create",{"_index":422,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["dto/update",{"_index":424,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["due",{"_index":195,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["e",{"_index":746,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.g",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["e.params",{"_index":766,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.query",{"_index":755,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e2e",{"_index":729,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["edituser",{"_index":818,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituser(@getuser('userid",{"_index":833,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(userid",{"_index":823,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituserdto",{"_index":478,"title":{"classes/EditUserDto.html":{}},"body":{"classes/EditUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["em",{"_index":998,"title":{},"body":{"index.html":{}}}],["email",{"_index":281,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["emit",{"_index":721,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":707,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":711,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enough",{"_index":635,"title":{},"body":{"injectables/OrderService.html":{}}}],["env",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":1009,"title":{},"body":{"index.html":{}}}],["env.local",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["env.prod",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["envfile",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["error",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["error.code",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["event",{"_index":722,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":732,"title":{},"body":{"injectables/PrismaService.html":{}}}],["exception",{"_index":663,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.code",{"_index":672,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":653,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:16",{"_index":662,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.message",{"_index":671,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.message.replace(/\\n/g",{"_index":670,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception/prisma",{"_index":652,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["executioncontext",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":630,"title":{},"body":{"injectables/OrderService.html":{}}}],["expiration",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":531,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{}}}],["extract",{"_index":495,"title":{},"body":{"interfaces/Flags.html":{}}}],["extractflags",{"_index":881,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractflags(args",{"_index":498,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie",{"_index":545,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie(req",{"_index":549,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":194,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{}}}],["false",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["fieldresolverenhancers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["fields",{"_index":683,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":975,"title":{},"body":{"index.html":{},"license.html":{}}}],["fill",{"_index":1010,"title":{},"body":{"index.html":{}}}],["find",{"_index":997,"title":{},"body":{"index.html":{}}}],["findall",{"_index":399,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findone",{"_index":400,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":429,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["findone(id",{"_index":407,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findone(userid",{"_index":862,"title":{},"body":{"injectables/UserService.html":{}}}],["first",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firstname",{"_index":310,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["fitness",{"_index":1068,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{}}}],["fixme:unsure",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["flag",{"_index":503,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys",{"_index":508,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys.foreach((key",{"_index":510,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagname",{"_index":504,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags",{"_index":487,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["flags.w",{"_index":524,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags.watch",{"_index":523,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[currentflag",{"_index":515,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[flagname",{"_index":506,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[key",{"_index":511,"title":{},"body":{"interfaces/Flags.html":{}}}],["followed",{"_index":952,"title":{},"body":{"index.html":{}}}],["following",{"_index":1053,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{}}}],["forbiddenexception(\"user",{"_index":628,"title":{},"body":{"injectables/OrderService.html":{}}}],["forbiddenexception('credentials",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('incorrect",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":716,"title":{},"body":{"injectables/PrismaService.html":{}}}],["format(query",{"_index":757,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formattedquery",{"_index":756,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formatter",{"_index":718,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["free",{"_index":1029,"title":{},"body":{"license.html":{}}}],["function",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{},"coverage.html":{}}}],["functional",{"_index":942,"title":{},"body":{"index.html":{}}}],["functions",{"_index":928,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1051,"title":{},"body":{"license.html":{}}}],["g",{"_index":1003,"title":{},"body":{"index.html":{}}}],["generate",{"_index":992,"title":{},"body":{"index.html":{}}}],["generated",{"_index":995,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":408,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["get('health",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":831,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@cachekey('home')@cachettl(number.max_safe_integer",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["gethealth",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["getme",{"_index":819,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(@getuser",{"_index":832,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(user",{"_index":826,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":931,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":597,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser('userid",{"_index":602,"title":{},"body":{"controllers/OrderController.html":{}}}],["getusergraphql",{"_index":854,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":702,"title":{},"body":{"modules/PrismaModule.html":{}}}],["gqlexceptionfilter",{"_index":656,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1028,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"dependencies.html":{},"index.html":{}}}],["graphql:schema",{"_index":941,"title":{},"body":{"index.html":{}}}],["graphqlargumentshost",{"_index":661,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["graphqlcontext",{"_index":90,"title":{"classes/GraphqlContext.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqldatetime",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqldefinitionsfactory",{"_index":493,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["handled",{"_index":956,"title":{},"body":{"index.html":{}}}],["handling",{"_index":696,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["hash",{"_index":308,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["hashing",{"_index":982,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":989,"title":{},"body":{"index.html":{}}}],["here",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1027,"title":{},"body":{"license.html":{}}}],["hiro",{"_index":1025,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1073,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1099,"title":{},"body":{"properties.html":{}}}],["host",{"_index":659,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":668,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["hour",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["http",{"_index":960,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('signin",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["httponly",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["https",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com/fundamentals/lifecycle",{"_index":731,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://github.com/jsfame/api.bookstore.nas",{"_index":1100,"title":{},"body":{"properties.html":{}}}],["https://github.com/jsfame/api.bookstore.nas/issues",{"_index":1102,"title":{},"body":{"properties.html":{}}}],["https://jsfame.github.io/api.bookstore.nas",{"_index":999,"title":{},"body":{"index.html":{}}}],["https://www.prisma.io/blog/nestjs",{"_index":695,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["https://www.prisma.io/docs/concepts/database",{"_index":735,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://www.prisma.io/docs/reference/api",{"_index":673,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.bad_request",{"_index":680,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.conflict",{"_index":678,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":693,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["id",{"_index":298,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":744,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ignoreexpiration",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implemented",{"_index":962,"title":{},"body":{"index.html":{}}}],["implements",{"_index":655,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{}}}],["implied",{"_index":1064,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["import('chalk",{"_index":748,"title":{},"body":{"injectables/PrismaService.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["imutation",{"_index":303,"title":{"classes/IMutation.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["included",{"_index":1058,"title":{},"body":{"license.html":{}}}],["including",{"_index":1038,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":712,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":154,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":682,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["inspect",{"_index":948,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":990,"title":{},"body":{"index.html":{}}}],["install",{"_index":1002,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1000,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1005,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["interactions",{"_index":964,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":486,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":488,"title":{},"body":{"interfaces/Flags.html":{},"overview.html":{}}}],["iquery",{"_index":312,"title":{"classes/IQuery.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["isarray",{"_index":469,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["isemail",{"_index":287,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{}}}],["isemail()@isnotempty",{"_index":283,"title":{},"body":{"classes/AuthDto.html":{}}}],["isemail()@isoptional",{"_index":481,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isglobal",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":470,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isnotempty",{"_index":288,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{}}}],["isnotempty()@isint",{"_index":463,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{}}}],["isnotempty()@isstring",{"_index":461,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["iso",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["isoptional",{"_index":471,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isoptional()@isarray",{"_index":465,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["isoptional()@isint",{"_index":804,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["isstring",{"_index":472,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{}}}],["isstring()@isoptional",{"_index":483,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstrongpassword",{"_index":289,"title":{},"body":{"classes/AuthDto.html":{}}}],["isstrongpassword()@isnotempty",{"_index":285,"title":{},"body":{"classes/AuthDto.html":{}}}],["items",{"_index":949,"title":{},"body":{"index.html":{}}}],["jest",{"_index":986,"title":{},"body":{"index.html":{}}}],["john",{"_index":514,"title":{},"body":{"interfaces/Flags.html":{}}}],["joi",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(2",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('hiro@jwt#token",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().valid('dev",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":494,"title":{},"body":{"interfaces/Flags.html":{}}}],["join(process.cwd",{"_index":521,"title":{},"body":{"interfaces/Flags.html":{}}}],["jwt",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt_max_age",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt_secret",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtconstants",{"_index":543,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":535,"title":{"classes/JwtGuard.html":{}},"body":{"classes/JwtGuard.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":326,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":318,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtstrategy.extractjwtfromcookie",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["keywordcase",{"_index":762,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kind",{"_index":1063,"title":{},"body":{"license.html":{}}}],["kleur",{"_index":715,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["kleur.cyan(json.stringify(e.params",{"_index":770,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.green(formattedquery",{"_index":768,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.magenta(`${e.duration}ms",{"_index":772,"title":{},"body":{"injectables/PrismaService.html":{}}}],["laciferin@gmail.com",{"_index":1105,"title":{},"body":{"properties.html":{}}}],["landing",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["language",{"_index":758,"title":{},"body":{"injectables/PrismaService.html":{}}}],["lastname",{"_index":311,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["layers",{"_index":972,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":723,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":1077,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1074,"title":{},"body":{"license.html":{}}}],["license",{"_index":1021,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":1020,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1039,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1065,"title":{},"body":{"license.html":{}}}],["linesbetweenqueries",{"_index":764,"title":{},"body":{"injectables/PrismaService.html":{}}}],["literal",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["log",{"_index":741,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logevents",{"_index":719,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":784,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["long",{"_index":502,"title":{},"body":{"interfaces/Flags.html":{}}}],["manage",{"_index":946,"title":{},"body":{"index.html":{}}}],["management",{"_index":974,"title":{},"body":{"index.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(@getusergraphql",{"_index":856,"title":{},"body":{"classes/UserResolver.html":{}}}],["me(user",{"_index":851,"title":{},"body":{"classes/UserResolver.html":{}}}],["merchantability",{"_index":1067,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1042,"title":{},"body":{"license.html":{}}}],["message",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["methodologies",{"_index":951,"title":{},"body":{"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["milliseconds",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":927,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1019,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1041,"title":{},"body":{"license.html":{}}}],["modular",{"_index":953,"title":{},"body":{"index.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["morph",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["mutation",{"_index":337,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signin",{"_index":332,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signup",{"_index":334,"title":{},"body":{"classes/AuthResolver.html":{}}}],["name",{"_index":163,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["needs",{"_index":686,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"controllers/UserController.html":{}}}],["nest/swagger",{"_index":961,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":917,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":665,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":800,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":539,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["netpoint",{"_index":636,"title":{},"body":{"injectables/OrderService.html":{}}}],["new",{"_index":184,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1071,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":626,"title":{},"body":{"injectables/OrderService.html":{}}}],["notfoundexception(\"book",{"_index":632,"title":{},"body":{"injectables/OrderService.html":{}}}],["notice",{"_index":1056,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1001,"title":{},"body":{"index.html":{}}}],["null",{"_index":314,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":309,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":299,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object(dto",{"_index":968,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":1032,"title":{},"body":{"license.html":{}}}],["ok",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["onmoduledestroy",{"_index":730,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":708,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["order",{"_index":581,"title":{"classes/Order.html":{}},"body":{"classes/Order.html":{},"coverage.html":{}}}],["order.controller",{"_index":613,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":594,"title":{},"body":{"controllers/OrderController.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts",{"_index":475,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:6",{"_index":477,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:8",{"_index":805,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["order.service",{"_index":596,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":583,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":61,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orders",{"_index":585,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["orderservice",{"_index":595,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["otherwise",{"_index":1082,"title":{},"body":{"license.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outputas",{"_index":522,"title":{},"body":{"interfaces/Flags.html":{}}}],["over",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["overview",{"_index":1089,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":979,"title":{},"body":{"index.html":{}}}],["p2002",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["package",{"_index":886,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":418,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["parameters",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":765,"title":{},"body":{"injectables/PrismaService.html":{}}}],["parser",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":799,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{}}}],["partialtype(createbookdto",{"_index":802,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["partialtype(createorderdto",{"_index":806,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["particular",{"_index":1069,"title":{},"body":{"license.html":{}}}],["passport",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passport.js",{"_index":940,"title":{},"body":{"index.html":{}}}],["passportjs",{"_index":980,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":282,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"index.html":{}}}],["patch",{"_index":419,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":415,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["path",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["pattern",{"_index":969,"title":{},"body":{"index.html":{}}}],["payload",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["payload.email",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":1026,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1049,"title":{},"body":{"license.html":{}}}],["person",{"_index":1031,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1050,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":966,"title":{},"body":{"index.html":{}}}],["playground",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["pnpm",{"_index":1004,"title":{},"body":{"index.html":{}}}],["point",{"_index":457,"title":{},"body":{"classes/CreateBookDto.html":{},"injectables/OrderService.html":{}}}],["port",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1060,"title":{},"body":{"license.html":{}}}],["post",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["post('signin",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":759,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prefix",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["prerequisite",{"_index":1006,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.bookcreateinput",{"_index":441,"title":{},"body":{"injectables/BookService.html":{}}}],["prisma.bookupdateinput",{"_index":446,"title":{},"body":{"injectables/BookService.html":{}}}],["prisma.logdefinition",{"_index":720,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prisma.orderuncheckedcreateinput",{"_index":619,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.orderuncheckedupdateinput",{"_index":624,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":658,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["prisma.service",{"_index":703,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":448,"title":{},"body":{"injectables/BookService.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{}}}],["prisma/client/runtime/library",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prisma/prisma.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":705,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientexceptionfilter",{"_index":649,"title":{"classes/PrismaClientExceptionFilter.html":{}},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["prismaclientknownrequesterror",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prismaclientunknownrequesterror",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prismamodule",{"_index":62,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":160,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/UserResolver.html":{}}}],["process.argv.slice(2",{"_index":516,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["process.env.force_color",{"_index":742,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.mode",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["prod",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["production",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project",{"_index":993,"title":{},"body":{"index.html":{}}}],["promise",{"_index":305,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["properties",{"_index":280,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"properties.html":{}}}],["provided",{"_index":1061,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["publish",{"_index":1043,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1070,"title":{},"body":{"license.html":{}}}],["pwmatches",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":724,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["query('me",{"_index":852,"title":{},"body":{"classes/UserResolver.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{},"classes/UserResolver.html":{}}}],["reference",{"_index":675,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["reference/error",{"_index":674,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["reflect",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":401,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["remove(@param('id",{"_index":433,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["remove(id",{"_index":410,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["replace",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["repo",{"_index":1018,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1103,"title":{},"body":{"properties.html":{}}}],["req",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{}}}],["req.cookies",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.cookies.token",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies[tokenfield].length",{"_index":577,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":574,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request",{"_index":529,"title":{},"body":{"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["requesttype",{"_index":550,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestwithuser",{"_index":526,"title":{"classes/RequestWithUser.html":{}},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["required",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["res",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["res.clearcookie('token",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie(cookiename",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('token",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('user",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send(token",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolver",{"_index":338,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["resolver('auth",{"_index":339,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('user",{"_index":855,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{}}}],["response.status(httpstatus.conflict).json(payload",{"_index":688,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["response.status(httpstatus.internal_server_error).json",{"_index":692,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["restriction",{"_index":1037,"title":{},"body":{"license.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":1040,"title":{},"body":{"license.html":{}}}],["run",{"_index":1012,"title":{},"body":{"index.html":{}}}],["running",{"_index":182,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["rxjs",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["salts",{"_index":983,"title":{},"body":{"index.html":{}}}],["schema",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["sec",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["secret",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["select",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["sell",{"_index":1047,"title":{},"body":{"license.html":{}}}],["sent",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["separate",{"_index":957,"title":{},"body":{"index.html":{}}}],["separating",{"_index":958,"title":{},"body":{"index.html":{}}}],["server",{"_index":935,"title":{},"body":{"index.html":{}}}],["service",{"_index":834,"title":{},"body":{"controllers/UserController.html":{}}}],["services",{"_index":963,"title":{},"body":{"index.html":{}}}],["servicestatus",{"_index":173,"title":{"classes/ServiceStatus.html":{}},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["set",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["shall",{"_index":1057,"title":{},"body":{"license.html":{}}}],["short",{"_index":507,"title":{},"body":{"interfaces/Flags.html":{}}}],["signed",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signin(@args('data",{"_index":342,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signin(@body",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(data",{"_index":306,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["signin(dto",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signtoken",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(userid",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signup(@args('data",{"_index":340,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signup(@body",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(data",{"_index":304,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["signup(dto",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signuppayload",{"_index":297,"title":{"classes/SignUpPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["software",{"_index":1033,"title":{},"body":{"license.html":{}}}],["solana/web3.js",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["something",{"_index":835,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["specs",{"_index":943,"title":{},"body":{"index.html":{}}}],["sql",{"_index":717,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["src/**/*.graphql",{"_index":520,"title":{},"body":{"interfaces/Flags.html":{}}}],["src/.../app.module.ts",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generate",{"_index":930,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":1108,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.service.ts",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.dto.ts",{"_index":525,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["src/app.dto.ts:11",{"_index":527,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:12",{"_index":528,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:8",{"_index":788,"title":{},"body":{"classes/RequestWithUser.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":156,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":161,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":169,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:4",{"_index":790,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:6",{"_index":792,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:7",{"_index":793,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:8",{"_index":791,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/auth/auth.controller.ts",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":328,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:16",{"_index":335,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:23",{"_index":333,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:9",{"_index":330,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.service.ts",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/get",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":279,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":286,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":284,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/guard/jwt.guard.ts",{"_index":536,"title":{},"body":{"classes/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guard/jwt.guard.ts:3",{"_index":537,"title":{},"body":{"classes/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":542,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":548,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:24",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:35",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/book/book.controller.ts",{"_index":396,"title":{},"body":{"controllers/BookController.html":{},"coverage.html":{}}}],["src/book/book.controller.ts:11",{"_index":405,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:16",{"_index":406,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:21",{"_index":409,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:26",{"_index":416,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:31",{"_index":412,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.module.ts",{"_index":437,"title":{},"body":{"modules/BookModule.html":{}}}],["src/book/book.service.ts",{"_index":439,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{}}}],["src/book/book.service.ts:13",{"_index":443,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:19",{"_index":444,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:27",{"_index":447,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:34",{"_index":445,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:6",{"_index":440,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:9",{"_index":442,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/dto/create",{"_index":454,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{}}}],["src/book/dto/update",{"_index":798,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/book/entities/book.entity.ts",{"_index":394,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/generate",{"_index":489,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/graphql.ts",{"_index":292,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/graphql.ts:12",{"_index":293,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:13",{"_index":294,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:17",{"_index":327,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/graphql.ts:21",{"_index":796,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:22",{"_index":795,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:23",{"_index":794,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:24",{"_index":797,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:28",{"_index":533,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:30",{"_index":532,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:34",{"_index":811,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:35",{"_index":808,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:36",{"_index":810,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:37",{"_index":809,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:38",{"_index":812,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:39",{"_index":807,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:40",{"_index":813,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:44",{"_index":534,"title":{},"body":{"classes/IQuery.html":{}}}],["src/main.ts",{"_index":883,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":474,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/order/dto/update",{"_index":803,"title":{},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":582,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/order.controller.ts",{"_index":584,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:23",{"_index":587,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:34",{"_index":588,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:39",{"_index":589,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:44",{"_index":592,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:49",{"_index":590,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":612,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":616,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:15",{"_index":620,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:48",{"_index":621,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:54",{"_index":622,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:62",{"_index":625,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:69",{"_index":623,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":617,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma",{"_index":650,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["src/prisma/prisma.module.ts",{"_index":701,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":704,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.service.ts:29",{"_index":709,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:71",{"_index":714,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:81",{"_index":713,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:88",{"_index":710,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/user/dto/edit",{"_index":479,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":815,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:23",{"_index":828,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:29",{"_index":825,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":822,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":845,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.resolver.ts",{"_index":849,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["src/user/user.resolver.ts:17",{"_index":853,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:9",{"_index":850,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.service.ts",{"_index":858,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:17",{"_index":861,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:32",{"_index":860,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":859,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":863,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":737,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert",{"_index":733,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert=root.crt",{"_index":734,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":1013,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1014,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1015,"title":{},"body":{"index.html":{}}}],["started",{"_index":932,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":544,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["status",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{}}}],["statuscode",{"_index":679,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["stdout",{"_index":725,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":994,"title":{},"body":{"index.html":{}}}],["sub",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":1052,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1045,"title":{},"body":{"license.html":{}}}],["subscriptions",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["substantial",{"_index":1059,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":190,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["super",{"_index":541,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["super.catch(exception",{"_index":690,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["supertest",{"_index":987,"title":{},"body":{"index.html":{}}}],["support",{"_index":1086,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1087,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["t",{"_index":313,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["tabwidth",{"_index":760,"title":{},"body":{"injectables/PrismaService.html":{}}}],["tags",{"_index":458,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["taken",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["tear",{"_index":782,"title":{},"body":{"injectables/PrismaService.html":{}}}],["technical",{"_index":950,"title":{},"body":{"index.html":{}}}],["test",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["test').default('dev",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["test:covlicense",{"_index":1017,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1016,"title":{},"body":{"index.html":{}}}],["testing",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["tests",{"_index":985,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":775,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$executerawunsafe(\"set",{"_index":776,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":779,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('query",{"_index":745,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction",{"_index":781,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethealth",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authcontroller.signin(dto",{"_index":343,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authcontroller.signup(dto",{"_index":341,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.signin(dto",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.book.deletemany",{"_index":786,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.bookservice.create(createbookdto",{"_index":427,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findall",{"_index":428,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findone(createorderdto.bookid",{"_index":631,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.bookservice.findone(id",{"_index":430,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.remove(+id",{"_index":434,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.update(+id",{"_index":432,"title":{},"body":{"controllers/BookController.html":{}}}],["this.config.get('jwt_secret",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.jwt.signasync(payload",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.order.deletemany",{"_index":787,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.orderservice.create",{"_index":603,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":605,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":606,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.remove(+id",{"_index":608,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.update(+id",{"_index":607,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma",{"_index":186,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["this.prisma.$transaction",{"_index":640,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.book.create",{"_index":449,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.delete",{"_index":453,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.findmany",{"_index":450,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.findunique",{"_index":451,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.update",{"_index":452,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.order.create",{"_index":643,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.delete",{"_index":648,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":645,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":646,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.update",{"_index":647,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.user.create",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.delete",{"_index":866,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":641,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["this.signtoken(user.id",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.deletemany",{"_index":785,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.usercontroller.getme(user",{"_index":857,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.deleteuser(userid",{"_index":841,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituser(userid",{"_index":838,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(createorderdto.customerid",{"_index":627,"title":{},"body":{"injectables/OrderService.html":{}}}],["through",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{}}}],["throws",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["time",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["timezone",{"_index":777,"title":{},"body":{"injectables/PrismaService.html":{}}}],["title",{"_index":459,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["todo",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["token.access_token",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenfield",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":981,"title":{},"body":{"index.html":{}}}],["tools",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":939,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1081,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":639,"title":{},"body":{"injectables/OrderService.html":{}}}],["transaction.at",{"_index":644,"title":{},"body":{"injectables/OrderService.html":{}}}],["transfer",{"_index":967,"title":{},"body":{"index.html":{}}}],["transferring",{"_index":970,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["transformers",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["transport",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["try",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":743,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["type",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1106,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typepaths",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Flags.html":{}}}],["types",{"_index":801,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":938,"title":{},"body":{"index.html":{}}}],["typings.ts",{"_index":490,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":676,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["unit",{"_index":984,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":168,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["up",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["update",{"_index":402,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["update(@param('id",{"_index":431,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["update(id",{"_index":413,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["updatebookdto",{"_index":414,"title":{"classes/UpdateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":301,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["updateorderdto",{"_index":591,"title":{"classes/UpdateOrderDto.html":{}},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["upper",{"_index":763,"title":{},"body":{"injectables/PrismaService.html":{}}}],["url",{"_index":739,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["useguards",{"_index":593,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":600,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete",{"_index":821,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get('me",{"_index":827,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@patch",{"_index":824,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":307,"title":{"classes/User.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":846,"title":{},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["user.decorator.ts",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":480,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":484,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:14",{"_index":485,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:6",{"_index":482,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.email",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.hash",{"_index":865,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":642,"title":{},"body":{"injectables/OrderService.html":{}}}],["user.point",{"_index":634,"title":{},"body":{"injectables/OrderService.html":{}}}],["user.resolver",{"_index":848,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":829,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["user/user.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.service",{"_index":614,"title":{},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{}}}],["user[data",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":814,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":63,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userpoint",{"_index":637,"title":{},"body":{"injectables/OrderService.html":{}}}],["userresolver",{"_index":847,"title":{"classes/UserResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["users",{"_index":816,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":611,"title":{"injectables/UserService.html":{}},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":937,"title":{},"body":{"index.html":{}}}],["utility",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":546,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":965,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":290,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["value",{"_index":513,"title":{},"body":{"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1109,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1011,"title":{},"body":{"index.html":{}}}],["version",{"_index":1094,"title":{},"body":{"properties.html":{}}}],["void",{"_index":664,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["w",{"_index":491,"title":{},"body":{"interfaces/Flags.html":{}}}],["walletid",{"_index":530,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["ware",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["warn",{"_index":726,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":1066,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1062,"title":{},"body":{"license.html":{}}}],["watch",{"_index":492,"title":{},"body":{"interfaces/Flags.html":{},"index.html":{}}}],["web2",{"_index":1096,"title":{},"body":{"properties.html":{}}}],["whatever",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whether",{"_index":1078,"title":{},"body":{"license.html":{}}}],["whitelist:true",{"_index":837,"title":{},"body":{"controllers/UserController.html":{}}}],["without",{"_index":1036,"title":{},"body":{"license.html":{}}}],["work",{"_index":728,"title":{},"body":{"injectables/PrismaService.html":{}}}],["writer",{"_index":460,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["ws",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHealth\n                            \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheTTL(undefined)@Get('health')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@CacheKey('home')@CacheTTL(Number.MAX_SAFE_INTEGER)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { CacheInterceptor, CacheKey, CacheTTL } from '@nestjs/cache-manager'\n\n@Controller()\n@UseInterceptors(CacheInterceptor)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @CacheKey('home')\n  @CacheTTL(Number.MAX_SAFE_INTEGER) //default is just 1 sec\n  getHello() {\n    return this.appService.getHello()\n  }\n\n  @CacheTTL(5 * 1000)\n  @Get('health')\n  getHealth() {\n    return this.appService.getHealth()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BookModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { ConfigModule } from '@nestjs/config'\nimport { AuthModule } from './auth/auth.module'\nimport Joi from 'joi'\nimport { CacheModule } from '@nestjs/cache-manager'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { ApolloServerPluginLandingPageGraphQLPlayground } from '@apollo/server-plugin-landing-page-graphql-playground'\nimport { GraphQLDateTime } from 'graphql-iso-date'\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'\nimport { AppController } from './app.controller'\nimport { GraphqlContext } from './app.dto'\nimport { UserModule } from './user/user.module'\nimport { PrismaModule } from './prisma/prisma.module'\nimport { BookModule } from './book/book.module'\nimport { OrderModule } from './order/order.module'\n\nlet mode = process.env.MODE\nlet envFile = '.env'\n\nswitch (mode) {\n  case 'test':\n    envFile = '.env.test'\n    process.env.NODE_ENV = 'testing'\n    break\n  case 'prod':\n    process.env.NODE_ENV = 'production'\n    envFile = '.env.prod'\n    break\n  default:\n    mode = 'dev'\n    process.env.NODE_ENV = 'development'\n    envFile = '.env.local'\n}\n\nconsole.debug({ mode, envFile })\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [envFile, '.env'],\n      isGlobal: true,\n      cache: true,\n      validationSchema: Joi.object({\n        MODE: Joi.string().valid('dev', 'prod', 'test').default('dev'),\n        PORT: Joi.number().default(3000),\n        DATABASE_URL: Joi.string(),\n        JWT_SECRET: Joi.string().default('Hiro@JWT#TOKEN$'),\n        JWT_MAX_AGE: Joi.number().default(2 * 60 * 60 * 1000),\n      }),\n    }),\n    CacheModule.register({ isGlobal: true }),\n    GraphQLModule.forRoot({\n      context: ({ req, res }: GraphqlContext) => ({ req, res }), //required for cookies\n\n      fieldResolverEnhancers: ['interceptors'], //FIXME:unsure\n\n      autoSchemaFile: false, // schema-first\n      playground: false,\n      driver: ApolloDriver,\n      plugins: [ApolloServerPluginLandingPageGraphQLPlayground()],\n      typePaths: ['./**/*.graphql'],\n      resolvers: { DateTime: GraphQLDateTime },\n      subscriptions: {\n        'graphql-ws': true,\n        'subscriptions-transport-ws': true,\n      },\n    }),\n    PrismaModule,\n    AuthModule,\n    UserModule,\n    BookModule,\n    OrderModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHealth\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Res } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { AuthDto } from './dto'\nimport { Response } from 'express'\nimport { ConfigService } from '@nestjs/config'\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService, private config: ConfigService) {}\n\n  @Post('signup')\n  signup(@Body() dto: AuthDto) {\n    return this.authService.signup(dto)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signin(@Body() dto: AuthDto, @Res() res: Response) {\n    const token = await this.authService.signin(dto)\n\n    /*    res.cookie('user', dto.email, { //TODO:\n      // Set cookie options here (e.g., expiration, domain, path, etc.)\n      maxAge: 3600000, // Cookie expiration time in milliseconds (1 hour)\n      httpOnly: true, // Cookie accessible only through HTTP(S) requests\n      secure: true, // Cookie sent only over HTTPS if true\n      signed: true,\n    })*/\n    // const cookies = req.cookies; //TODO: middle ware to clear the cookies when signin\n    // TODO: utility function to clear and set cookie\n    // for (let cookieName in cookies) {\n    //   res.clearCookie(cookieName); // Replace '.your-domain.com' with your actual domain\n    // }\n    res.clearCookie('token')\n    res.cookie('token', token.access_token, {\n      maxAge: this.config.get('JWT_SECRET') * 1000 || 60 * 60 * 1000,\n      secure: true,\n      httpOnly: true,\n      // signed: true,\n    })\n\n    res.send(token)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsStrongPassword } from 'class-validator'\n\nexport class AuthDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string\n\n  @IsStrongPassword()\n  @IsNotEmpty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInput.html":{"url":"classes/AuthInput.html","title":"class - AuthInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PrismaModule } from '../prisma/prisma.module'\nimport { JwtStrategy } from './strategy'\nimport { AuthResolver } from './auth.resolver'\n\n@Module({\n  imports: [JwtModule.register({}), PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, AuthResolver, AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPayload.html":{"url":"classes/AuthPayload.html","title":"class - AuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authController: AuthController)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authController\n                                                  \n                                                        \n                                                                        AuthController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(dto: AuthDto, ctx: GraphqlContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signIn')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n                                    \n                                                GraphqlContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signUp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql'\nimport { AuthService } from './auth.service'\nimport { AuthController } from './auth.controller'\nimport { GraphqlContext } from '../app.dto'\nimport { AuthDto } from './dto'\nimport { AuthInput } from '../graphql'\n\n@Resolver('Auth')\nexport class AuthResolver {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authController: AuthController,\n  ) {}\n\n  @Mutation('signUp')\n  signUp(@Args('data') dto: AuthDto) {\n    console.debug({ dto })\n\n    return this.authController.signup(dto as AuthInput)\n  }\n\n  @Mutation('signIn')\n  signIn(@Args('data') dto: AuthDto, @Context() ctx: GraphqlContext) {\n    console.debug({ dto })\n\n    return this.authController.signin(dto as AuthInput, ctx.res)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userId: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { AuthDto } from './dto'\n\nimport argon from 'argon2'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwt: JwtService,\n    private config: ConfigService,\n  ) {}\n\n  async signup(dto: AuthDto) {\n    const hash = await argon.hash(dto.password)\n\n    try {\n      const user = await this.prisma.user.create({\n        data: {\n          email: dto.email,\n          hash: hash,\n        },\n        select: {\n          //FIXME: use transformers\n          id: true,\n          email: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      return user\n    } catch (error) {\n      console.error({\n        code: error.code,\n        error,\n      })\n      if (\n        error instanceof PrismaClientKnownRequestError ||\n        PrismaClientUnknownRequestError\n      ) {\n        if (error.code == 'P2002') {\n          throw new ForbiddenException('credentials taken')\n        }\n      }\n      throw error\n    }\n  }\n\n  async signin(dto: AuthDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email: dto.email,\n      },\n    })\n\n    if (!user) throw new ForbiddenException('incorrect credentials')\n\n    const pwMatches = await argon.verify(user.hash, dto.password)\n\n    if (!pwMatches) throw new ForbiddenException('invalid credentials')\n\n    return this.signToken(user.id, user.email)\n  }\n\n  async signToken(userId: number, email: string) {\n    const payload = {\n      sub: userId,\n      email,\n    }\n    const secret = this.config.get('JWT_SECRET')\n\n    return {\n      access_token: await this.jwt.signAsync(payload, {\n        expiresIn: '1hr', //TODO:\n        secret: secret,\n      }),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/entities/book.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Book {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookController.html":{"url":"controllers/BookController.html","title":"controller - BookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createBookDto: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateBookDto: UpdateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common'\nimport { BookService } from './book.service'\nimport { CreateBookDto } from './dto/create-book.dto'\nimport { UpdateBookDto } from './dto/update-book.dto'\n\n@Controller('books')\nexport class BookController {\n  constructor(private readonly bookService: BookService) {}\n\n  @Post()\n  create(@Body() createBookDto: CreateBookDto) {\n    return this.bookService.create(createBookDto)\n  }\n\n  @Get()\n  findAll() {\n    return this.bookService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.bookService.findOne(id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateBookDto: UpdateBookDto) {\n    return this.bookService.update(+id, updateBookDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.bookService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookModule.html":{"url":"modules/BookModule.html","title":"module - BookModule","body":"\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\n\nBookService\n\nBookService\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/book/book.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { BookService } from './book.service'\nimport { BookController } from './book.controller'\n\n@Module({\n  controllers: [BookController],\n  providers: [BookService],\n})\nexport class BookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/book/book.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBookDto: Prisma.BookCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                Prisma.BookCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBookDto: Prisma.BookUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                Prisma.BookUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Prisma } from '@prisma/client'\nimport { PrismaService } from '../prisma/prisma.service'\n\n@Injectable()\nexport class BookService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(createBookDto: Prisma.BookCreateInput) {\n    return this.prisma.book.create({ data: createBookDto })\n  }\n\n  findAll() {\n    return this.prisma.book.findMany({\n      where: {},\n    })\n  }\n\n  findOne(id: number) {\n    return this.prisma.book.findUnique({\n      where: {\n        id,\n      },\n    })\n  }\n\n  update(id: number, updateBookDto: Prisma.BookUpdateInput) {\n    return this.prisma.book.update({\n      where: { id },\n      data: updateBookDto,\n    })\n  }\n\n  remove(id: number) {\n    return this.prisma.book.delete({\n      where: { id },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/create-book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                coverImage\n                            \n                            \n                                    \n                                    \n                                point\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                writer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        coverImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        point\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        writer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsInt, IsNotEmpty, IsOptional, IsString } from 'class-validator'\n\nexport class CreateBookDto {\n  @IsNotEmpty()\n  @IsString()\n  title: string\n\n  @IsNotEmpty()\n  @IsString()\n  writer: string\n\n  @IsNotEmpty()\n  @IsString()\n  coverImage: string\n\n  @IsNotEmpty()\n  @IsInt()\n  point: number\n\n  @IsOptional()\n  @IsArray()\n  tags?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bookId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bookId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty } from 'class-validator'\n\nexport class CreateOrderDto {\n  @IsNotEmpty()\n  @IsInt()\n  bookId: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserDto.html":{"url":"classes/EditUserDto.html","title":"class - EditUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/edit-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator'\n\nexport class EditUserDto {\n  @IsEmail()\n  @IsOptional()\n  email?: string\n\n  @IsString()\n  @IsOptional()\n  firstName?: string\n\n  @IsString()\n  @IsOptional()\n  lastName?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Flags.html":{"url":"interfaces/Flags.html","title":"interface - Flags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Flags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generate-typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            w\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        w\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        w:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDefinitionsFactory } from '@nestjs/graphql'\nimport { join } from 'path'\n\ninterface Flags {\n  watch?: boolean\n  w?: boolean\n}\n\n// Function to extract flags from the arguments array\nfunction extractFlags(args) {\n  const flags: Flags = {}\n  let currentFlag = null\n\n  for (const arg of args) {\n    if (arg.startsWith('--')) {\n      // Long flag (e.g., --watch)\n      const flagName = arg.slice(2)\n      flags[flagName] = true\n      currentFlag = flagName\n    } else if (arg.startsWith('-')) {\n      // Short flag (e.g., -w)\n      const flagKeys = arg.slice(1).split('')\n      flagKeys.forEach((key) => {\n        flags[key] = true\n      })\n      currentFlag = arg.slice(-1)\n    } else if (currentFlag) {\n      // Flag value (e.g., --name John)\n      flags[currentFlag] = arg\n      currentFlag = null\n    }\n  }\n\n  return flags\n}\n\nconst args = process.argv.slice(2)\nconst flags: Flags = extractFlags(args)\n\nconsole.log('Flags:', flags)\n\nconst definitionsFactory = new GraphQLDefinitionsFactory()\ndefinitionsFactory.generate({\n  typePaths: ['./src/**/*.graphql'],\n  path: join(process.cwd(), 'src/graphql.ts'),\n  outputAs: 'class',\n  watch: flags.watch || flags.w,\n})\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphqlContext.html":{"url":"classes/GraphqlContext.html","title":"class - GraphqlContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphqlContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                req\n                            \n                            \n                                res\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        req\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RequestWithUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Response\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IMutation.html":{"url":"classes/IMutation.html","title":"class - IMutation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IMutation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SignUpPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IQuery.html":{"url":"classes/IQuery.html","title":"class - IQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me()\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User | Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtGuard.html":{"url":"classes/JwtGuard.html","title":"class - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport'\n\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtConstants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                extractJWTFromCookie\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        extractJWTFromCookie\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractJWTFromCookie(req: RequestType)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            RequestType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { userId: number; email: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { ConfigService } from '@nestjs/config'\nimport { PrismaService } from '../../prisma/prisma.service'\nimport { Request as RequestType } from 'express'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  private jwtConstants: any\n\n  constructor(private config: ConfigService, private prisma: PrismaService) {\n    const mode = config.get('MODE') || 'dev'\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        JwtStrategy.extractJWTFromCookie,\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ]),\n      ignoreExpiration: mode == 'dev' || mode == 'test',\n      secretOrKey: config.get('JWT_SECRET'),\n    })\n  }\n\n  validate(payload: { sub: number; email: string }) {\n    const user = this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    })\n    if (!user) return null //throws the 401 error\n\n    return { userId: payload.sub, email: payload.email }\n    // whatever is returned is appended to req.user\n  }\n  private static extractJWTFromCookie(req: RequestType): string | null {\n    const tokenField = 'token'\n    console.debug(req.cookies)\n    if (req.cookies && tokenField in req.cookies && req.cookies[tokenField].length > 0) {\n      console.log('extracted cookie')\n      return req.cookies.token\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Order {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: number, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateOrderDto: UpdateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                UpdateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common'\nimport { CreateOrderDto } from './dto/create-order.dto'\nimport { OrderService } from './order.service'\nimport { UpdateOrderDto } from './dto/update-order.dto'\nimport { GetUser } from '../auth/decorator'\nimport { JwtGuard } from '../auth/guard'\n\n@UseGuards(JwtGuard)\n@Controller('orders')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  async create(\n    @GetUser('userId') userId: number,\n    @Body() createOrderDto: CreateOrderDto,\n  ) {\n    return this.orderService.create({\n      ...createOrderDto,\n      customerId: userId,\n    })\n  }\n\n  @Get()\n  findAll() {\n    return this.orderService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.orderService.findOne(id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateOrderDto: UpdateOrderDto) {\n    return this.orderService.update(+id, updateOrderDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.orderService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nBookService\n\nBookService\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nBookService->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nUserService\n\nUserService\n\nOrderModule -->\n\nUserService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                        \n                            OrderService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { OrderService } from './order.service'\nimport { OrderController } from './order.controller'\nimport { UserService } from '../user/user.service'\nimport { BookService } from '../book/book.service'\n\n@Module({\n  controllers: [OrderController],\n  providers: [OrderService, UserService, BookService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, userService: UserService, bookService: BookService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookService\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createOrderDto: Prisma.OrderUncheckedCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                Prisma.OrderUncheckedCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateOrderDto: Prisma.OrderUncheckedUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                Prisma.OrderUncheckedUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, NotFoundException } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { Prisma } from '@prisma/client'\nimport { UserService } from '../user/user.service'\nimport { BookService } from '../book/book.service'\n\n@Injectable()\nexport class OrderService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly userService: UserService,\n    private readonly bookService: BookService,\n  ) {}\n\n  async create(createOrderDto: Prisma.OrderUncheckedCreateInput) {\n    const user = await this.userService.findOne(createOrderDto.customerId)\n    if (!user) {\n      throw new ForbiddenException(\"user doesn't exist\")\n    }\n\n    const book = await this.bookService.findOne(createOrderDto.bookId)\n    if (!book) {\n      throw new NotFoundException(\"book: doesn't exist\")\n    }\n\n    if (book.point > user.point)\n      throw new ForbiddenException(\"user doesn't have enough point\")\n\n    const netPoint = user.point - book.point\n\n    console.debug({ netPoint, userPoint: user.point, bookPoint: book.point })\n\n    const transaction = await this.prisma.$transaction([\n      this.prisma.user.update({\n        where: {\n          id: user.id,\n        },\n        data: {\n          point: netPoint,\n        },\n      }),\n      this.prisma.order.create({ data: createOrderDto }),\n    ])\n\n    return transaction.at(-1)\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      where: {},\n    })\n  }\n\n  findOne(id: number) {\n    return this.prisma.order.findUnique({\n      where: {\n        id,\n      },\n    })\n  }\n\n  update(id: number, updateOrderDto: Prisma.OrderUncheckedUpdateInput) {\n    return this.prisma.order.update({\n      where: { id },\n      data: updateOrderDto,\n    })\n  }\n\n  remove(id: number) {\n    return this.prisma.order.delete({\n      where: { id },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaClientExceptionFilter.html":{"url":"classes/PrismaClientExceptionFilter.html","title":"class - PrismaClientExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaClientExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma-client-exception/prisma-client-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n            \n                Implements\n            \n            \n                        GqlExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError, host: ArgumentsHost | GraphQLArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma-client-exception/prisma-client-exception.filter.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost | GraphQLArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpStatus } from '@nestjs/common'\nimport { BaseExceptionFilter } from '@nestjs/core'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\nimport { Prisma } from '@prisma/client'\nimport { Response } from 'express'\nimport { GqlExceptionFilter, GraphQLArgumentsHost } from '@nestjs/graphql'\n\n@Catch(PrismaClientUnknownRequestError, PrismaClientKnownRequestError)\nexport class PrismaClientExceptionFilter\n  extends BaseExceptionFilter\n  implements GqlExceptionFilter\n{\n  catch(\n    exception: Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError,\n    host: ArgumentsHost | GraphQLArgumentsHost,\n  ) {\n    console.error(exception.message)\n    const ctx = host.switchToHttp()\n    const response = ctx.getResponse()\n    // const message = exception.message.replace(/\\n/g, '')\n    const message = exception.message\n    switch (exception.code) {\n      case 'P2002': {\n        // https://www.prisma.io/docs/reference/api-reference/error-reference\n        // unique constraint failed\n        // const status = HttpStatus.CONFLICT\n        const payload = {\n          statusCode: HttpStatus.BAD_REQUEST,\n          message: 'DB_ERROR:Unique input fields required',\n          error: message, // You can customize the error message based on your needs\n        }\n\n        console.error('DB:caught P2002 error')\n        response.status(HttpStatus.CONFLICT).json(payload) //FIXME\n        break\n      }\n      default:\n        // default 500 error code\n        // super.catch(exception, host)\n        console.error('DB Error:', exception.code)\n        response.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n          statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n          message: 'Database Error',\n          error: message, // You can customize the error message based on your needs\n        })\n        break\n    }\n  }\n}\n// https://www.prisma.io/blog/nestjs-prisma-error-handling-7D056s1kOop2\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common'\nimport { PrismaService } from './prisma.service'\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDb\n                            \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDb\n                        \n                    \n                \n            \n            \n                \ncleanDb()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common'\nimport { Prisma, PrismaClient } from '@prisma/client'\nimport { ConfigService } from '@nestjs/config'\nimport kleur from 'kleur'\nimport { format } from 'sql-formatter'\n\nconst logEvents: Prisma.LogDefinition[] = [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n\nlet DB_CONNECTED = false\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  // FIXME doesn't work for e2e OnModuleDestroy{\n  // https://docs.nestjs.com/fundamentals/lifecycle-events\n\n  constructor(config: ConfigService) {\n    const sslcert = '?sslcert=root.crt'\n    //https://www.prisma.io/docs/concepts/database-connectors/postgresql#configuring-an-ssl-connection\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL') + sslcert,\n        },\n      },\n      log: logEvents,\n    })\n\n    process.env.FORCE_COLOR = 'true'\n\n    // @ts-ignore\n    this.$on('query', async (e: any) => {\n      if (config.get('MODE') != 'dev') {\n        return\n      }\n\n      // const chalk = await import('chalk')\n      // console.log(chalk.yellow('Query: ') + chalk.green(e.query))\n      // console.log(chalk.yellow('Params: ') + chalk.cyan(JSON.stringify(e.params)))\n      // console.log(chalk.yellow('Duration: ') + chalk.magenta(`${e.duration}ms`))\n      const query = e.query\n\n      const formattedQuery = format(query, {\n        language: 'postgresql',\n        tabWidth: 2,\n        keywordCase: 'upper',\n        linesBetweenQueries: 2,\n        params: e.params || [],\n      })\n      console.log(kleur.yellow('Query: ') + kleur.green(formattedQuery))\n      console.log(kleur.yellow('Params: ') + kleur.cyan(JSON.stringify(e.params)))\n      console.log(kleur.yellow('Duration: ') + kleur.magenta(`${e.duration}ms`))\n    })\n  }\n  async onModuleInit() {\n    if (DB_CONNECTED) return\n\n    console.info(new Date(), 'connecting to the database')\n    await this.$connect()\n    await this.$executeRawUnsafe(\"SET timezone = 'Asia/Kolkata'\")\n\n    DB_CONNECTED = true\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    // @ts-ignore\n    this.$on('beforeExit', async () => {\n      await app.close()\n    })\n  }\n\n  cleanDb() {\n    return this.$transaction([\n      //tear down logic\n      this.user.deleteMany(),\n      this.book.deleteMany(),\n      this.order.deleteMany(),\n    ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestWithUser.html":{"url":"classes/RequestWithUser.html","title":"class - RequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceStatus.html":{"url":"classes/ServiceStatus.html","title":"class - ServiceStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ok: boolean, status: string, debug: any)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ok\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        debug\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OK'\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpPayload.html":{"url":"classes/SignUpPayload.html","title":"class - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/update-book.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateBookDto } from './create-book.dto'\n\nexport class UpdateBookDto extends PartialType(CreateBookDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/update-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                bookId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        bookId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/update-order.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateOrderDto } from './create-order.dto'\nimport { IsInt, IsOptional } from 'class-validator'\n\nexport class UpdateOrderDto extends PartialType(CreateOrderDto) {\n  @IsOptional()\n  @IsInt()\n  bookId?: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                hash\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                editUser\n                            \n                            \n                                    \n                                    \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Patch()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Injectable,\n  Patch,\n  UseGuards,\n} from '@nestjs/common'\nimport { JwtGuard } from '../auth/guard'\nimport { GetUser } from '../auth/decorator'\nimport { User } from '@prisma/client'\nimport { EditUserDto } from './dto'\nimport { UserService } from './user.service'\n\n@Injectable()\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtGuard)\n  @Get('me')\n  getMe(@GetUser() user: User) {\n    return user\n  }\n\n  @UseGuards(JwtGuard)\n  @Patch()\n  editUser(@GetUser('userId') userId: number, @Body() dto: EditUserDto) {\n    //needs service\n    // we will get something in api request due to whitelist:true\n    return this.userService.editUser(userId, dto)\n  }\n\n  @UseGuards(JwtGuard)\n  @Delete()\n  async deleteUser(@GetUser('userId') userId: number) {\n    return {\n      message: 'user deleted',\n      user: await this.userService.deleteUser(userId),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserController\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserController } from './user.controller'\nimport { UserService } from './user.service'\nimport { AuthModule } from '../auth/auth.module'\nimport { PrismaModule } from '../prisma/prisma.module'\nimport { UserResolver } from './user.resolver'\n\n@Module({\n  imports: [AuthModule, PrismaModule],\n  controllers: [UserController],\n  providers: [UserService, UserController, UserResolver],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, userService: UserService, userController: UserController)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userController\n                                                  \n                                                        \n                                                                        UserController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { UserService } from './user.service'\nimport { UserController } from './user.controller'\nimport { GetUserGraphql } from '../auth/decorator'\nimport { User } from '@prisma/client'\n\n@Resolver('User')\nexport class UserResolver {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly userService: UserService,\n    private readonly userController: UserController,\n  ) {}\n\n  @Query('me')\n  me(@GetUserGraphql() user: User) {\n    return this.userController.getMe(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { EditUserDto } from './dto'\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  findOne(userId: number) {\n    return this.prisma.user.findUnique({\n      where: {\n        id: userId,\n      },\n    })\n  }\n\n  async editUser(userId: number, dto: EditUserDto) {\n    console.log({ userId, dto })\n    const user = await this.prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: {\n        ...dto,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n\n  async deleteUser(userId: number) {\n    const user = await this.prisma.user.delete({\n      where: {\n        id: userId,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            GraphqlContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            RequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            class\n            ServiceStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUserGraphql\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            class\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/book/book.controller.ts\n            \n            controller\n            BookController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/book/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/book/entities/book.entity.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            interface\n            Flags\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            function\n            extractFlags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            args\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            definitionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            flags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IMutation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            SignUpPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/order/dto/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/prisma-client-exception/prisma-client-exception.filter.ts\n            \n            class\n            PrismaClientExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            DB_CONNECTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            logEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/edit-user.dto.ts\n            \n            class\n            EditUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            injectable\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.7.5\n        \n            @nestjs/apollo : ^12.0.7\n        \n            @nestjs/cache-manager : ^2.0.1\n        \n            @nestjs/common : ^10.0.5\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.5\n        \n            @nestjs/graphql : ^12.0.8\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.5\n        \n            @solana/web3.js : ^1.78.0\n        \n            argon2 : ^0.30.3\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            graphql : 16.7.1\n        \n            graphql-iso-date : ^3.6.1\n        \n            graphql-subscriptions : 2.0.0\n        \n            graphql-tools : ^9.0.0\n        \n            joi : ^17.9.2\n        \n            kleur : ^4.1.5\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-nestjs-graphql : ^18.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : 7.8.1\n        \n            sql-formatter : ^12.2.3\n        \n            ts-morph : ^19.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            extractFlags   (src/.../generate-typings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractFlags\n                        \n                    \n                \n            \n            \n                \nextractFlags(args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\napi.bookstore.nas\nDescription\nAPI Server built using , TypeScript, Prisma, Graphql and PostgreSQL.\nBuilt with ❤️on top of\n\n Typescript\n NestJS\n Prisma\n Passport.js\n Graphql:Schema First\n PostgreSQL\n\nFunctional specs\nAPI allows authenticated to users to create and manage orders\n\nUser SignUp & SignIn\nCRUD Orders\nInspect Items\n\nTechnical methodologies followed\n\nModular architecture: Business Logic & Auth handled in separate modules, separating\nconcerns.\nHTTP requests are handled by Controllers\n API documentation using nest/swagger module \nBusiness logic is implemented in Services\nDatabase interactions are handled using Prisma\nValidation using NestJS Pipes\nData Transfer Object(DTO) pattern for transferring data between layers\nConfiguration management using .env files for development, test & prod configs\nAuthentication / Authorization, Event ownership by users\nPassportJS, JWT tokens, Password hashing, salts\nUnit tests using Jest\nSupertest for E2E testing\n\nTechnical documentation using Compodoc\nAs NestJS is heavily inspired by Angular, we can generate the documentation about project\nstructure modules, controllers, services etc. I have generated the docs.\nFind 'em here - https://jsFame.github.io/api.bookstore.nas/\nInstallation\nnpm install -g pnpm\npnpm installRunning the app\nPrerequisite for running the app in any mode - dev/test/prod\n\nCopy .env.example with .env\nFill in the env vars in .env\n\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covLicense\nThis repo is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Hiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\nOrderModule -->\n\nBookService->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nUserService\n\nUserService\n\nOrderModule -->\n\nUserService->OrderModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    21 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : Web2 backend of bookstore.nas\n        \n            Homepage : https://github.com/jsFame/api.bookstore.nas\n        \n            Bugs : https://github.com/jsFame/api.bookstore.nas/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/jsFame/api.bookstore.nas\n        \n            Author : laciferin@gmail.com\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateTime   (src/.../graphql.ts)\n                        \n                        \n                            Nullable   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            args   (src/.../generate-typings.ts)\n                        \n                        \n                            DB_CONNECTED   (src/.../prisma.service.ts)\n                        \n                        \n                            definitionsFactory   (src/.../generate-typings.ts)\n                        \n                        \n                            envFile   (src/.../app.module.ts)\n                        \n                        \n                            flags   (src/.../generate-typings.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            GetUserGraphql   (src/.../get-user.decorator.ts)\n                        \n                        \n                            logEvents   (src/.../prisma.service.ts)\n                        \n                        \n                            mode   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        args\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.argv.slice(2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        definitionsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLDefinitionsFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Flags\n\n                    \n                \n                \n                    \n                        Default value : extractFlags(args)\n                    \n                \n\n\n        \n    \n\n    src/prisma/prisma.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.LogDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.env'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MODE\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest()\n\n    if (data) return request.user[data]\n\n    return request.user\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetUserGraphql\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, context: ExecutionContext) => {\n    const ctx: GraphqlContext = GqlExecutionContext.create(context).getContext()\n\n    const { user } = ctx.req\n\n    if (data) return user[data]\n\n    return user\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
