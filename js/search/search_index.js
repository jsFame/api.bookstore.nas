var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.629,1,2.16]],["body/controllers/AppController.html",[0,2.349,1,3.114,2,1.639,3,0.348,4,0.391,5,0.348,6,3.028,7,0.437,8,1.845,9,4.154,10,4.154,11,2.563,12,0.029,13,3.607,14,0.918,15,3.607,16,1.845,17,3.607,18,3.607,19,0.864,20,3.607,21,1.032,22,2.629,23,3.028,24,3.607,25,3.607,26,3.607,27,2.646,28,2.646,29,3.607,30,0.437,31,0.071,32,1.781,33,2.36,34,3.607,35,3.607,36,2.36,37,2.646,38,3.607,39,1.584,40,3.607,41,3.607,42,2.646,43,3.607,44,3.607,45,0.021,46,0.021]],["title/modules/AppModule.html",[47,1.28,48,2.16]],["body/modules/AppModule.html",[1,2.558,2,1.455,3,0.2,4,0.225,5,0.2,12,0.03,19,0.97,21,0.595,22,2.475,23,1.744,27,1.524,28,1.524,30,0.252,31,0.041,36,1.36,42,1.524,45,0.014,46,0.014,47,1.516,48,3.822,49,0.944,50,1.026,51,1.229,52,1.229,53,1.026,54,2.311,55,1.229,56,1.744,57,1.744,58,1.744,59,2.701,60,2.475,61,2.965,62,1.894,63,1.229,64,1.119,65,1.524,66,2.35,67,2.078,68,1.119,69,1.744,70,2.689,71,2.078,72,2.078,73,1.36,74,3.204,75,1.744,76,2.078,77,2.078,78,2.078,79,2.875,80,3.204,81,3.204,82,1.744,83,1.524,84,3.204,85,2.078,86,1.744,87,2.078,88,1.581,89,1.744,90,2.078,91,1.524,92,2.806,93,1.744,94,3.678,95,2.35,96,2.078,97,3.204,98,1.524,99,2.078,100,3.91,101,1.744,102,3.204,103,2.689,104,1.744,105,2.078,106,1.524,107,1.744,108,2.078,109,1.744,110,2.078,111,2.078,112,3.204,113,2.343,114,1.744,115,2.078,116,2.078,117,2.078,118,2.078,119,2.078,120,2.078,121,2.078,122,2.078,123,2.078,124,2.078,125,2.078,126,2.078,127,2.689,128,2.078,129,2.078,130,1.744,131,1.894,132,1.894,133,2.078,134,1.744,135,2.078,136,2.078,137,2.078,138,2.078,139,1.894,140,2.078,141,1.744,142,2.078,143,2.078,144,1.744,145,2.078,146,1.119,147,2.689,148,3.204,149,2.078]],["title/injectables/AppService.html",[22,1.629,150,1.099]],["body/injectables/AppService.html",[3,0.281,4,0.317,5,0.281,7,0.353,8,1.596,9,3.801,10,3.801,12,0.03,14,0.92,16,1.596,19,0.668,21,0.835,22,2.032,30,0.353,31,0.082,32,1.44,33,1.909,39,1.37,45,0.018,46,0.018,113,1.44,139,1.725,150,1.37,151,1.572,152,2.14,153,2.355,154,1.87,155,2.14,156,2.009,157,2.918,158,1.048,159,0.971,160,0.432,161,0.901,162,2.167,163,2.918,164,1.909,165,2.918,166,3.02,167,1.479,168,1.725,169,3.122,170,4.004,171,3.456,172,2.14,173,2.449,174,2.449,175,2.14,176,2.694,177,2.449,178,2.14,179,3.456,180,2.218,181,1.44,182,2.449,183,2.449,184,2.449,185,2.449,186,2.449,187,2.449,188,2.14,189,2.694,190,3.456,191,2.14,192,3.456,193,2.449,194,2.449,195,2.449,196,2.14]],["title/controllers/AuthController.html",[0,1.629,197,1.951]],["body/controllers/AuthController.html",[0,1.16,2,1.068,3,0.227,4,0.255,5,0.227,7,0.285,8,1.364,11,1.895,12,0.03,14,0.679,16,1.364,19,0.813,21,0.673,30,0.285,31,0.047,32,1.16,37,1.724,39,0.782,42,2.581,45,0.015,46,0.015,68,1.266,113,2.692,127,2.953,132,2.963,134,3.539,153,2.081,158,1.263,159,1.171,160,0.52,161,1.086,181,1.16,197,2.08,198,1.973,199,1.973,200,1.973,201,2.493,202,2.08,203,1.724,204,2.937,205,3.063,206,2.351,207,2.351,208,2.963,209,1.724,210,3.519,211,2.351,212,1.973,213,2.351,214,2.351,215,2.351,216,2.081,217,1.724,218,1.16,219,2.302,220,2.351,221,1.538,222,1.538,223,2.351,224,2.351,225,2.351,226,2.351,227,2.351,228,1.737,229,1.973,230,2.351,231,2.351,232,1.973,233,3.539,234,3.519,235,3.676,236,2.351,237,1.973,238,1.973,239,3.519,240,3.519,241,1.973,242,1.973,243,3.519,244,2.351,245,2.351,246,2.351,247,2.351,248,3.519,249,2.351,250,2.351,251,2.351,252,1.973,253,3.519,254,2.351,255,2.351,256,2.351,257,3.519,258,1.973,259,2.351,260,2.351,261,3.519,262,2.351,263,1.724,264,2.351,265,2.351,266,2.351,267,2.351,268,2.351,269,2.351,270,2.351,271,2.351,272,1.973,273,2.351]],["title/classes/AuthDto.html",[31,0.065,204,1.778]],["body/classes/AuthDto.html",[3,0.392,4,0.441,5,0.392,7,0.492,11,2.769,12,0.029,14,0.992,19,0.659,30,0.492,31,0.102,45,0.023,46,0.023,160,0.76,167,2.127,204,2.769,274,1.353,275,3.411,276,1.586,277,2.561,278,3.037,279,4.064,280,4.064,281,4.064,282,4.064,283,4.314,284,5.638,285,5.14,286,2.981]],["title/classes/AuthInput.html",[31,0.065,287,1.629]],["body/classes/AuthInput.html",[3,0.346,4,0.39,5,0.346,7,0.435,12,0.029,14,0.916,30,0.712,31,0.112,45,0.021,46,0.021,146,2.863,160,0.836,167,2.169,274,1.196,276,1.465,277,2.568,278,2.863,287,2.791,288,1.774,289,3.594,290,3.594,291,2.557,292,2.124,293,2.557,294,1.774,295,1.29,296,2.124,297,2.124,298,3.478,299,1.936,300,2.351,301,3.106,302,2.351,303,2.124,304,2.124,305,1.774]],["title/modules/AuthModule.html",[47,1.28,59,1.778]],["body/modules/AuthModule.html",[2,2.097,3,0.332,4,0.374,5,0.332,12,0.029,19,0.968,21,0.986,30,0.417,31,0.068,45,0.02,46,0.02,47,2.019,49,1.566,50,1.701,51,2.038,52,2.038,53,1.701,54,3.078,55,2.038,59,3.415,60,2.946,62,2.73,63,2.038,64,1.857,66,3.387,91,2.528,197,3.078,216,2.946,217,2.528,306,2.893,307,3.447,308,2.893,309,3.529,310,3.447,311,2.893,312,3.447,313,2.528,314,2.893,315,3.447]],["title/classes/AuthPayload.html",[31,0.065,291,1.778]],["body/classes/AuthPayload.html",[3,0.356,4,0.401,5,0.356,7,0.447,12,0.029,14,0.713,30,0.718,31,0.113,45,0.021,46,0.021,146,2.902,160,0.797,167,2.13,274,1.229,276,1.492,277,2.195,278,1.989,287,2.659,288,1.823,291,2.902,292,3.185,293,2.603,294,1.823,295,1.326,296,2.183,297,2.183,298,3.525,299,1.989,300,2.417,301,3.163,302,2.417,303,2.183,304,2.183,305,1.823,316,3.693]],["title/classes/AuthResolver.html",[31,0.065,317,2.421]],["body/classes/AuthResolver.html",[3,0.291,4,0.328,5,0.291,7,0.366,8,1.636,11,2.273,12,0.029,14,0.938,16,1.636,19,0.93,30,0.366,31,0.06,33,2.761,39,1.405,45,0.019,46,0.019,73,1.977,79,1.977,88,2.598,89,2.536,109,2.536,130,3.542,154,1.917,158,1.746,159,1.619,160,0.719,161,1.501,197,3.48,201,2.495,202,2.495,203,2.216,204,3.171,208,3.391,209,2.216,216,2.831,217,2.216,221,2.761,274,1.006,287,2.4,311,2.536,317,3.095,318,2.536,319,3.022,320,3.022,321,4.081,322,4.22,323,3.022,324,4.22,325,3.022,326,1.787,327,3.022,328,3.022,329,3.022,330,3.022,331,3.022,332,3.022,333,3.022,334,3.022,335,3.022]],["title/injectables/AuthService.html",[150,1.099,216,1.629]],["body/injectables/AuthService.html",[3,0.197,4,0.222,5,0.197,7,0.247,8,1.225,12,0.03,14,0.84,16,1.499,19,0.842,21,0.584,30,0.247,31,0.04,39,1.287,45,0.014,46,0.014,68,1.1,113,2.149,150,1.052,151,1.1,153,2.719,154,1.435,155,1.497,156,1.688,158,1.563,159,1.449,160,0.644,161,1.343,162,1.435,164,2.53,167,1.388,168,1.207,180,2.083,181,2.324,188,1.497,201,1.868,202,1.868,203,2.318,204,2.797,208,2.286,209,2.318,216,1.56,219,2.848,221,2.53,222,2.53,228,2.458,232,2.652,233,1.713,272,1.713,277,2.359,292,1.207,294,1.008,295,1.388,296,1.207,297,1.207,313,1.497,336,1.713,337,3.16,338,2.53,339,4.353,340,2.042,341,2.042,342,3.16,343,2.042,344,2.068,345,2.042,346,2.042,347,2.042,348,1.713,349,3.16,350,3.16,351,2.042,352,3.867,353,2.042,354,2.042,355,1.688,356,2.042,357,1.207,358,2.042,359,1.713,360,1.713,361,2.042,362,2.042,363,2.848,364,2.042,365,3.16,366,2.042,367,2.042,368,4.353,369,2.042,370,2.042,371,1.713,372,2.042,373,3.16,374,3.16,375,2.042,376,2.042,377,2.042,378,2.042,379,2.042,380,1.713,381,1.713,382,3.867,383,2.042,384,2.042,385,2.042]],["title/classes/EditUserDto.html",[31,0.065,386,1.951]],["body/classes/EditUserDto.html",[3,0.357,4,0.402,5,0.357,7,0.449,11,2.908,12,0.028,14,1.041,19,0.601,30,0.449,31,0.096,45,0.021,46,0.021,160,0.798,161,1.88,167,2.188,274,1.234,276,1.496,277,2.452,283,4.067,286,2.719,386,2.865,387,4.804,388,3.112,389,5.398,390,5.398,391,3.708,392,3.708,393,4.846,394,3.708,395,3.708,396,5.724,397,5.398]],["title/interfaces/Flags.html",[398,1.629,399,2.16]],["body/interfaces/Flags.html",[3,0.266,4,0.3,5,0.266,7,0.334,12,0.03,19,0.642,31,0.055,37,2.026,39,0.919,45,0.017,46,0.017,73,1.807,113,1.955,144,2.318,159,0.919,160,0.586,161,1.56,172,4.085,180,1.488,228,2.832,238,3.885,241,3.323,263,2.904,276,1.222,288,1.363,305,1.955,326,2.341,398,1.363,399,3.91,400,2.026,401,1.807,402,1.807,403,5.353,404,4.675,405,3.323,406,2.762,407,2.762,408,2.762,409,2.762,410,2.904,411,5.353,412,3.96,413,3.96,414,2.762,415,4.629,416,3.96,417,2.762,418,2.762,419,2.762,420,2.762,421,2.762,422,2.762,423,2.762,424,2.762,425,2.026,426,2.762,427,2.762,428,2.318,429,2.762,430,2.026,431,2.762,432,2.762,433,2.762,434,2.762,435,2.762,436,2.762]],["title/classes/GraphqlContext.html",[31,0.065,88,1.629]],["body/classes/GraphqlContext.html",[3,0.387,4,0.435,5,0.387,7,0.486,12,0.029,14,0.983,19,0.651,30,0.617,31,0.101,45,0.022,46,0.022,88,2.516,131,3.313,132,3.313,160,0.754,205,3.667,218,1.98,274,1.335,276,1.573,295,1.44,355,2.173,398,1.98,437,2.625,438,3.313,439,4.011,440,4.011,441,2.746,442,2.942,443,2.161]],["title/classes/IMutation.html",[31,0.065,299,1.778]],["body/classes/IMutation.html",[3,0.315,4,0.354,5,0.315,7,0.395,8,1.726,12,0.029,14,0.859,16,1.726,30,0.689,31,0.108,45,0.02,46,0.02,146,2.728,158,1.599,159,1.482,160,0.805,161,1.374,167,1.953,201,2.632,202,2.632,274,1.087,277,2.022,278,1.759,287,2.967,288,1.612,291,2.728,292,1.931,293,2.728,294,1.612,295,1.173,296,1.931,297,1.931,298,3.934,299,2.398,300,2.913,301,3.56,302,2.913,303,1.931,304,1.931,305,1.612,357,2.632,444,3.266,445,3.266]],["title/classes/JwtGuard.html",[31,0.065,446,2.16]],["body/classes/JwtGuard.html",[3,0.438,4,0.493,5,0.438,12,0.029,14,0.876,19,0.736,30,0.55,31,0.09,45,0.024,46,0.024,154,2.691,274,1.511,443,2.445,446,3.602,447,3.81,448,4.539,449,4.539,450,3.329,451,4.539,452,3.329]],["title/injectables/JwtStrategy.html",[150,1.099,309,1.951]],["body/injectables/JwtStrategy.html",[3,0.224,4,0.253,5,0.224,7,0.282,8,1.354,12,0.03,14,0.899,16,1.354,19,0.85,21,0.666,30,0.282,31,0.046,32,1.149,39,1.55,45,0.015,46,0.015,68,1.254,92,2.478,98,1.707,106,2.561,131,1.376,150,1.162,151,1.254,154,1.057,156,1.806,158,1.505,159,1.395,160,0.775,161,1.294,162,1.904,167,1.673,168,1.376,218,1.149,219,3.048,221,3.557,222,2.285,228,2.069,229,1.953,235,1.707,258,2.931,276,1.078,277,1.904,294,1.149,295,1.254,305,2.299,309,2.065,314,1.953,338,2.285,344,2.285,355,1.354,363,1.523,371,1.953,380,1.953,381,1.953,441,1.254,443,1.254,450,1.707,452,1.707,453,1.953,454,4.192,455,4.192,456,3.492,457,3.492,458,1.953,459,3.492,460,3.492,461,4.658,462,2.327,463,3.492,464,3.492,465,2.327,466,2.327,467,2.327,468,1.953,469,2.327,470,1.953,471,2.327,472,2.327,473,2.327,474,2.327,475,2.327,476,2.327,477,2.327,478,3.492,479,2.327,480,2.327,481,2.327,482,2.327,483,2.327,484,2.327,485,2.327,486,3.492,487,2.327,488,2.327,489,1.953,490,2.327,491,2.327]],["title/modules/PrismaModule.html",[47,1.28,60,1.629]],["body/modules/PrismaModule.html",[3,0.382,4,0.43,5,0.382,12,0.027,19,0.82,21,1.133,30,0.48,31,0.078,45,0.022,46,0.022,47,2.16,49,1.799,50,1.955,51,2.341,52,2.341,53,1.955,54,3.293,55,3.293,60,3.111,62,2.989,63,2.341,64,2.133,156,2.548,492,3.324,493,3.324,494,3.324,495,3.96,496,5.056,497,3.96]],["title/injectables/PrismaService.html",[150,1.099,156,1.28]],["body/injectables/PrismaService.html",[3,0.303,4,0.22,5,0.196,7,0.246,8,1.219,12,0.03,14,0.837,16,1.493,19,0.761,21,0.58,30,0.246,31,0.04,39,1.282,45,0.014,46,0.014,68,1.092,83,1.488,106,1.488,113,1.552,139,1.199,150,1.047,151,1.092,153,2.643,154,0.921,156,1.219,158,1.129,159,1.047,160,0.465,161,0.97,162,0.921,176,1.327,181,2.141,189,1.327,196,1.488,219,2.838,222,1.327,228,2.317,359,1.702,363,1.327,443,1.694,452,1.488,458,2.639,470,1.702,498,1.488,499,3.851,500,4.338,501,3.144,502,4.966,503,2.028,504,2.028,505,3.144,506,4.338,507,2.028,508,2.028,509,1.702,510,2.639,511,2.028,512,1.702,513,1.702,514,2.306,515,1.702,516,3.641,517,1.327,518,3.641,519,2.639,520,3.232,521,1.702,522,2.824,523,2.028,524,2.028,525,2.028,526,1.702,527,2.028,528,2.028,529,2.028,530,3.144,531,2.028,532,2.028,533,2.028,534,2.028,535,2.028,536,2.028,537,2.028,538,2.028,539,2.028,540,2.639,541,3.144,542,2.028,543,2.028,544,2.028,545,2.028,546,2.028,547,2.028,548,2.028,549,2.028,550,2.028,551,2.028,552,2.028,553,2.028,554,2.028,555,2.028,556,1.702,557,2.028,558,2.639,559,2.028,560,2.028,561,2.028,562,2.028,563,2.028,564,2.028,565,2.028,566,2.028,567,2.028,568,2.028,569,2.028,570,2.028,571,2.028,572,1.702,573,2.028,574,2.028,575,2.028,576,2.028,577,2.028,578,2.028,579,2.028,580,2.028,581,2.028,582,1.702,583,2.028]],["title/classes/RequestWithUser.html",[31,0.065,438,1.951]],["body/classes/RequestWithUser.html",[3,0.395,4,0.445,5,0.395,7,0.496,12,0.029,14,0.791,19,0.665,30,0.626,31,0.102,45,0.023,46,0.023,88,2.024,131,2.424,132,2.424,160,0.606,205,3.382,218,2.024,274,1.365,276,1.595,295,1.472,355,2.426,398,2.024,437,2.683,438,3.346,441,3.049,442,3.007,443,2.784,584,4.1]],["title/classes/ServiceStatus.html",[31,0.065,169,2.16]],["body/classes/ServiceStatus.html",[3,0.262,4,0.295,5,0.262,7,0.33,9,1.996,10,1.996,12,0.03,14,0.969,19,0.636,21,0.779,22,1.343,30,0.33,31,0.078,32,1.343,33,1.781,36,3.004,39,1.304,45,0.017,46,0.017,113,1.934,139,1.609,150,1.304,152,1.996,153,1.343,154,1.78,156,1.519,158,0.977,159,0.906,160,0.743,161,0.84,162,1.78,166,1.996,167,1.803,168,1.609,169,3.286,170,4.997,171,4.652,172,3.683,173,4.467,174,4.467,175,2.874,176,2.564,177,2.284,178,1.996,179,3.289,180,2.11,181,1.343,182,2.284,183,2.284,184,2.284,185,2.284,186,2.284,187,2.284,188,1.996,189,2.564,190,3.289,191,1.996,192,3.289,193,2.284,194,2.284,195,2.284,196,1.996,274,0.906,276,1.209,425,3.367,585,2.722,586,2.722,587,2.722,588,2.722,589,2.722]],["title/classes/SignUpPayload.html",[31,0.065,293,1.778]],["body/classes/SignUpPayload.html",[3,0.329,4,0.37,5,0.329,7,0.413,12,0.029,14,1.068,30,0.7,31,0.11,45,0.02,46,0.02,146,3.112,160,0.88,167,2.075,274,1.135,276,1.415,277,2.515,278,1.836,287,2.556,288,1.683,291,2.469,292,2.016,293,2.789,294,2.556,295,1.646,296,3.061,297,3.061,298,3.388,299,1.836,300,2.231,301,2.999,302,2.231,303,2.016,304,2.016,305,1.683,590,3.409,591,3.409,592,3.409,593,3.409]],["title/interfaces/User.html",[355,1.28,398,1.629]],["body/interfaces/User.html",[3,0.399,4,0.449,5,0.399,7,0.501,12,0.029,19,0.671,30,0.629,31,0.103,45,0.023,46,0.023,88,2.042,131,2.445,132,2.445,160,0.612,205,3.401,218,2.042,276,1.604,295,2.041,355,2.312,398,2.042,400,3.033,437,2.706,438,3.073,441,2.799,442,4.373,443,2.228]],["title/controllers/UserController.html",[0,1.629,594,2.16]],["body/controllers/UserController.html",[0,1.388,2,1.277,3,0.271,4,0.305,5,0.271,7,0.341,8,1.555,11,2.518,12,0.029,14,0.902,16,1.813,19,0.909,21,0.805,30,0.341,31,0.056,32,1.388,39,1.556,45,0.018,46,0.018,153,2.308,158,1.679,159,1.556,160,0.691,161,1.443,164,1.84,166,2.063,181,1.388,191,2.063,199,2.36,208,3.186,212,3.366,295,2.012,344,3.336,355,2.36,386,3.014,441,1.515,446,1.84,509,2.36,594,2.625,595,2.36,596,2.36,597,3.366,598,3.366,599,4.011,600,2.36,601,2.812,602,2.812,603,2.36,604,2.812,605,2.812,606,2.812,607,2.812,608,2.812,609,3.366,610,4.011,611,2.812,612,2.812,613,2.063,614,2.812,615,2.518,616,2.36,617,2.812,618,4.676,619,2.812,620,2.812,621,2.812,622,2.812,623,2.812,624,2.812,625,2.36,626,2.812,627,2.812,628,2.812,629,2.812,630,2.812]],["title/modules/UserModule.html",[47,1.28,61,1.951]],["body/modules/UserModule.html",[2,2.184,3,0.353,4,0.398,5,0.353,12,0.027,19,0.96,21,1.048,30,0.444,31,0.073,45,0.021,46,0.021,47,2.081,49,1.664,50,1.809,51,2.166,52,2.166,53,1.809,54,3.173,55,2.166,59,3.271,60,2.997,61,3.789,62,2.843,63,2.166,64,1.974,66,3.526,69,3.075,91,2.687,594,3.512,615,3.271,616,3.075,631,3.075,632,3.664,633,3.075,634,3.664,635,3.664]],["title/injectables/UserService.html",[150,1.099,615,1.778]],["body/injectables/UserService.html",[3,0.292,4,0.329,5,0.292,7,0.367,8,1.64,12,0.029,14,0.94,16,1.64,19,0.79,21,0.868,30,0.367,31,0.06,32,1.497,39,1.408,45,0.019,46,0.019,150,1.408,151,1.633,153,2.834,154,1.377,155,2.224,156,2.044,158,1.749,159,1.621,160,0.72,161,1.503,162,1.921,164,2.768,168,1.792,181,2.088,208,3.394,228,2.088,294,2.088,295,2.062,344,3.627,355,2.044,357,1.792,386,3.116,597,3.55,598,3.55,600,3.55,603,3.55,609,3.55,615,2.278,636,2.545,637,3.032,638,3.032,639,3.032,640,3.032,641,3.032,642,4.23,643,3.032]],["title/coverage.html",[644,3.289]],["body/coverage.html",[0,2.13,1,1.599,5,0.236,6,2.051,12,0.029,22,1.206,31,0.118,45,0.016,46,0.016,53,1.206,65,2.656,88,1.206,92,1.444,94,1.792,150,1.696,152,2.656,156,0.947,160,0.361,169,1.599,180,1.316,197,1.444,198,2.051,204,1.316,216,1.206,263,2.656,275,2.051,287,1.206,288,2.355,291,1.316,293,1.316,299,1.316,309,1.444,317,1.792,318,2.051,326,1.444,336,2.051,355,0.947,386,1.444,387,2.051,388,2.051,398,1.787,399,2.369,401,3.334,402,3.334,430,1.792,437,2.823,438,1.444,446,1.599,447,2.051,453,2.051,489,5.536,498,3.164,514,1.792,522,1.792,594,1.599,595,2.051,613,1.792,615,1.316,636,2.051,644,1.792,645,1.792,646,2.443,647,2.443,648,5.523,649,4.771,650,5.672,651,5.894,652,5.095,653,5.095,654,2.051,655,2.051,656,2.051,657,2.051,658,2.443,659,2.443]],["title/dependencies.html",[50,1.957,660,2.322]],["body/dependencies.html",[12,0.03,21,0.918,27,2.354,28,3.227,31,0.087,45,0.019,46,0.019,50,1.584,68,1.729,70,2.694,73,2.1,75,2.694,79,3.702,82,2.694,83,2.354,86,2.694,114,2.694,147,2.694,162,1.458,218,1.584,235,2.354,286,2.354,313,2.354,338,2.1,348,2.694,450,2.354,468,3.692,510,2.694,512,2.694,513,2.694,540,2.694,661,3.21,662,3.21,663,3.21,664,5.02,665,3.21,666,3.21,667,3.21,668,3.21,669,3.21,670,3.21,671,3.21,672,3.21,673,3.21,674,3.21,675,3.21,676,3.21,677,3.21,678,3.21,679,3.21,680,3.21,681,3.21,682,3.21,683,3.21,684,3.21,685,3.21,686,3.21,687,3.21,688,3.21,689,3.21,690,3.21,691,3.21,692,3.21,693,3.21,694,2.694,695,3.21,696,3.21,697,3.21,698,3.21,699,3.21,700,3.21,701,3.21,702,3.21,703,3.21]],["title/miscellaneous/functions.html",[704,1.49,705,3.327]],["body/miscellaneous/functions.html",[7,0.566,12,0.026,45,0.025,46,0.025,53,2.962,158,1.679,159,1.556,161,1.443,326,2.764,401,3.06,402,3.667,410,3.429,656,4.703,657,3.925,704,2.519,705,3.925,706,4.676,707,3.925]],["title/index.html",[7,0.335,708,2.322,709,2.322]],["body/index.html",[2,1.664,12,0.028,45,0.016,46,0.016,47,0.962,49,1.664,79,1.624,92,2.574,95,3.526,98,3.194,101,2.083,103,2.083,104,2.083,107,3.075,141,2.083,162,1.978,176,2.397,178,1.821,200,2.083,201,1.468,202,1.468,237,2.083,242,2.083,252,2.083,278,1.337,338,1.624,355,0.962,357,2.166,404,2.083,517,1.624,526,3.075,556,3.075,572,2.083,582,3.075,596,3.075,625,3.655,644,1.821,645,3.194,694,3.655,710,2.482,711,2.083,712,2.482,713,3.664,714,5.551,715,3.664,716,2.482,717,2.482,718,2.482,719,2.482,720,2.482,721,2.482,722,2.482,723,2.482,724,2.482,725,3.664,726,2.482,727,2.482,728,2.482,729,3.664,730,2.482,731,2.482,732,2.482,733,2.482,734,3.664,735,4.355,736,2.482,737,2.482,738,2.482,739,2.482,740,2.482,741,2.482,742,3.664,743,2.482,744,2.482,745,2.482,746,2.482,747,2.482,748,2.482,749,2.482,750,2.482,751,2.482,752,2.482,753,2.482,754,2.083,755,2.482,756,2.482,757,2.482,758,2.482,759,2.482,760,2.482,761,2.482,762,2.482,763,3.664,764,4.355,765,2.482,766,2.482,767,2.482,768,2.482,769,2.482,770,2.482,771,2.482,772,2.482,773,2.482,774,2.482,775,2.482,776,2.482,777,2.482,778,2.482,779,2.482,780,2.482,781,2.482,782,2.482,783,5.698,784,2.482,785,2.482,786,2.482,787,2.083,788,2.482,789,2.482,790,2.482,791,5.367,792,2.482,793,2.482,794,2.482,795,2.482,796,2.482,797,2.482,798,1.821,799,2.482]],["title/license.html",[708,2.322,709,2.322,800,2.029]],["body/license.html",[12,0.02,45,0.02,46,0.02,64,1.85,189,2.247,218,1.695,360,3.866,517,2.247,645,2.519,754,2.882,787,3.866,798,2.519,800,2.519,801,5.197,802,3.435,803,3.435,804,3.435,805,4.606,806,3.435,807,3.435,808,3.435,809,3.435,810,3.435,811,3.435,812,6.27,813,3.435,814,3.435,815,5.197,816,3.435,817,4.606,818,3.435,819,3.435,820,3.435,821,3.435,822,3.435,823,3.435,824,3.435,825,3.435,826,3.435,827,4.606,828,3.435,829,3.435,830,3.435,831,3.435,832,3.435,833,3.435,834,3.435,835,4.606,836,4.606,837,3.435,838,3.435,839,3.435,840,3.435,841,3.435,842,3.435,843,3.435,844,3.435,845,3.435,846,3.435,847,3.435,848,3.435,849,3.435,850,3.435,851,3.435,852,3.435,853,3.435,854,3.435,855,3.435,856,3.435,857,3.435,858,3.435,859,3.435,860,3.435,861,3.435,862,3.435,863,3.435]],["title/modules.html",[49,2.037]],["body/modules.html",[12,0.025,45,0.025,46,0.025,48,3.044,49,2.113,59,2.506,60,2.297,61,2.751,864,6.211,865,6.211,866,6.211,867,6.211]],["title/overview.html",[868,3.764]],["body/overview.html",[2,1.515,12,0.029,22,2.528,45,0.02,46,0.02,47,1.293,48,4.123,49,1.515,50,1.647,51,1.972,52,1.972,53,1.647,54,1.972,55,1.972,56,2.8,57,2.8,58,2.8,59,3.394,60,3.035,61,3.685,62,2.67,63,1.972,64,1.797,151,1.797,156,2.344,216,2.528,274,1.11,306,2.8,308,2.8,309,3.027,400,2.447,492,2.8,493,2.8,494,2.8,558,2.8,615,2.758,631,2.8,633,2.8,868,2.8,869,3.336,870,3.336,871,3.336,872,3.336]],["title/properties.html",[276,1.224,660,2.322]],["body/properties.html",[12,0.029,45,0.024,46,0.024,276,1.415,711,3.847,798,3.362,800,3.362,873,4.584,874,4.584,875,4.584,876,4.584,877,4.584,878,4.584,879,5.538,880,4.584,881,4.584,882,4.584,883,4.584,884,4.584]],["title/miscellaneous/typealiases.html",[704,1.49,885,3.964]],["body/miscellaneous/typealiases.html",[7,0.584,12,0.027,45,0.025,46,0.025,146,3.074,160,0.713,288,2.38,303,3.374,304,2.85,305,2.38,704,2.597,886,4.821,887,5.707]],["title/miscellaneous/variables.html",[704,1.49,888,3.327]],["body/miscellaneous/variables.html",[3,0.297,7,0.373,12,0.029,36,3.949,39,1.424,45,0.019,46,0.019,65,2.26,92,2.529,93,2.587,94,3.138,95,2.26,139,1.822,160,0.727,167,1.536,175,2.26,180,1.66,228,1.521,321,2.587,326,2.529,357,2.529,363,2.017,399,3.215,401,2.017,402,3.473,405,2.587,410,2.26,425,4.426,428,2.587,430,3.138,441,1.66,498,2.26,514,3.138,515,2.587,516,4.455,517,2.017,518,4.455,519,2.587,520,4.124,521,2.587,522,3.138,613,3.138,654,2.587,655,3.591,704,1.66,707,4.124,888,2.587,889,4.278,890,4.278,891,3.082,892,3.082,893,3.082,894,3.082,895,3.082,896,3.082]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":489,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["0.1.13",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":874,"title":{},"body":{"properties.html":{}}}],["0.30.3",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["1.4.6",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["1.78.0",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["11",{"_index":872,"title":{},"body":{"overview.html":{}}}],["12.0.7",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["12.0.8",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["16.7.1",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["17.9.2",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["18.0.2",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":558,"title":{},"body":{"injectables/PrismaService.html":{},"overview.html":{}}}],["2.0.0",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":803,"title":{},"body":{"license.html":{}}}],["3",{"_index":870,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["3600000",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["4",{"_index":869,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":480,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5",{"_index":871,"title":{},"body":{"overview.html":{}}}],["5.2.3",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["7.8.1",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":834,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":298,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["access_token",{"_index":292,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["accessible",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":858,"title":{},"body":{"license.html":{}}}],["actual",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["aliases",{"_index":886,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":721,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":825,"title":{},"body":{"license.html":{}}}],["angular",{"_index":770,"title":{},"body":{"index.html":{}}}],["api",{"_index":625,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["api.bookstore.nas",{"_index":710,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["apollodriver",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagegraphqlplayground",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["app.close",{"_index":578,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["app.dto",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appended",{"_index":484,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":733,"title":{},"body":{"index.html":{}}}],["arg",{"_index":412,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice",{"_index":424,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(1).split",{"_index":421,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(2",{"_index":417,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.startswith",{"_index":413,"title":{},"body":{"interfaces/Flags.html":{}}}],["argon",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(dto.password",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.verify(user.hash",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["args",{"_index":326,"title":{},"body":{"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":408,"title":{},"body":{"interfaces/Flags.html":{}}}],["arising",{"_index":862,"title":{},"body":{"license.html":{}}}],["array",{"_index":409,"title":{},"body":{"interfaces/Flags.html":{}}}],["asia/kolkata",{"_index":576,"title":{},"body":{"injectables/PrismaService.html":{}}}],["associated",{"_index":813,"title":{},"body":{"license.html":{}}}],["async",{"_index":153,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth.service",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth/auth.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/decorator",{"_index":614,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/guard",{"_index":612,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":197,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authdto",{"_index":204,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authenticated",{"_index":722,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":756,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":449,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authguard('jwt",{"_index":451,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authinput",{"_index":287,"title":{"classes/AuthInput.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":883,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":757,"title":{},"body":{"index.html":{}}}],["authors",{"_index":851,"title":{},"body":{"license.html":{}}}],["authpayload",{"_index":291,"title":{"classes/AuthPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["authresolver",{"_index":317,"title":{"classes/AuthResolver.html":{}},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":216,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":876,"title":{},"body":{"properties.html":{}}}],["between",{"_index":750,"title":{},"body":{"index.html":{}}}],["body",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["bookstore.nas",{"_index":877,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":867,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":864,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":880,"title":{},"body":{"properties.html":{}}}],["built",{"_index":713,"title":{},"body":{"index.html":{}}}],["business",{"_index":734,"title":{},"body":{"index.html":{}}}],["c",{"_index":802,"title":{},"body":{"license.html":{}}}],["cache",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('home",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["cachemodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(5",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(number.max_safe_integer",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(undefined)@get('health",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["case",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["catch",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch((err",{"_index":187,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["chalk",{"_index":544,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.cyan(json.stringify(e.params",{"_index":549,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.green(e.query",{"_index":547,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.magenta(`${e.duration}ms",{"_index":551,"title":{},"body":{"injectables/PrismaService.html":{}}}],["charge",{"_index":809,"title":{},"body":{"license.html":{}}}],["claim",{"_index":854,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":274,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"overview.html":{}}}],["cleandb",{"_index":500,"title":{},"body":{"injectables/PrismaService.html":{}}}],["clear",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":492,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":493,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":494,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":631,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":632,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":633,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["compodoc",{"_index":767,"title":{},"body":{"index.html":{}}}],["compression",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["concerns",{"_index":738,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":833,"title":{},"body":{"license.html":{}}}],["config",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":537,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":477,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mode",{"_index":470,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":755,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configuration",{"_index":752,"title":{},"body":{"index.html":{}}}],["connect",{"_index":183,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connected",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connecting",{"_index":571,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"license.html":{}}}],["connectors/postgresql#configuring",{"_index":533,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.count('db",{"_index":184,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["console.debug",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["console.debug(req.cookies",{"_index":487,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.debug({dto",{"_index":331,"title":{},"body":{"classes/AuthResolver.html":{}}}],["console.error",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ServiceStatus.html":{}}}],["console.info(new",{"_index":570,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":640,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('extracted",{"_index":490,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('flags",{"_index":429,"title":{},"body":{"interfaces/Flags.html":{}}}],["console.log(chalk.yellow('duration",{"_index":550,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('params",{"_index":548,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('query",{"_index":546,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('duration",{"_index":568,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('params",{"_index":566,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('query",{"_index":564,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":154,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":319,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(config",{"_index":458,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(ok",{"_index":585,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["constructor(prisma",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["context",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["contract",{"_index":859,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":617,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["cookie",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["cookiename",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["cookies",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["copies",{"_index":827,"title":{},"body":{"license.html":{}}}],["copy",{"_index":787,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":801,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":644,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":723,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":296,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["createparamdecorator",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":726,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":321,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["ctx.res",{"_index":335,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentflag",{"_index":411,"title":{},"body":{"interfaces/Flags.html":{}}}],["damages",{"_index":855,"title":{},"body":{"license.html":{}}}],["data",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":572,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["database_url",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["datasources",{"_index":535,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["datetime",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["db",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["db_connected",{"_index":522,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbstatus",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.debug",{"_index":195,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.ok",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.status",{"_index":194,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["deal",{"_index":814,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":863,"title":{},"body":{"license.html":{}}}],["debug",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"classes/EditUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["definitionsfactory",{"_index":430,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["definitionsfactory.generate",{"_index":431,"title":{},"body":{"interfaces/Flags.html":{}}}],["delete",{"_index":609,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":629,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":597,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@getuser('userid",{"_index":628,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":600,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":711,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["dev/test/prod",{"_index":786,"title":{},"body":{"index.html":{}}}],["development",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["distribute",{"_index":823,"title":{},"body":{"license.html":{}}}],["docs",{"_index":775,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":645,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":524,"title":{},"body":{"injectables/PrismaService.html":{}}}],["domain",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["domain.com",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["down",{"_index":581,"title":{},"body":{"injectables/PrismaService.html":{}}}],["driver",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.password",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["due",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["e",{"_index":543,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.g",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["e.params",{"_index":563,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.query",{"_index":552,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e2e",{"_index":526,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["edituser",{"_index":598,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituser(@getuser('userid",{"_index":621,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(userid",{"_index":603,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituserdto",{"_index":386,"title":{"classes/EditUserDto.html":{}},"body":{"classes/EditUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["em",{"_index":777,"title":{},"body":{"index.html":{}}}],["email",{"_index":277,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{}}}],["emit",{"_index":516,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":501,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":505,"title":{},"body":{"injectables/PrismaService.html":{}}}],["env",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":788,"title":{},"body":{"index.html":{}}}],["env.local",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["env.prod",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["envfile",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["error",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["error.code",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["event",{"_index":517,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":529,"title":{},"body":{"injectables/PrismaService.html":{}}}],["executioncontext",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiration",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":443,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["extract",{"_index":407,"title":{},"body":{"interfaces/Flags.html":{}}}],["extractflags",{"_index":656,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractflags(args",{"_index":410,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":467,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":474,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":472,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie",{"_index":456,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie(req",{"_index":460,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":190,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["false",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["fieldresolverenhancers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":754,"title":{},"body":{"index.html":{},"license.html":{}}}],["fill",{"_index":789,"title":{},"body":{"index.html":{}}}],["find",{"_index":776,"title":{},"body":{"index.html":{}}}],["first",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firstname",{"_index":389,"title":{},"body":{"classes/EditUserDto.html":{}}}],["fitness",{"_index":847,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["fixme:unsure",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["flag",{"_index":415,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys",{"_index":420,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys.foreach((key",{"_index":422,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagname",{"_index":416,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags",{"_index":399,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["flags.w",{"_index":436,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags.watch",{"_index":435,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[currentflag",{"_index":427,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[flagname",{"_index":418,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[key",{"_index":423,"title":{},"body":{"interfaces/Flags.html":{}}}],["followed",{"_index":731,"title":{},"body":{"index.html":{}}}],["following",{"_index":832,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('credentials",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('incorrect",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":511,"title":{},"body":{"injectables/PrismaService.html":{}}}],["format(query",{"_index":554,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formattedquery",{"_index":553,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formatter",{"_index":513,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["free",{"_index":808,"title":{},"body":{"license.html":{}}}],["function",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{},"coverage.html":{}}}],["functional",{"_index":719,"title":{},"body":{"index.html":{}}}],["functions",{"_index":705,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":830,"title":{},"body":{"license.html":{}}}],["g",{"_index":782,"title":{},"body":{"index.html":{}}}],["generate",{"_index":771,"title":{},"body":{"index.html":{}}}],["generated",{"_index":774,"title":{},"body":{"index.html":{}}}],["get('health",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":619,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@cachekey('home')@cachettl(number.max_safe_integer",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["gethealth",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["getme",{"_index":599,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(@getuser",{"_index":620,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(user",{"_index":606,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":708,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":613,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":496,"title":{},"body":{"modules/PrismaModule.html":{}}}],["granted",{"_index":807,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"dependencies.html":{},"index.html":{}}}],["graphql:schema",{"_index":718,"title":{},"body":{"index.html":{}}}],["graphqlcontext",{"_index":88,"title":{"classes/GraphqlContext.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["graphqldatetime",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqldefinitionsfactory",{"_index":405,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["handled",{"_index":735,"title":{},"body":{"index.html":{}}}],["hash",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashing",{"_index":761,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":768,"title":{},"body":{"index.html":{}}}],["here",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":806,"title":{},"body":{"license.html":{}}}],["hiro",{"_index":804,"title":{},"body":{"license.html":{}}}],["holders",{"_index":852,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":878,"title":{},"body":{"properties.html":{}}}],["hour",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["http",{"_index":739,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('signin",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["httponly",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["https",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com/fundamentals/lifecycle",{"_index":528,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://github.com/jsfame/api.bookstore.nas",{"_index":879,"title":{},"body":{"properties.html":{}}}],["https://github.com/jsfame/api.bookstore.nas/issues",{"_index":881,"title":{},"body":{"properties.html":{}}}],["https://jsfame.github.io/api.bookstore.nas",{"_index":778,"title":{},"body":{"index.html":{}}}],["https://www.prisma.io/docs/concepts/database",{"_index":532,"title":{},"body":{"injectables/PrismaService.html":{}}}],["httpstatus",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":294,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":541,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ignoreexpiration",{"_index":475,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implemented",{"_index":741,"title":{},"body":{"index.html":{}}}],["implements",{"_index":523,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":843,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["import('chalk",{"_index":545,"title":{},"body":{"injectables/PrismaService.html":{}}}],["imports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["imutation",{"_index":299,"title":{"classes/IMutation.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["included",{"_index":837,"title":{},"body":{"license.html":{}}}],["including",{"_index":817,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":506,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":150,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":151,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inspect",{"_index":727,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":769,"title":{},"body":{"index.html":{}}}],["install",{"_index":781,"title":{},"body":{"index.html":{}}}],["installation",{"_index":779,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":784,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["interactions",{"_index":743,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":398,"title":{"interfaces/Flags.html":{},"interfaces/User.html":{}},"body":{"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":400,"title":{},"body":{"interfaces/Flags.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isemail",{"_index":283,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{}}}],["isemail()@isnotempty",{"_index":279,"title":{},"body":{"classes/AuthDto.html":{}}}],["isemail()@isoptional",{"_index":391,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isglobal",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":284,"title":{},"body":{"classes/AuthDto.html":{}}}],["iso",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["isoptional",{"_index":396,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring",{"_index":397,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring()@isoptional",{"_index":393,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstrongpassword",{"_index":285,"title":{},"body":{"classes/AuthDto.html":{}}}],["isstrongpassword()@isnotempty",{"_index":281,"title":{},"body":{"classes/AuthDto.html":{}}}],["items",{"_index":728,"title":{},"body":{"index.html":{}}}],["jest",{"_index":765,"title":{},"body":{"index.html":{}}}],["john",{"_index":426,"title":{},"body":{"interfaces/Flags.html":{}}}],["joi",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(2",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('hiro@jwt#token",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().valid('dev",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":406,"title":{},"body":{"interfaces/Flags.html":{}}}],["join(process.cwd",{"_index":433,"title":{},"body":{"interfaces/Flags.html":{}}}],["jwt",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt_max_age",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt_secret",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtconstants",{"_index":454,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":471,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":446,"title":{"classes/JwtGuard.html":{}},"body":{"classes/JwtGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":309,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtstrategy.extractjwtfromcookie",{"_index":473,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["keywordcase",{"_index":559,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kind",{"_index":842,"title":{},"body":{"license.html":{}}}],["kleur",{"_index":510,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["kleur.cyan(json.stringify(e.params",{"_index":567,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.green(formattedquery",{"_index":565,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.magenta(`${e.duration}ms",{"_index":569,"title":{},"body":{"injectables/PrismaService.html":{}}}],["laciferin@gmail.com",{"_index":884,"title":{},"body":{"properties.html":{}}}],["landing",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["language",{"_index":555,"title":{},"body":{"injectables/PrismaService.html":{}}}],["lastname",{"_index":390,"title":{},"body":{"classes/EditUserDto.html":{}}}],["layers",{"_index":751,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":518,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":856,"title":{},"body":{"license.html":{}}}],["liable",{"_index":853,"title":{},"body":{"license.html":{}}}],["license",{"_index":800,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":799,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":818,"title":{},"body":{"license.html":{}}}],["limited",{"_index":844,"title":{},"body":{"license.html":{}}}],["linesbetweenqueries",{"_index":561,"title":{},"body":{"injectables/PrismaService.html":{}}}],["literal",{"_index":464,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["log",{"_index":538,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logevents",{"_index":514,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":582,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["long",{"_index":414,"title":{},"body":{"interfaces/Flags.html":{}}}],["manage",{"_index":724,"title":{},"body":{"index.html":{}}}],["management",{"_index":753,"title":{},"body":{"index.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["merchantability",{"_index":846,"title":{},"body":{"license.html":{}}}],["merge",{"_index":821,"title":{},"body":{"license.html":{}}}],["message",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["methodologies",{"_index":730,"title":{},"body":{"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["milliseconds",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":704,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":798,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":820,"title":{},"body":{"license.html":{}}}],["modular",{"_index":732,"title":{},"body":{"index.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["morph",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["mutation",{"_index":327,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signin",{"_index":322,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signup",{"_index":324,"title":{},"body":{"classes/AuthResolver.html":{}}}],["name",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["needs",{"_index":622,"title":{},"body":{"controllers/UserController.html":{}}}],["nest/swagger",{"_index":740,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":694,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":450,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":850,"title":{},"body":{"license.html":{}}}],["notice",{"_index":835,"title":{},"body":{"license.html":{}}}],["npm",{"_index":780,"title":{},"body":{"index.html":{}}}],["null",{"_index":305,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":303,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":295,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object(dto",{"_index":747,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":811,"title":{},"body":{"license.html":{}}}],["ok",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["onmoduledestroy",{"_index":527,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":502,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":161,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["orders",{"_index":725,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":861,"title":{},"body":{"license.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outputas",{"_index":434,"title":{},"body":{"interfaces/Flags.html":{}}}],["over",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["overview",{"_index":868,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":758,"title":{},"body":{"index.html":{}}}],["p2002",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":660,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["parameters",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":562,"title":{},"body":{"injectables/PrismaService.html":{}}}],["parser",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":848,"title":{},"body":{"license.html":{}}}],["passport",{"_index":468,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passport.js",{"_index":717,"title":{},"body":{"index.html":{}}}],["passportjs",{"_index":759,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":466,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":469,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":278,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"index.html":{}}}],["patch",{"_index":610,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["pattern",{"_index":748,"title":{},"body":{"index.html":{}}}],["payload",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":481,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":478,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":805,"title":{},"body":{"license.html":{}}}],["permit",{"_index":828,"title":{},"body":{"license.html":{}}}],["person",{"_index":810,"title":{},"body":{"license.html":{}}}],["persons",{"_index":829,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":745,"title":{},"body":{"index.html":{}}}],["playground",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["pnpm",{"_index":783,"title":{},"body":{"index.html":{}}}],["port",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":839,"title":{},"body":{"license.html":{}}}],["post",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signin",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":556,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prefix",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["prerequisite",{"_index":785,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.logdefinition",{"_index":515,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":497,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":509,"title":{},"body":{"injectables/PrismaService.html":{},"controllers/UserController.html":{}}}],["prisma/client/runtime/library",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["prisma/prisma.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":168,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":499,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientknownrequesterror",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismaclientunknownrequesterror",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismamodule",{"_index":60,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":156,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["process.argv.slice(2",{"_index":428,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["process.env.force_color",{"_index":539,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.mode",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["prod",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["production",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project",{"_index":772,"title":{},"body":{"index.html":{}}}],["promise",{"_index":301,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["properties",{"_index":276,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provided",{"_index":840,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["publish",{"_index":822,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":849,"title":{},"body":{"license.html":{}}}],["pwmatches",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":519,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"classes/ServiceStatus.html":{}}}],["reflect",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["replace",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["repo",{"_index":797,"title":{},"body":{"index.html":{}}}],["repository",{"_index":882,"title":{},"body":{"properties.html":{}}}],["req",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["req.cookies",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.cookies.token",{"_index":491,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies[tokenfield].length",{"_index":488,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":485,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request",{"_index":441,"title":{},"body":{"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["requesttype",{"_index":461,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestwithuser",{"_index":438,"title":{"classes/RequestWithUser.html":{}},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["required",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["res.clearcookie('token",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie(cookiename",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('token",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('user",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send(token",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolver",{"_index":328,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('auth",{"_index":329,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolvers",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["restriction",{"_index":816,"title":{},"body":{"license.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":483,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":819,"title":{},"body":{"license.html":{}}}],["run",{"_index":791,"title":{},"body":{"index.html":{}}}],["running",{"_index":178,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["rxjs",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["salts",{"_index":762,"title":{},"body":{"index.html":{}}}],["schema",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["sec",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["secret",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":476,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["select",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["sell",{"_index":826,"title":{},"body":{"license.html":{}}}],["sent",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["separate",{"_index":736,"title":{},"body":{"index.html":{}}}],["separating",{"_index":737,"title":{},"body":{"index.html":{}}}],["server",{"_index":712,"title":{},"body":{"index.html":{}}}],["service",{"_index":623,"title":{},"body":{"controllers/UserController.html":{}}}],["services",{"_index":742,"title":{},"body":{"index.html":{}}}],["servicestatus",{"_index":169,"title":{"classes/ServiceStatus.html":{}},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["set",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["shall",{"_index":836,"title":{},"body":{"license.html":{}}}],["short",{"_index":419,"title":{},"body":{"interfaces/Flags.html":{}}}],["signed",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signin(@args('data",{"_index":333,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signin(@body",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(data",{"_index":302,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["signin(dto",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signtoken",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(userid",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signup(@args('data",{"_index":330,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signup(@body",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(data",{"_index":300,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["signup(dto",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signuppayload",{"_index":293,"title":{"classes/SignUpPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["software",{"_index":812,"title":{},"body":{"license.html":{}}}],["solana/web3.js",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["something",{"_index":624,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specs",{"_index":720,"title":{},"body":{"index.html":{}}}],["sql",{"_index":512,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["src/**/*.graphql",{"_index":432,"title":{},"body":{"interfaces/Flags.html":{}}}],["src/.../app.module.ts",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generate",{"_index":707,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":887,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":706,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.service.ts",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.dto.ts",{"_index":437,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app.dto.ts:11",{"_index":439,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:12",{"_index":440,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:8",{"_index":584,"title":{},"body":{"classes/RequestWithUser.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":152,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":157,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":165,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":163,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:4",{"_index":586,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:6",{"_index":588,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:7",{"_index":589,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:8",{"_index":587,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/auth/auth.controller.ts",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":318,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:16",{"_index":325,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:23",{"_index":323,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:9",{"_index":320,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.service.ts",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/get",{"_index":654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":275,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":282,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":280,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/guard/jwt.guard.ts",{"_index":447,"title":{},"body":{"classes/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guard/jwt.guard.ts:3",{"_index":448,"title":{},"body":{"classes/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":453,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":459,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:24",{"_index":465,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:35",{"_index":462,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/generate",{"_index":401,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/graphql.ts",{"_index":288,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/graphql.ts:12",{"_index":289,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:13",{"_index":290,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:17",{"_index":316,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/graphql.ts:21",{"_index":592,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:22",{"_index":591,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:23",{"_index":590,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:24",{"_index":593,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:28",{"_index":445,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:30",{"_index":444,"title":{},"body":{"classes/IMutation.html":{}}}],["src/main.ts",{"_index":657,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":495,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":498,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.service.ts:29",{"_index":503,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:71",{"_index":508,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:81",{"_index":507,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:88",{"_index":504,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/user/dto/edit",{"_index":387,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":595,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:14",{"_index":608,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:20",{"_index":605,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:28",{"_index":602,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":634,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":636,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:24",{"_index":638,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":637,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":639,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":534,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert",{"_index":530,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert=root.crt",{"_index":531,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":792,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":793,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":794,"title":{},"body":{"index.html":{}}}],["started",{"_index":709,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":455,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["status",{"_index":173,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["stdout",{"_index":520,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":167,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":773,"title":{},"body":{"index.html":{}}}],["sub",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":831,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":824,"title":{},"body":{"license.html":{}}}],["subscriptions",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["substantial",{"_index":838,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":186,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["super",{"_index":452,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["supertest",{"_index":766,"title":{},"body":{"index.html":{}}}],["support",{"_index":865,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":866,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":304,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["tabwidth",{"_index":557,"title":{},"body":{"injectables/PrismaService.html":{}}}],["taken",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["tear",{"_index":580,"title":{},"body":{"injectables/PrismaService.html":{}}}],["technical",{"_index":729,"title":{},"body":{"index.html":{}}}],["test",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["test').default('dev",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["test:covlicense",{"_index":796,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":795,"title":{},"body":{"index.html":{}}}],["testing",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["tests",{"_index":764,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":573,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$executerawunsafe(\"set",{"_index":574,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":577,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('query",{"_index":542,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction",{"_index":579,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethealth",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authcontroller.signin(dto",{"_index":334,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authcontroller.signup(dto",{"_index":332,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.signin(dto",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get('jwt_secret",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.jwt.signasync(payload",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma",{"_index":182,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["this.prisma.user.create",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.delete",{"_index":643,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.prisma.user.update",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["this.signtoken(user.id",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.deletemany",{"_index":583,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.userservice.deleteuser(userid",{"_index":630,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituser(userid",{"_index":627,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["throws",{"_index":479,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["time",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["timezone",{"_index":575,"title":{},"body":{"injectables/PrismaService.html":{}}}],["todo",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["token.access_token",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenfield",{"_index":486,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":760,"title":{},"body":{"index.html":{}}}],["tools",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":716,"title":{},"body":{"index.html":{}}}],["tort",{"_index":860,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":746,"title":{},"body":{"index.html":{}}}],["transferring",{"_index":749,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["transformers",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["transport",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["try",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":540,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["type",{"_index":160,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":885,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typepaths",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Flags.html":{}}}],["types",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":715,"title":{},"body":{"index.html":{}}}],["typings.ts",{"_index":402,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":763,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["up",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["updatedat",{"_index":297,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["upper",{"_index":560,"title":{},"body":{"injectables/PrismaService.html":{}}}],["url",{"_index":536,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["useguards",{"_index":611,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":618,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete",{"_index":601,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get('me",{"_index":607,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@patch",{"_index":604,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":355,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user.controller",{"_index":635,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":388,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":394,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:14",{"_index":395,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:6",{"_index":392,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.email",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.hash",{"_index":642,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":616,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":594,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":61,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":596,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":615,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":714,"title":{},"body":{"index.html":{}}}],["utility",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":457,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":463,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":744,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":286,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":425,"title":{},"body":{"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":888,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":790,"title":{},"body":{"index.html":{}}}],["version",{"_index":873,"title":{},"body":{"properties.html":{}}}],["w",{"_index":403,"title":{},"body":{"interfaces/Flags.html":{}}}],["walletid",{"_index":442,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["ware",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["warn",{"_index":521,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":845,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":841,"title":{},"body":{"license.html":{}}}],["watch",{"_index":404,"title":{},"body":{"interfaces/Flags.html":{},"index.html":{}}}],["web2",{"_index":875,"title":{},"body":{"properties.html":{}}}],["whatever",{"_index":482,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whether",{"_index":857,"title":{},"body":{"license.html":{}}}],["whitelist:true",{"_index":626,"title":{},"body":{"controllers/UserController.html":{}}}],["without",{"_index":815,"title":{},"body":{"license.html":{}}}],["work",{"_index":525,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ws",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHealth\n                            \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheTTL(undefined)@Get('health')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@CacheKey('home')@CacheTTL(Number.MAX_SAFE_INTEGER)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { CacheInterceptor, CacheKey, CacheTTL } from '@nestjs/cache-manager'\n\n@Controller()\n@UseInterceptors(CacheInterceptor)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @CacheKey('home')\n  @CacheTTL(Number.MAX_SAFE_INTEGER) //default is just 1 sec\n  getHello() {\n    return this.appService.getHello()\n  }\n\n  @CacheTTL(5 * 1000)\n  @Get('health')\n  getHealth() {\n    return this.appService.getHealth()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { ConfigModule } from '@nestjs/config'\nimport { AuthModule } from './auth/auth.module'\nimport Joi from 'joi'\nimport { CacheModule } from '@nestjs/cache-manager'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { ApolloServerPluginLandingPageGraphQLPlayground } from '@apollo/server-plugin-landing-page-graphql-playground'\nimport { GraphQLDateTime } from 'graphql-iso-date'\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'\nimport { AppController } from './app.controller'\nimport { GraphqlContext } from './app.dto'\nimport { UserModule } from './user/user.module'\nimport { PrismaModule } from './prisma/prisma.module'\n\nlet mode = process.env.MODE\nlet envFile = '.env'\n\nswitch (mode) {\n  case 'test':\n    envFile = '.env.test'\n    process.env.NODE_ENV = 'testing'\n    break\n  case 'prod':\n    process.env.NODE_ENV = 'production'\n    envFile = '.env.prod'\n    break\n  default:\n    mode = 'dev'\n    process.env.NODE_ENV = 'development'\n    envFile = '.env.local'\n}\n\nconsole.debug({ mode, envFile })\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [envFile, '.env'],\n      isGlobal: true,\n      cache: true,\n      validationSchema: Joi.object({\n        MODE: Joi.string().valid('dev', 'prod', 'test').default('dev'),\n        PORT: Joi.number().default(3000),\n        DATABASE_URL: Joi.string(),\n        JWT_SECRET: Joi.string().default('Hiro@JWT#TOKEN$'),\n        JWT_MAX_AGE: Joi.number().default(2 * 60 * 60 * 1000),\n      }),\n    }),\n    CacheModule.register({ isGlobal: true }),\n    GraphQLModule.forRoot({\n      context: ({ req, res }: GraphqlContext) => ({ req, res }), //required for cookies\n\n      fieldResolverEnhancers: ['interceptors'], //FIXME:unsure\n\n      autoSchemaFile: false, // schema-first\n      playground: false,\n      driver: ApolloDriver,\n      plugins: [ApolloServerPluginLandingPageGraphQLPlayground()],\n      typePaths: ['./**/*.graphql'],\n      resolvers: { DateTime: GraphQLDateTime },\n      subscriptions: {\n        'graphql-ws': true,\n        'subscriptions-transport-ws': true,\n      },\n    }),\n    PrismaModule,\n    AuthModule,\n    UserModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHealth\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Res } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { AuthDto } from './dto'\nimport { Response } from 'express'\nimport { ConfigService } from '@nestjs/config'\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService, private config: ConfigService) {}\n\n  @Post('signup')\n  signup(@Body() dto: AuthDto) {\n    return this.authService.signup(dto)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signin(@Body() dto: AuthDto, @Res() res: Response) {\n    const token = await this.authService.signin(dto)\n\n    /*    res.cookie('user', dto.email, { //TODO:\n      // Set cookie options here (e.g., expiration, domain, path, etc.)\n      maxAge: 3600000, // Cookie expiration time in milliseconds (1 hour)\n      httpOnly: true, // Cookie accessible only through HTTP(S) requests\n      secure: true, // Cookie sent only over HTTPS if true\n      signed: true,\n    })*/\n    // const cookies = req.cookies; //TODO: middle ware to clear the cookies when signin\n    // TODO: utility function to clear and set cookie\n    // for (let cookieName in cookies) {\n    //   res.clearCookie(cookieName); // Replace '.your-domain.com' with your actual domain\n    // }\n    res.clearCookie('token')\n    res.cookie('token', token.access_token, {\n      maxAge: this.config.get('JWT_SECRET') * 1000 || 60 * 60 * 1000,\n      secure: true,\n      httpOnly: true,\n      // signed: true,\n    })\n\n    res.send(token)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsStrongPassword } from 'class-validator'\n\nexport class AuthDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string\n\n  @IsStrongPassword()\n  @IsNotEmpty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInput.html":{"url":"classes/AuthInput.html","title":"class - AuthInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PrismaModule } from '../prisma/prisma.module'\nimport { JwtStrategy } from './strategy'\n\n@Module({\n  imports: [JwtModule.register({}), PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPayload.html":{"url":"classes/AuthPayload.html","title":"class - AuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authController: AuthController)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authController\n                                                  \n                                                        \n                                                                        AuthController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(dto: AuthDto, ctx: GraphqlContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signIn')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n                                    \n                                                GraphqlContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signUp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Args, Context, Mutation, Resolver} from '@nestjs/graphql'\nimport {AuthService} from './auth.service'\nimport {AuthController} from './auth.controller'\nimport {GraphqlContext} from '../app.dto'\nimport {AuthDto} from './dto'\nimport {AuthInput} from '../graphql'\n\n@Resolver('Auth')\nexport class AuthResolver {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authController: AuthController,\n  ) {}\n\n  @Mutation('signUp')\n  signUp(@Args('data') dto: AuthDto) {\n    console.debug({dto})\n\n    return this.authController.signup(dto as AuthInput)\n  }\n\n  @Mutation('signIn')\n  signIn(@Args('data') dto: AuthDto, @Context() ctx: GraphqlContext) {\n    console.debug({ dto })\n\n    return this.authController.signin(dto as AuthInput, ctx.res)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userId: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { AuthDto } from './dto'\n\nimport argon from 'argon2'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwt: JwtService,\n    private config: ConfigService,\n  ) {}\n\n  async signup(dto: AuthDto) {\n    const hash = await argon.hash(dto.password)\n\n    try {\n      const user = await this.prisma.user.create({\n        data: {\n          email: dto.email,\n          hash: hash,\n        },\n        select: {\n          //FIXME: use transformers\n          id: true,\n          email: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      return user\n    } catch (error) {\n      console.error({\n        code: error.code,\n        error,\n      })\n      if (\n        error instanceof PrismaClientKnownRequestError ||\n        PrismaClientUnknownRequestError\n      ) {\n        if (error.code == 'P2002') {\n          throw new ForbiddenException('credentials taken')\n        }\n      }\n      throw error\n    }\n  }\n\n  async signin(dto: AuthDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email: dto.email,\n      },\n    })\n\n    if (!user) throw new ForbiddenException('incorrect credentials')\n\n    const pwMatches = await argon.verify(user.hash, dto.password)\n\n    if (!pwMatches) throw new ForbiddenException('invalid credentials')\n\n    return this.signToken(user.id, user.email)\n  }\n\n  async signToken(userId: number, email: string) {\n    const payload = {\n      sub: userId,\n      email,\n    }\n    const secret = this.config.get('JWT_SECRET')\n\n    return {\n      access_token: await this.jwt.signAsync(payload, {\n        expiresIn: '1hr', //TODO:\n        secret: secret,\n      }),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserDto.html":{"url":"classes/EditUserDto.html","title":"class - EditUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/edit-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsEmail, IsOptional, IsString} from 'class-validator'\n\nexport class EditUserDto {\n  @IsEmail()\n  @IsOptional()\n  email?: string\n\n  @IsString()\n  @IsOptional()\n  firstName?: string\n\n  @IsString()\n  @IsOptional()\n  lastName?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Flags.html":{"url":"interfaces/Flags.html","title":"interface - Flags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Flags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generate-typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            w\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        w\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        w:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDefinitionsFactory } from '@nestjs/graphql'\nimport { join } from 'path'\n\ninterface Flags {\n  watch?: boolean\n  w?: boolean\n}\n\n// Function to extract flags from the arguments array\nfunction extractFlags(args) {\n  const flags: Flags = {}\n  let currentFlag = null\n\n  for (const arg of args) {\n    if (arg.startsWith('--')) {\n      // Long flag (e.g., --watch)\n      const flagName = arg.slice(2)\n      flags[flagName] = true\n      currentFlag = flagName\n    } else if (arg.startsWith('-')) {\n      // Short flag (e.g., -w)\n      const flagKeys = arg.slice(1).split('')\n      flagKeys.forEach((key) => {\n        flags[key] = true\n      })\n      currentFlag = arg.slice(-1)\n    } else if (currentFlag) {\n      // Flag value (e.g., --name John)\n      flags[currentFlag] = arg\n      currentFlag = null\n    }\n  }\n\n  return flags\n}\n\nconst args = process.argv.slice(2)\nconst flags: Flags = extractFlags(args)\n\nconsole.log('Flags:', flags)\n\nconst definitionsFactory = new GraphQLDefinitionsFactory()\ndefinitionsFactory.generate({\n  typePaths: ['./src/**/*.graphql'],\n  path: join(process.cwd(), 'src/graphql.ts'),\n  outputAs: 'class',\n  watch: flags.watch || flags.w,\n})\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphqlContext.html":{"url":"classes/GraphqlContext.html","title":"class - GraphqlContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphqlContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                req\n                            \n                            \n                                res\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        req\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RequestWithUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Response\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IMutation.html":{"url":"classes/IMutation.html","title":"class - IMutation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IMutation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SignUpPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtGuard.html":{"url":"classes/JwtGuard.html","title":"class - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport'\n\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtConstants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                extractJWTFromCookie\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        extractJWTFromCookie\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractJWTFromCookie(req: RequestType)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            RequestType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { userId: number; email: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { ConfigService } from '@nestjs/config'\nimport { PrismaService } from '../../prisma/prisma.service'\nimport { Request as RequestType } from 'express'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  private jwtConstants: any\n\n  constructor(private config: ConfigService, private prisma: PrismaService) {\n    const mode = config.get('MODE') || 'dev'\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        JwtStrategy.extractJWTFromCookie,\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ]),\n      ignoreExpiration: mode == 'dev' || mode == 'test',\n      secretOrKey: config.get('JWT_SECRET'),\n    })\n  }\n\n  validate(payload: { sub: number; email: string }) {\n    const user = this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    })\n    if (!user) return null //throws the 401 error\n\n    return { userId: payload.sub, email: payload.email }\n    // whatever is returned is appended to req.user\n  }\n  private static extractJWTFromCookie(req: RequestType): string | null {\n    const tokenField = 'token'\n    console.debug(req.cookies)\n    if (req.cookies && tokenField in req.cookies && req.cookies[tokenField].length > 0) {\n      console.log('extracted cookie')\n      return req.cookies.token\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Global, Module} from '@nestjs/common'\nimport {PrismaService} from './prisma.service'\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDb\n                            \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDb\n                        \n                    \n                \n            \n            \n                \ncleanDb()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common'\nimport { Prisma, PrismaClient } from '@prisma/client'\nimport { ConfigService } from '@nestjs/config'\nimport kleur from 'kleur'\nimport { format } from 'sql-formatter'\n\nconst logEvents: Prisma.LogDefinition[] = [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n\nlet DB_CONNECTED = false\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  // FIXME doesn't work for e2e OnModuleDestroy{\n  // https://docs.nestjs.com/fundamentals/lifecycle-events\n\n  constructor(config: ConfigService) {\n    const sslcert = '?sslcert=root.crt'\n    //https://www.prisma.io/docs/concepts/database-connectors/postgresql#configuring-an-ssl-connection\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL') + sslcert,\n        },\n      },\n      log: logEvents,\n    })\n\n    process.env.FORCE_COLOR = 'true'\n\n    // @ts-ignore\n    this.$on('query', async (e: any) => {\n      if (config.get('MODE') != 'dev') {\n        return\n      }\n\n      // const chalk = await import('chalk')\n      // console.log(chalk.yellow('Query: ') + chalk.green(e.query))\n      // console.log(chalk.yellow('Params: ') + chalk.cyan(JSON.stringify(e.params)))\n      // console.log(chalk.yellow('Duration: ') + chalk.magenta(`${e.duration}ms`))\n      const query = e.query\n\n      const formattedQuery = format(query, {\n        language: 'postgresql',\n        tabWidth: 2,\n        keywordCase: 'upper',\n        linesBetweenQueries: 2,\n        params: e.params || [],\n      })\n      console.log(kleur.yellow('Query: ') + kleur.green(formattedQuery))\n      console.log(kleur.yellow('Params: ') + kleur.cyan(JSON.stringify(e.params)))\n      console.log(kleur.yellow('Duration: ') + kleur.magenta(`${e.duration}ms`))\n    })\n  }\n  async onModuleInit() {\n    if (DB_CONNECTED) return\n\n    console.info(new Date(), 'connecting to the database')\n    await this.$connect()\n    await this.$executeRawUnsafe(\"SET timezone = 'Asia/Kolkata'\")\n\n    DB_CONNECTED = true\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    // @ts-ignore\n    this.$on('beforeExit', async () => {\n      await app.close()\n    })\n  }\n\n  cleanDb() {\n    return this.$transaction([\n      //tear down logic\n      this.user.deleteMany(),\n    ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestWithUser.html":{"url":"classes/RequestWithUser.html","title":"class - RequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceStatus.html":{"url":"classes/ServiceStatus.html","title":"class - ServiceStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ok: boolean, status: string, debug: any)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ok\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        debug\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OK'\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpPayload.html":{"url":"classes/SignUpPayload.html","title":"class - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            walletId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        walletId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                editUser\n                            \n                            \n                                    \n                                    \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Patch()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Delete, Get, Patch, UseGuards} from '@nestjs/common'\nimport {JwtGuard} from '../auth/guard'\nimport {GetUser} from '../auth/decorator'\nimport {User} from '@prisma/client'\nimport {EditUserDto} from './dto'\nimport {UserService} from './user.service'\n\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtGuard)\n  @Get('me')\n  getMe(@GetUser() user: User) {\n    return user\n  }\n\n  @UseGuards(JwtGuard)\n  @Patch()\n  editUser(@GetUser('userId') userId: number, @Body() dto: EditUserDto) {\n    //needs service\n    // we will get something in api request due to whitelist:true\n    return this.userService.editUser(userId, dto)\n  }\n\n  @UseGuards(JwtGuard)\n  @Delete()\n  async deleteUser(@GetUser('userId') userId: number) {\n    return {\n      message: 'user deleted',\n      user: await this.userService.deleteUser(userId),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common'\nimport {UserController} from './user.controller'\nimport {UserService} from './user.service'\nimport {AuthModule} from '../auth/auth.module'\nimport {PrismaModule} from '../prisma/prisma.module'\n\n@Module({\n  imports: [AuthModule, PrismaModule],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@nestjs/common'\nimport {PrismaService} from '../prisma/prisma.service'\nimport {EditUserDto} from './dto'\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  async editUser(userId: number, dto: EditUserDto) {\n    console.log({ userId, dto })\n    const user = await this.prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: {\n        ...dto,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n\n  async deleteUser(userId: number) {\n    const user = await this.prisma.user.delete({\n      where: {\n        id: userId,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            GraphqlContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            RequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            class\n            ServiceStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            class\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            interface\n            Flags\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            function\n            extractFlags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            args\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            definitionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            flags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IMutation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            SignUpPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            DB_CONNECTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            logEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/edit-user.dto.ts\n            \n            class\n            EditUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.7.5\n        \n            @nestjs/apollo : ^12.0.7\n        \n            @nestjs/cache-manager : ^2.0.1\n        \n            @nestjs/common : ^10.0.5\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.5\n        \n            @nestjs/graphql : ^12.0.8\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.5\n        \n            @solana/web3.js : ^1.78.0\n        \n            argon2 : ^0.30.3\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            graphql : 16.7.1\n        \n            graphql-iso-date : ^3.6.1\n        \n            graphql-subscriptions : 2.0.0\n        \n            graphql-tools : ^9.0.0\n        \n            joi : ^17.9.2\n        \n            kleur : ^4.1.5\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-nestjs-graphql : ^18.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : 7.8.1\n        \n            sql-formatter : ^12.2.3\n        \n            ts-morph : ^19.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            extractFlags   (src/.../generate-typings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractFlags\n                        \n                    \n                \n            \n            \n                \nextractFlags(args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\napi.bookstore.nas\nDescription\nAPI Server built using  , TypeScript, Prisma, Graphql and PostgreSQL.\nBuilt with ❤️on top of\n\n Typescript\n NestJS\n Prisma\n Passport.js\n Graphql:Schema First\n PostgreSQL\n\nFunctional specs\nAPI allows authenticated to users to create and manage orders\n\nUser SignUp & SignIn\nCRUD Orders\nInspect Items\n\nTechnical methodologies followed\n\nModular architecture: Business Logic & Auth handled in separate modules, separating concerns.\nHTTP requests are handled by Controllers\n API documentation using nest/swagger module \nBusiness logic is implemented in Services\nDatabase interactions are handled  using Prisma\nValidation using NestJS Pipes\nData Transfer Object(DTO) pattern for transferring data between layers\nConfiguration management using .env files for development, test & prod configs\nAuthentication / Authorization, Event ownership by users\nPassportJS, JWT tokens, Password hashing, salts\nUnit tests using Jest\nSupertest for E2E testing\n\nTechnical documentation using Compodoc\nAs NestJS is heavily inspired by Angular, we can generate the documentation about project structure modules, controllers, services etc. I\nhave generated the docs.\nFind 'em here - https://jsFame.github.io/api.bookstore.nas/\nInstallation\nnpm install -g pnpm\npnpm installRunning the app\nPrerequisite for running the app in any mode - dev/test/prod\n\nCopy .env.example with .env\nFill in the env vars in .env\n\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covLicense\nThis repo is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Hiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : Web2 backend of bookstore.nas\n        \n            Homepage : https://github.com/jsFame/api.bookstore.nas\n        \n            Bugs : https://github.com/jsFame/api.bookstore.nas/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/jsFame/api.bookstore.nas\n        \n            Author : laciferin@gmail.com\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateTime   (src/.../graphql.ts)\n                        \n                        \n                            Nullable   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            args   (src/.../generate-typings.ts)\n                        \n                        \n                            DB_CONNECTED   (src/.../prisma.service.ts)\n                        \n                        \n                            definitionsFactory   (src/.../generate-typings.ts)\n                        \n                        \n                            envFile   (src/.../app.module.ts)\n                        \n                        \n                            flags   (src/.../generate-typings.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            logEvents   (src/.../prisma.service.ts)\n                        \n                        \n                            mode   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        args\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.argv.slice(2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        definitionsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLDefinitionsFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Flags\n\n                    \n                \n                \n                    \n                        Default value : extractFlags(args)\n                    \n                \n\n\n        \n    \n\n    src/prisma/prisma.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.LogDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.env'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MODE\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest()\n\n    if (data) return request.user[data]\n\n    return request.user\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
