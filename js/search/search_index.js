var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.69,1,2.222]],["body/controllers/AppController.html",[0,2.467,1,3.244,2,1.74,3,0.334,4,0.376,5,0.334,6,3.161,7,0.419,8,1.691,9,4.288,10,4.288,11,2.467,12,0.028,13,3.755,14,0.797,15,3.755,16,1.691,17,3.755,18,3.755,19,0.965,20,3.755,21,1.119,22,2.75,23,3.161,24,3.755,25,3.755,26,3.755,27,2.77,28,2.77,29,3.755,30,0.419,31,0.138,32,1.885,33,2.245,34,3.755,35,3.755,36,2.478,37,2.478,38,3.755,39,1.574,40,3.755,41,3.755,42,2.77,43,3.755,44,3.755,45,0.02,46,0.02]],["title/modules/AppModule.html",[47,1.34,48,2.222]],["body/modules/AppModule.html",[1,2.697,2,1.561,3,0.196,4,0.221,5,0.196,12,0.028,19,1.081,21,0.658,22,2.605,23,1.858,27,1.629,28,1.629,30,0.246,31,0.081,36,1.457,42,1.629,45,0.014,46,0.014,47,1.626,48,3.961,49,1.023,50,1.108,51,1.32,52,1.32,53,1.108,54,2.443,55,1.32,56,1.858,57,1.858,58,1.858,59,2.835,60,2.605,61,3.103,62,2.015,63,1.32,64,1.206,65,1.629,66,2.486,67,2.207,68,1.206,69,1.858,70,2.836,71,2.207,72,2.207,73,1.32,74,3.369,75,1.858,76,2.207,77,2.207,78,2.207,79,3.018,80,3.369,81,3.369,82,1.858,83,1.629,84,3.369,85,2.207,86,1.858,87,2.207,88,1.691,89,1.858,90,2.207,91,1.629,92,2.944,93,1.858,94,3.829,95,2.486,96,2.207,97,3.369,98,1.629,99,2.207,100,4.085,101,1.858,102,3.369,103,2.836,104,1.858,105,2.207,106,1.629,107,1.858,108,2.207,109,1.858,110,2.207,111,2.207,112,3.369,113,2.472,114,1.858,115,2.207,116,2.207,117,2.207,118,2.207,119,2.207,120,2.207,121,2.207,122,2.207,123,2.207,124,2.207,125,2.207,126,2.207,127,2.836,128,2.207,129,2.207,130,1.629,131,2.224,132,2.224,133,2.207,134,1.858,135,2.207,136,2.207,137,2.207,138,2.207,139,2.015,140,2.207,141,1.858,142,2.207,143,2.207,144,1.858,145,2.207,146,1.023,147,2.836,148,3.369,149,2.207]],["title/injectables/AppService.html",[22,1.69,150,1.078]],["body/injectables/AppService.html",[3,0.273,4,0.307,5,0.273,7,0.342,8,1.474,9,3.945,10,3.945,12,0.028,14,0.801,16,1.474,19,0.755,21,0.914,22,2.15,30,0.342,31,0.158,32,1.539,33,1.833,39,1.372,45,0.018,46,0.018,113,1.539,139,1.833,150,1.372,151,1.674,152,2.261,153,2.479,154,1.837,155,2.023,156,1.977,157,3.065,158,1.054,159,0.981,160,0.416,161,0.85,162,2.118,163,3.065,164,2.023,165,3.065,166,3.161,167,1.372,168,1.674,169,3.259,170,4.157,171,3.606,172,2.261,173,2.58,174,2.58,175,2.261,176,2.827,177,2.58,178,2.261,179,3.606,180,2.34,181,1.539,182,2.58,183,2.58,184,2.58,185,2.58,186,2.58,187,2.58,188,2.261,189,2.827,190,3.606,191,2.261,192,3.606,193,2.58,194,2.58,195,2.58,196,2.261]],["title/controllers/AuthController.html",[0,1.69,197,2.013]],["body/controllers/AuthController.html",[0,1.249,2,1.153,3,0.221,4,0.249,5,0.221,7,0.277,8,1.268,11,1.851,12,0.028,14,0.598,16,1.268,19,0.913,21,0.742,30,0.277,31,0.092,32,1.249,37,1.642,39,0.797,42,2.72,45,0.015,46,0.015,68,1.359,113,2.821,127,3.104,132,3.422,134,3.697,153,2.205,158,1.268,159,1.18,160,0.501,161,1.023,181,1.249,197,2.204,198,2.095,199,2.095,200,2.095,201,2.626,202,2.204,203,1.836,204,3.07,205,3.582,206,2.488,207,2.488,208,3.1,209,1.836,210,3.686,211,2.488,212,2.095,213,2.488,214,2.488,215,2.488,216,2.205,217,1.836,218,1.359,219,2.433,220,2.488,221,1.488,222,1.642,223,2.488,224,2.488,225,2.488,226,2.488,227,2.488,228,1.851,229,2.095,230,2.488,231,2.488,232,2.095,233,3.697,234,3.686,235,3.825,236,2.488,237,2.095,238,2.095,239,3.686,240,3.686,241,2.095,242,2.095,243,3.686,244,2.488,245,2.488,246,2.488,247,2.488,248,3.686,249,2.488,250,2.488,251,2.488,252,2.095,253,3.686,254,2.488,255,2.488,256,2.488,257,3.686,258,2.095,259,2.488,260,2.488,261,3.686,262,2.488,263,1.836,264,2.488,265,2.488,266,2.488,267,2.488,268,2.488,269,2.488,270,2.488,271,2.488,272,2.095,273,2.488]],["title/classes/AuthDto.html",[31,0.124,204,1.839]],["body/classes/AuthDto.html",[3,0.374,4,0.421,5,0.374,7,0.469,11,2.653,12,0.027,14,0.857,19,0.741,30,0.469,31,0.195,45,0.022,46,0.022,160,0.718,167,1.941,204,2.887,274,1.166,275,3.54,276,1.692,277,2.3,278,2.678,279,4.204,280,4.204,281,4.204,282,4.204,283,4.449,284,5.779,285,5.284,286,3.102]],["title/classes/AuthInput.html",[31,0.124,287,1.444]],["body/classes/AuthInput.html",[3,0.301,4,0.338,5,0.301,7,0.377,12,0.028,14,0.743,30,0.685,31,0.221,45,0.019,46,0.019,146,2.699,160,0.757,167,1.967,274,0.938,276,1.467,277,2.318,278,2.409,287,2.39,288,1.45,289,3.38,290,3.38,291,2.123,292,1.697,293,2.123,294,1.965,295,1.576,296,2.301,297,2.301,298,3.182,299,1.566,300,1.847,301,2.84,302,1.847,303,1.099,304,1.697,305,2.798,306,1.697,307,1.697,308,1.566,309,1.697,310,1.45]],["title/modules/AuthModule.html",[47,1.34,59,1.839]],["body/modules/AuthModule.html",[2,2.213,3,0.32,4,0.36,5,0.32,12,0.028,19,1.077,21,1.072,30,0.401,31,0.132,45,0.02,46,0.02,47,2.134,49,1.666,50,1.805,51,2.15,52,2.15,53,1.805,54,3.207,55,2.15,59,3.539,60,3.07,62,2.856,63,2.15,64,1.964,66,3.524,91,2.653,197,3.207,216,3.07,217,2.653,311,3.027,312,3.595,313,3.027,314,3.656,315,3.595,316,3.027,317,3.595,318,2.653,319,3.027,320,3.595]],["title/classes/AuthPayload.html",[31,0.124,291,1.56]],["body/classes/AuthPayload.html",[3,0.308,4,0.346,5,0.308,7,0.386,12,0.028,14,0.561,30,0.689,31,0.223,45,0.019,46,0.019,146,2.721,160,0.714,167,1.936,274,0.96,276,1.491,277,2.094,278,1.604,287,2.257,288,1.484,291,2.438,292,2.641,293,2.157,294,1.997,295,1.602,296,2.337,297,2.337,298,3.208,299,1.604,300,1.891,301,2.874,302,1.891,303,1.117,304,1.738,305,2.825,306,1.738,307,1.738,308,1.604,309,1.738,310,1.484,321,3.461]],["title/classes/AuthResolver.html",[31,0.124,322,2.013]],["body/classes/AuthResolver.html",[3,0.27,4,0.304,5,0.27,7,0.339,8,1.464,11,2.137,12,0.028,14,0.797,16,1.464,19,1.024,30,0.339,31,0.112,33,2.545,39,1.363,45,0.017,46,0.017,73,1.816,79,2.005,88,2.674,89,2.557,109,3.584,130,3.141,154,1.826,158,1.69,159,1.573,160,0.667,161,1.363,197,3.569,201,2.545,202,2.545,203,2.241,204,3.26,208,3.569,209,2.241,216,2.918,217,2.241,221,2.545,274,0.843,287,2.108,316,2.557,322,2.545,323,2.557,324,3.037,325,3.037,326,4.137,327,4.257,328,3.037,329,4.257,330,3.037,331,1.816,332,3.037,333,2.557,334,3.037,335,3.037,336,3.037,337,3.037,338,3.037,339,3.037]],["title/classes/AuthResolver-1.html",[31,0.104,37,1.864,322,1.689]],["body/classes/AuthResolver-1.html",[3,0.305,4,0.343,5,0.305,7,0.382,8,1.591,11,1.72,12,0.028,14,0.75,16,1.179,19,1.063,30,0.382,31,0.126,33,3.13,39,1.097,45,0.019,46,0.019,73,2.049,154,1.983,155,2.261,156,2.072,158,1.591,159,1.481,160,0.628,161,1.283,162,1.983,168,1.872,221,3.13,274,0.951,303,1.447,322,2.765,333,2.884,340,2.884,341,3.094,342,3.367,343,3.426,344,3.426,345,4.624,346,3.426,347,2.528,348,2.528,349,2.884,350,2.528,351,2.884,352,2.528,353,3.426,354,3.426,355,3.426]],["title/injectables/AuthService.html",[150,1.078,216,1.69]],["body/injectables/AuthService.html",[3,0.193,4,0.217,5,0.193,7,0.242,8,1.144,12,0.028,14,0.735,16,1.391,19,0.945,21,0.647,30,0.242,31,0.08,39,1.294,45,0.014,46,0.014,68,1.185,113,2.275,150,1.065,151,1.185,153,2.849,154,1.426,155,1.432,156,1.676,158,1.559,159,1.451,160,0.615,161,1.257,162,1.426,164,2.668,167,1.294,168,1.185,180,2.208,181,2.453,188,1.601,201,1.988,202,1.988,203,2.453,204,2.931,208,2.417,209,2.453,216,1.669,219,2.991,221,2.417,222,2.668,228,2.588,232,2.799,233,1.827,272,1.827,277,2.135,292,1.089,294,0.931,295,1.391,296,1.089,297,1.089,303,1.087,304,2.029,318,1.601,356,1.827,357,3.325,358,2.668,359,4.531,360,2.17,361,2.17,362,3.325,363,2.17,364,2.195,365,2.17,366,2.17,367,2.17,368,1.827,369,3.325,370,3.325,371,2.17,372,2.17,373,2.17,374,2.17,375,1.297,376,2.17,377,1.827,378,1.827,379,2.17,380,2.17,381,2.991,382,2.17,383,3.325,384,2.17,385,2.17,386,4.531,387,2.17,388,2.17,389,1.827,390,2.17,391,3.325,392,3.325,393,2.17,394,2.17,395,2.17,396,2.17,397,2.17,398,1.827,399,1.827,400,4.042,401,2.17,402,2.17,403,2.17]],["title/classes/EditUserDto.html",[31,0.124,404,2.013]],["body/classes/EditUserDto.html",[3,0.34,4,0.383,5,0.34,7,0.427,11,2.775,12,0.027,14,0.896,19,0.674,30,0.427,31,0.183,45,0.02,46,0.02,160,0.751,161,1.726,167,1.992,274,1.061,276,1.593,277,2.2,283,4.188,286,2.822,306,2.775,307,2.775,404,2.975,405,4.929,406,3.221,407,3.825,408,3.825,409,4.974,410,3.825,411,3.825,412,5.854,413,5.528]],["title/interfaces/Flags.html",[414,2.013,415,2.222]],["body/interfaces/Flags.html",[3,0.259,4,0.291,5,0.259,7,0.324,12,0.028,19,0.727,31,0.107,37,1.919,39,0.931,45,0.017,46,0.017,73,1.739,113,2.072,144,2.448,159,0.931,160,0.56,161,1.449,172,4.228,180,1.588,228,2.959,238,4.04,241,3.475,263,3.045,276,1.321,288,1.247,310,1.77,331,2.468,414,1.739,415,4.044,416,2.448,417,1.919,418,1.919,419,5.516,420,4.824,421,3.475,422,2.907,423,2.907,424,2.907,425,2.907,426,3.045,427,5.516,428,4.127,429,4.127,430,2.907,431,4.798,432,4.127,433,2.907,434,2.907,435,2.907,436,2.907,437,2.907,438,2.907,439,2.907,440,2.907,441,2.145,442,2.907,443,2.907,444,2.448,445,2.907,446,2.145,447,2.907,448,2.907,449,2.907,450,2.907,451,2.907,452,2.907]],["title/classes/GraphqlContext.html",[31,0.124,88,1.69]],["body/classes/GraphqlContext.html",[3,0.37,4,0.416,5,0.37,7,0.463,12,0.028,14,0.85,19,0.732,30,0.585,31,0.193,45,0.021,46,0.021,88,2.632,131,3.793,132,3.793,160,0.712,205,4.24,218,2.269,274,1.152,276,1.679,295,1.429,303,1.379,414,2.483,453,3.064,454,3.793,455,4.153,456,4.153,457,3.136,458,3.497,459,2.483]],["title/classes/IMutation.html",[31,0.124,299,1.56]],["body/classes/IMutation.html",[3,0.277,4,0.311,5,0.277,7,0.347,8,1.489,12,0.028,14,0.702,16,1.489,30,0.67,31,0.216,45,0.018,46,0.018,146,2.621,158,1.489,159,1.386,160,0.731,161,1.201,167,1.811,201,2.589,202,2.589,274,0.863,277,1.981,278,1.442,287,2.577,288,1.335,291,2.306,292,1.562,293,2.306,294,1.857,295,1.489,296,2.173,297,2.173,298,3.399,299,2.006,300,2.365,301,3.09,302,2.365,303,1.039,304,1.562,305,2.702,306,1.562,307,1.562,308,1.442,309,1.562,310,1.335,375,2.589,460,3.112,461,3.112]],["title/classes/IQuery.html",[31,0.124,308,1.56]],["body/classes/IQuery.html",[3,0.306,4,0.344,5,0.306,7,0.383,8,1.594,12,0.028,14,0.557,16,1.183,30,0.688,31,0.222,45,0.019,46,0.019,146,2.714,160,0.629,167,1.876,274,0.954,277,2.086,278,1.593,287,2.249,288,1.474,291,2.147,292,1.726,293,2.147,294,1.988,295,1.594,296,2.327,297,2.327,298,3.37,299,1.593,300,1.878,301,3.066,302,1.878,303,1.258,304,1.726,305,2.817,306,1.726,307,1.726,308,2.147,309,1.726,310,1.474,462,3.437]],["title/classes/JwtGuard.html",[31,0.124,463,2.222]],["body/classes/JwtGuard.html",[3,0.415,4,0.467,5,0.415,12,0.027,14,0.757,19,0.822,30,0.52,31,0.172,45,0.023,46,0.023,154,2.597,274,1.295,459,2.791,463,3.72,464,3.929,465,4.667,466,4.667,467,3.444,468,4.667,469,3.444]],["title/injectables/JwtStrategy.html",[150,1.078,314,2.013]],["body/injectables/JwtStrategy.html",[3,0.219,4,0.247,5,0.219,7,0.275,8,1.259,12,0.028,14,0.784,16,1.259,19,0.953,21,0.734,30,0.275,31,0.091,32,1.237,39,1.547,45,0.015,46,0.015,68,1.346,92,2.611,98,1.818,106,2.7,131,1.626,150,1.172,151,1.346,154,1.057,156,1.787,158,1.502,159,1.398,160,0.735,161,1.211,162,1.873,167,1.547,168,1.346,218,1.346,219,3.19,221,3.35,222,2.416,228,2.192,229,2.074,235,1.818,258,3.081,276,1.172,277,1.737,294,1.057,295,1.259,303,0.878,310,2.073,314,2.188,319,2.074,358,2.416,364,2.416,381,1.626,389,2.074,398,2.074,399,2.074,457,1.473,459,1.473,467,1.818,469,1.818,470,2.074,471,4.366,472,4.366,473,3.66,474,3.66,475,2.074,476,3.66,477,3.66,478,4.832,479,2.464,480,3.66,481,3.66,482,2.464,483,2.464,484,2.464,485,2.074,486,2.464,487,2.074,488,2.464,489,2.464,490,2.464,491,2.464,492,2.464,493,2.464,494,2.464,495,3.66,496,2.464,497,2.464,498,2.464,499,2.464,500,2.464,501,2.464,502,2.464,503,3.66,504,2.464,505,2.464,506,2.074,507,2.464,508,2.464]],["title/modules/PrismaModule.html",[47,1.34,60,1.69]],["body/modules/PrismaModule.html",[3,0.359,4,0.404,5,0.359,12,0.027,19,0.908,21,1.204,30,0.45,31,0.149,45,0.021,46,0.021,47,2.257,49,1.871,50,2.027,51,2.414,52,2.414,53,2.027,54,3.392,55,3.392,60,3.22,62,3.08,63,2.414,64,2.206,156,2.473,509,3.399,510,3.399,511,3.399,512,4.038,513,5.151,514,4.038]],["title/injectables/PrismaService.html",[150,1.078,156,1.245]],["body/injectables/PrismaService.html",[3,0.294,4,0.216,5,0.192,7,0.24,8,1.138,12,0.028,14,0.732,16,1.385,19,0.858,21,0.643,30,0.24,31,0.079,39,1.289,45,0.014,46,0.014,68,1.178,83,1.591,106,1.591,113,1.661,139,1.289,150,1.059,151,1.178,153,2.773,154,0.925,156,1.224,158,1.138,159,1.059,160,0.449,161,0.918,162,0.925,176,1.423,181,2.267,189,1.423,196,1.591,219,2.981,222,1.423,228,2.446,347,2.441,352,1.591,377,1.815,381,1.423,459,1.979,469,1.591,475,2.786,487,1.815,515,1.591,516,4.026,517,4.516,518,3.309,519,5.141,520,2.156,521,2.156,522,3.309,523,4.516,524,2.156,525,2.156,526,2.786,527,2.156,528,1.815,529,1.815,530,2.441,531,1.815,532,3.802,533,1.423,534,3.802,535,3.39,536,1.815,537,2.971,538,2.156,539,2.156,540,2.156,541,1.815,542,2.156,543,2.156,544,2.156,545,3.309,546,2.156,547,2.156,548,2.156,549,2.156,550,2.156,551,2.156,552,2.156,553,2.156,554,2.156,555,2.786,556,3.309,557,2.156,558,2.156,559,2.156,560,2.156,561,2.156,562,2.156,563,2.156,564,2.156,565,2.156,566,2.156,567,2.156,568,2.156,569,2.156,570,2.156,571,1.815,572,2.156,573,2.786,574,2.156,575,2.156,576,2.156,577,2.156,578,2.156,579,2.156,580,2.156,581,2.156,582,2.156,583,2.156,584,2.156,585,2.156,586,2.156,587,1.815,588,2.156,589,2.156,590,2.156,591,2.156,592,2.156,593,2.156,594,2.156,595,2.156,596,2.156,597,1.815,598,2.156]],["title/classes/RequestWithUser.html",[31,0.124,454,2.222]],["body/classes/RequestWithUser.html",[3,0.377,4,0.424,5,0.377,7,0.473,12,0.027,14,0.687,19,0.747,30,0.592,31,0.196,45,0.022,46,0.022,88,2.128,131,2.798,132,2.798,160,0.576,205,3.919,218,2.316,274,1.176,276,1.701,295,1.458,303,1.533,414,2.535,453,3.128,454,3.829,457,3.469,458,3.569,459,3.177,599,4.239]],["title/classes/ServiceStatus.html",[31,0.124,169,2.222]],["body/classes/ServiceStatus.html",[3,0.255,4,0.287,5,0.255,7,0.32,9,2.115,10,2.115,12,0.028,14,0.841,19,0.72,21,0.854,22,1.439,30,0.32,31,0.151,32,1.439,33,1.714,36,3.143,39,1.308,45,0.017,46,0.017,113,2.051,139,1.714,150,1.308,152,2.115,153,1.439,154,1.752,156,1.511,158,0.986,159,0.918,160,0.705,161,0.795,162,1.752,166,2.115,167,1.662,168,1.566,169,3.426,170,5.141,171,4.802,172,3.829,173,4.619,174,4.619,175,3.015,176,2.697,177,2.413,178,2.115,179,3.44,180,2.232,181,1.439,182,2.413,183,2.413,184,2.413,185,2.413,186,2.413,187,2.413,188,2.115,189,2.697,190,3.44,191,2.115,192,3.44,193,2.413,194,2.413,195,2.413,196,2.115,274,0.795,276,1.308,441,3.513,600,2.866,601,2.866,602,2.866,603,2.866,604,2.866]],["title/classes/SignUpPayload.html",[31,0.124,293,1.56]],["body/classes/SignUpPayload.html",[3,0.288,4,0.323,5,0.288,7,0.36,12,0.028,14,0.887,30,0.677,31,0.218,45,0.018,46,0.018,146,2.812,160,0.805,167,1.897,274,0.896,276,1.422,277,2.282,278,1.497,287,2.178,288,1.385,291,2.058,292,1.622,293,2.353,294,2.345,295,1.747,296,2.745,297,2.745,298,3.132,299,1.497,300,1.765,301,2.774,302,1.765,303,1.066,304,1.622,305,2.745,306,1.622,307,1.622,308,1.497,309,1.622,310,1.385,605,3.23,606,3.23,607,3.23,608,3.23]],["title/classes/User.html",[31,0.124,303,0.808]],["body/classes/User.html",[3,0.265,4,0.298,5,0.265,7,0.332,12,0.028,14,0.962,30,0.662,31,0.213,45,0.017,46,0.017,146,2.749,160,0.836,161,1.602,167,1.849,274,0.825,276,1.343,277,2.214,278,1.378,287,2.084,288,1.276,291,1.944,292,1.494,293,1.944,294,2.263,295,1.672,296,2.649,297,2.649,298,3.04,299,1.378,300,1.625,301,2.655,302,1.625,303,1.166,304,2.44,305,2.978,306,2.44,307,2.44,308,1.378,309,1.494,310,1.276,609,2.975,610,2.975,611,2.975,612,2.975,613,2.975,614,2.975,615,2.975]],["title/controllers/UserController.html",[0,1.69,342,1.839]],["body/controllers/UserController.html",[0,1.427,2,1.317,3,0.253,4,0.284,5,0.253,7,0.317,8,1.397,11,2.379,12,0.028,14,0.768,16,1.63,19,1.002,21,0.847,30,0.317,31,0.105,32,1.427,39,1.517,45,0.017,46,0.017,150,1.3,153,2.379,158,1.63,159,1.517,160,0.643,161,1.315,164,1.876,166,2.097,181,1.427,191,2.097,199,2.393,208,3.27,212,3.419,295,1.956,303,1.483,341,2.379,342,2.219,348,2.097,351,2.393,352,2.097,364,3.413,404,3.092,457,1.7,463,1.876,616,2.393,617,2.393,618,3.419,619,3.419,620,4.061,621,2.393,622,2.842,623,2.842,624,2.393,625,2.842,626,2.842,627,2.842,628,2.842,629,2.842,630,3.419,631,4.061,632,2.842,633,2.842,634,2.097,635,2.842,636,4.739,637,2.842,638,2.842,639,2.842,640,2.842,641,2.842,642,2.842,643,2.393,644,2.842,645,2.842,646,2.842,647,2.842,648,2.842]],["title/modules/UserModule.html",[47,1.34,61,2.013]],["body/modules/UserModule.html",[2,2.202,3,0.318,4,0.357,5,0.318,12,0.028,19,1.046,21,1.064,30,0.398,31,0.132,45,0.019,46,0.019,47,2.127,49,1.654,50,1.792,51,2.135,52,2.135,53,1.792,54,3.196,55,2.135,59,3.334,60,3.064,61,3.928,62,2.843,63,2.135,64,1.95,66,3.507,69,3.006,91,2.634,341,3.064,342,3.456,348,2.634,349,3.006,649,3.006,650,3.57,651,3.006,652,3.57]],["title/injectables/UserService.html",[150,1.078,341,1.69]],["body/injectables/UserService.html",[3,0.278,4,0.312,5,0.278,7,0.348,8,1.492,12,0.028,14,0.808,16,1.492,19,0.879,21,0.93,30,0.348,31,0.115,32,1.567,39,1.389,45,0.018,46,0.018,150,1.389,151,1.705,153,2.943,154,1.339,155,2.06,156,1.993,158,1.715,159,1.597,160,0.677,161,1.383,162,1.861,164,2.864,168,1.705,181,2.178,208,3.505,228,2.178,294,1.861,295,2.017,303,1.293,341,2.178,364,3.738,375,1.867,404,3.223,618,3.653,619,3.653,621,3.653,624,3.653,630,3.653,653,2.628,654,3.121,655,3.121,656,3.121,657,3.121,658,3.121,659,4.338,660,3.121]],["title/coverage.html",[661,3.372]],["body/coverage.html",[0,2.155,1,1.58,5,0.213,6,2.016,12,0.028,22,1.202,31,0.23,45,0.015,46,0.015,53,1.202,65,2.643,88,1.202,92,1.432,94,1.767,150,1.714,152,2.643,156,0.885,160,0.325,169,1.58,180,1.308,197,1.432,198,2.016,204,1.308,216,1.202,263,2.643,275,2.016,287,1.027,288,2.296,291,1.109,293,1.109,299,1.109,303,0.859,308,1.109,314,1.432,322,2.142,323,2.016,331,1.432,340,2.016,341,1.202,342,1.957,350,1.767,356,2.016,404,1.432,405,2.016,406,2.016,414,2.142,415,2.365,417,3.367,418,3.367,446,1.767,453,3.167,454,1.58,463,1.58,464,2.016,470,2.016,506,5.676,515,3.167,530,1.767,537,1.767,616,3.016,634,1.767,653,2.016,661,1.767,662,1.767,663,2.394,664,2.394,665,5.706,666,5.101,667,5.834,668,6.031,669,5.353,670,5.101,671,3.016,672,3.016,673,2.016,674,2.394,675,2.016,676,2.394,677,2.394]],["title/dependencies.html",[50,2.029,678,2.377]],["body/dependencies.html",[12,0.028,21,1.001,27,2.478,28,3.366,31,0.168,45,0.019,46,0.019,50,1.686,68,1.835,70,2.827,73,2.008,75,2.827,79,3.836,82,2.827,83,2.478,86,2.827,114,2.827,147,2.827,162,1.44,218,1.835,235,2.478,286,2.478,318,2.478,358,2.217,368,2.827,467,2.478,485,3.841,526,2.827,528,2.827,529,2.827,555,2.827,679,3.358,680,3.358,681,3.358,682,5.181,683,3.358,684,3.358,685,3.358,686,3.358,687,3.358,688,3.358,689,3.358,690,3.358,691,3.358,692,3.358,693,3.358,694,3.358,695,3.358,696,3.358,697,3.358,698,3.358,699,3.358,700,3.358,701,3.358,702,3.358,703,3.358,704,3.358,705,3.358,706,3.358,707,3.358,708,3.358,709,3.358,710,3.358,711,3.358,712,2.827,713,3.358,714,3.358,715,3.358,716,3.358,717,3.358,718,3.358,719,3.358,720,3.358,721,3.358]],["title/miscellaneous/functions.html",[722,1.543,723,3.403]],["body/miscellaneous/functions.html",[7,0.535,12,0.025,45,0.023,46,0.023,53,3.076,158,1.651,159,1.537,161,1.332,331,2.87,417,3.168,418,3.783,426,3.541,673,4.825,675,4.041,722,2.622,723,4.041,724,4.799,725,4.041]],["title/index.html",[7,0.315,726,2.377,727,2.377]],["body/index.html",[2,1.775,12,0.027,45,0.016,46,0.016,47,1.044,49,1.775,79,1.731,92,2.708,95,3.675,98,3.341,101,2.208,103,2.208,104,2.208,107,3.226,141,2.208,162,1.942,176,2.529,178,1.935,200,2.208,201,1.568,202,1.568,237,2.208,242,2.208,252,2.208,278,1.215,303,0.629,358,1.731,375,2.291,420,2.208,533,1.731,541,3.226,571,3.226,587,2.208,597,3.226,617,3.226,643,3.812,661,1.935,662,3.341,712,3.812,728,2.623,729,2.208,730,2.623,731,3.832,732,5.714,733,3.832,734,2.623,735,2.623,736,2.623,737,2.623,738,2.623,739,2.623,740,2.623,741,2.623,742,2.623,743,3.832,744,2.623,745,2.623,746,2.623,747,3.832,748,2.623,749,2.623,750,2.623,751,2.623,752,3.832,753,4.528,754,2.623,755,2.623,756,2.623,757,2.623,758,2.623,759,2.623,760,3.832,761,2.623,762,2.623,763,2.623,764,2.623,765,2.623,766,2.623,767,2.623,768,2.623,769,2.623,770,2.623,771,2.623,772,2.208,773,2.623,774,2.623,775,2.623,776,2.623,777,2.623,778,2.623,779,2.623,780,2.623,781,3.832,782,4.528,783,2.623,784,2.623,785,2.623,786,2.623,787,2.623,788,2.623,789,2.623,790,2.623,791,2.623,792,2.623,793,2.623,794,2.623,795,2.623,796,2.623,797,2.623,798,2.623,799,2.623,800,2.623,801,5.858,802,2.623,803,2.623,804,2.623,805,2.208,806,2.623,807,2.623,808,2.623,809,5.533,810,2.623,811,2.623,812,2.623,813,2.623,814,2.623,815,2.623,816,1.935,817,2.623]],["title/license.html",[726,2.377,727,2.377,818,2.083]],["body/license.html",[12,0.02,45,0.02,46,0.02,64,1.957,189,2.365,218,1.957,378,4.012,533,2.365,662,2.643,772,3.016,805,4.012,816,2.643,818,2.643,819,5.353,820,3.583,821,3.583,822,3.583,823,4.765,824,3.583,825,3.583,826,3.583,827,3.583,828,3.583,829,3.583,830,6.409,831,3.583,832,3.583,833,5.353,834,3.583,835,4.765,836,3.583,837,3.583,838,3.583,839,3.583,840,3.583,841,3.583,842,3.583,843,3.583,844,3.583,845,4.765,846,3.583,847,3.583,848,3.583,849,3.583,850,3.583,851,3.583,852,3.583,853,4.765,854,4.765,855,3.583,856,3.583,857,3.583,858,3.583,859,3.583,860,3.583,861,3.583,862,3.583,863,3.583,864,3.583,865,3.583,866,3.583,867,3.583,868,3.583,869,3.583,870,3.583,871,3.583,872,3.583,873,3.583,874,3.583,875,3.583,876,3.583,877,3.583,878,3.583,879,3.583,880,3.583,881,3.583]],["title/modules.html",[49,2.117]],["body/modules.html",[12,0.023,45,0.023,46,0.023,48,3.153,49,2.213,59,2.61,60,2.398,61,2.856,882,6.337,883,6.337,884,6.337,885,6.337]],["title/overview.html",[886,3.847]],["body/overview.html",[2,1.582,12,0.027,22,2.623,45,0.019,46,0.019,47,1.359,48,4.235,49,1.582,50,1.714,51,2.042,52,2.042,53,1.714,54,2.042,55,2.042,56,2.875,57,2.875,58,2.875,59,3.505,60,3.144,61,3.871,62,2.759,63,2.042,64,1.865,151,1.865,156,2.277,216,2.623,274,0.947,311,2.875,313,2.875,314,3.125,341,2.623,342,2.855,416,2.875,509,2.875,510,2.875,511,2.875,573,2.875,649,2.875,651,2.875,886,2.875,887,3.414,888,3.414,889,3.414,890,3.414]],["title/properties.html",[276,1.294,678,2.377]],["body/properties.html",[12,0.028,45,0.023,46,0.023,276,1.508,729,3.966,816,3.475,818,3.475,891,4.71,892,4.71,893,4.71,894,4.71,895,4.71,896,4.71,897,5.667,898,4.71,899,4.71,900,4.71,901,4.71,902,4.71]],["title/miscellaneous/typealiases.html",[722,1.543,903,4.042]],["body/miscellaneous/typealiases.html",[7,0.551,12,0.025,45,0.024,46,0.024,146,2.701,160,0.671,288,2.118,305,2.926,309,2.48,310,2.118,722,2.698,904,4.939,905,5.829]],["title/miscellaneous/variables.html",[722,1.543,906,3.403]],["body/miscellaneous/variables.html",[3,0.26,7,0.325,12,0.028,36,4.047,39,1.674,45,0.017,46,0.017,65,2.151,88,1.464,92,2.473,93,2.455,94,3.051,95,2.151,130,2.151,139,1.744,160,0.653,167,1.539,175,3.051,180,1.593,228,2.413,303,0.992,326,3.482,331,2.473,347,2.151,350,3.051,375,3.127,381,1.925,415,3.172,417,1.925,418,3.452,421,2.455,426,2.151,441,4.523,444,2.455,446,3.051,457,1.744,515,2.151,530,3.051,531,2.455,532,4.403,533,1.925,534,4.403,535,4.046,536,2.455,537,3.051,634,3.051,671,2.455,672,4.046,722,1.593,725,4.046,906,2.455,907,4.135,908,4.135,909,4.135,910,4.135,911,4.135,912,2.916,913,2.916,914,2.916,915,2.916,916,2.916,917,2.916]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":506,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["0.1.13",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":892,"title":{},"body":{"properties.html":{}}}],["0.30.3",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":37,"title":{"classes/AuthResolver-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["1.4.6",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["1.78.0",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["12.0.7",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["12.0.8",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":890,"title":{},"body":{"overview.html":{}}}],["16.7.1",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["17.9.2",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["18.0.2",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":573,"title":{},"body":{"injectables/PrismaService.html":{},"overview.html":{}}}],["2.0.0",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":821,"title":{},"body":{"license.html":{}}}],["3",{"_index":888,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["3600000",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["4",{"_index":887,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":497,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5.2.3",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":889,"title":{},"body":{"overview.html":{}}}],["60",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["7.8.1",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":852,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":298,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["access_token",{"_index":292,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["accessible",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":876,"title":{},"body":{"license.html":{}}}],["actual",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["aliases",{"_index":904,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":739,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":843,"title":{},"body":{"license.html":{}}}],["angular",{"_index":788,"title":{},"body":{"index.html":{}}}],["api",{"_index":643,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["api.bookstore.nas",{"_index":728,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["apollodriver",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagegraphqlplayground",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["app.close",{"_index":593,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["app.dto",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appended",{"_index":501,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":751,"title":{},"body":{"index.html":{}}}],["arg",{"_index":428,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice",{"_index":440,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(1).split",{"_index":437,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(2",{"_index":433,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.startswith",{"_index":429,"title":{},"body":{"interfaces/Flags.html":{}}}],["argon",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(dto.password",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.verify(user.hash",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["args",{"_index":331,"title":{},"body":{"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":424,"title":{},"body":{"interfaces/Flags.html":{}}}],["arising",{"_index":880,"title":{},"body":{"license.html":{}}}],["array",{"_index":425,"title":{},"body":{"interfaces/Flags.html":{}}}],["asia/kolkata",{"_index":591,"title":{},"body":{"injectables/PrismaService.html":{}}}],["associated",{"_index":831,"title":{},"body":{"license.html":{}}}],["async",{"_index":153,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth.service",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth/auth.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/decorator",{"_index":351,"title":{},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{}}}],["auth/guard",{"_index":633,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":197,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authdto",{"_index":204,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authenticated",{"_index":740,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":774,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":466,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authguard('jwt",{"_index":468,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authinput",{"_index":287,"title":{"classes/AuthInput.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":901,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":775,"title":{},"body":{"index.html":{}}}],["authors",{"_index":869,"title":{},"body":{"license.html":{}}}],["authpayload",{"_index":291,"title":{"classes/AuthPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["authresolver",{"_index":322,"title":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{}},"body":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"coverage.html":{}}}],["authservice",{"_index":216,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":894,"title":{},"body":{"properties.html":{}}}],["between",{"_index":768,"title":{},"body":{"index.html":{}}}],["body",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["bookstore.nas",{"_index":895,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":885,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":882,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":898,"title":{},"body":{"properties.html":{}}}],["built",{"_index":731,"title":{},"body":{"index.html":{}}}],["business",{"_index":752,"title":{},"body":{"index.html":{}}}],["c",{"_index":820,"title":{},"body":{"license.html":{}}}],["cache",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('home",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["cachemodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(5",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(number.max_safe_integer",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(undefined)@get('health",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["case",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["catch",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch((err",{"_index":187,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["chalk",{"_index":559,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.cyan(json.stringify(e.params",{"_index":564,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.green(e.query",{"_index":562,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.magenta(`${e.duration}ms",{"_index":566,"title":{},"body":{"injectables/PrismaService.html":{}}}],["charge",{"_index":827,"title":{},"body":{"license.html":{}}}],["claim",{"_index":872,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":274,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"overview.html":{}}}],["cleandb",{"_index":517,"title":{},"body":{"injectables/PrismaService.html":{}}}],["clear",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":509,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":510,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":511,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":649,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":650,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":651,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["compodoc",{"_index":785,"title":{},"body":{"index.html":{}}}],["compression",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["concerns",{"_index":756,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":851,"title":{},"body":{"license.html":{}}}],["config",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":552,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":494,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mode",{"_index":487,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":773,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configuration",{"_index":770,"title":{},"body":{"index.html":{}}}],["connect",{"_index":183,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connected",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connecting",{"_index":586,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"license.html":{}}}],["connectors/postgresql#configuring",{"_index":548,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.count('db",{"_index":184,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["console.debug",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["console.debug(req.cookies",{"_index":504,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.error",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ServiceStatus.html":{}}}],["console.info(new",{"_index":585,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('extracted",{"_index":507,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('flags",{"_index":445,"title":{},"body":{"interfaces/Flags.html":{}}}],["console.log(chalk.yellow('duration",{"_index":565,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('params",{"_index":563,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('query",{"_index":561,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('duration",{"_index":583,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('params",{"_index":581,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('query",{"_index":579,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":154,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":324,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(config",{"_index":475,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(ok",{"_index":600,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["constructor(prisma",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["context",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":877,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":635,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["cookie",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["cookiename",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["cookies",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["copies",{"_index":845,"title":{},"body":{"license.html":{}}}],["copy",{"_index":805,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":819,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":661,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":741,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":296,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["createparamdecorator",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":744,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":326,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["ctx.req",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.res",{"_index":339,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentflag",{"_index":427,"title":{},"body":{"interfaces/Flags.html":{}}}],["damages",{"_index":873,"title":{},"body":{"license.html":{}}}],["data",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":587,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["database_url",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["datasources",{"_index":550,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["datetime",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["db",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["db_connected",{"_index":537,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbstatus",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.debug",{"_index":195,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.ok",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.status",{"_index":194,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["deal",{"_index":832,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":881,"title":{},"body":{"license.html":{}}}],["debug",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"classes/EditUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["definitionsfactory",{"_index":446,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["definitionsfactory.generate",{"_index":447,"title":{},"body":{"interfaces/Flags.html":{}}}],["delete",{"_index":630,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":647,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":618,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@getuser('userid",{"_index":646,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":621,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":729,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["dev/test/prod",{"_index":804,"title":{},"body":{"index.html":{}}}],["development",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["distribute",{"_index":841,"title":{},"body":{"license.html":{}}}],["docs",{"_index":793,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":662,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":539,"title":{},"body":{"injectables/PrismaService.html":{}}}],["domain",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["domain.com",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["down",{"_index":596,"title":{},"body":{"injectables/PrismaService.html":{}}}],["driver",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.password",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["due",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["e",{"_index":558,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.g",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["e.params",{"_index":578,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.query",{"_index":567,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e2e",{"_index":541,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["edituser",{"_index":619,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituser(@getuser('userid",{"_index":639,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(userid",{"_index":624,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituserdto",{"_index":404,"title":{"classes/EditUserDto.html":{}},"body":{"classes/EditUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["em",{"_index":795,"title":{},"body":{"index.html":{}}}],["email",{"_index":277,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["emit",{"_index":532,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":518,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":522,"title":{},"body":{"injectables/PrismaService.html":{}}}],["env",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":806,"title":{},"body":{"index.html":{}}}],["env.local",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["env.prod",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["envfile",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["error",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["error.code",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["event",{"_index":533,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":544,"title":{},"body":{"injectables/PrismaService.html":{}}}],["executioncontext",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiration",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":459,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{}}}],["extract",{"_index":423,"title":{},"body":{"interfaces/Flags.html":{}}}],["extractflags",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractflags(args",{"_index":426,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":484,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":491,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":489,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie",{"_index":473,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie(req",{"_index":477,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":190,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["false",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["fieldresolverenhancers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":772,"title":{},"body":{"index.html":{},"license.html":{}}}],["fill",{"_index":807,"title":{},"body":{"index.html":{}}}],["find",{"_index":794,"title":{},"body":{"index.html":{}}}],["first",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firstname",{"_index":306,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["fitness",{"_index":865,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["fixme:unsure",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["flag",{"_index":431,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys",{"_index":436,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys.foreach((key",{"_index":438,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagname",{"_index":432,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags",{"_index":415,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["flags.w",{"_index":452,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags.watch",{"_index":451,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[currentflag",{"_index":443,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[flagname",{"_index":434,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[key",{"_index":439,"title":{},"body":{"interfaces/Flags.html":{}}}],["followed",{"_index":749,"title":{},"body":{"index.html":{}}}],["following",{"_index":850,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('credentials",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('incorrect",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":527,"title":{},"body":{"injectables/PrismaService.html":{}}}],["format(query",{"_index":569,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formattedquery",{"_index":568,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formatter",{"_index":529,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["free",{"_index":826,"title":{},"body":{"license.html":{}}}],["function",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{},"coverage.html":{}}}],["functional",{"_index":737,"title":{},"body":{"index.html":{}}}],["functions",{"_index":723,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":848,"title":{},"body":{"license.html":{}}}],["g",{"_index":800,"title":{},"body":{"index.html":{}}}],["generate",{"_index":789,"title":{},"body":{"index.html":{}}}],["generated",{"_index":792,"title":{},"body":{"index.html":{}}}],["get('health",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":637,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@cachekey('home')@cachettl(number.max_safe_integer",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["gethealth",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["getme",{"_index":620,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(@getuser",{"_index":638,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(user",{"_index":627,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":726,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":634,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getusergraphql",{"_index":350,"title":{},"body":{"classes/AuthResolver-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":513,"title":{},"body":{"modules/PrismaModule.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":825,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"dependencies.html":{},"index.html":{}}}],["graphql:schema",{"_index":736,"title":{},"body":{"index.html":{}}}],["graphqlcontext",{"_index":88,"title":{"classes/GraphqlContext.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqldatetime",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqldefinitionsfactory",{"_index":421,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["handled",{"_index":753,"title":{},"body":{"index.html":{}}}],["hash",{"_index":304,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["hashing",{"_index":779,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":786,"title":{},"body":{"index.html":{}}}],["here",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":824,"title":{},"body":{"license.html":{}}}],["hiro",{"_index":822,"title":{},"body":{"license.html":{}}}],["holders",{"_index":870,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":896,"title":{},"body":{"properties.html":{}}}],["hour",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["http",{"_index":757,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('signin",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["httponly",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["https",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com/fundamentals/lifecycle",{"_index":543,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://github.com/jsfame/api.bookstore.nas",{"_index":897,"title":{},"body":{"properties.html":{}}}],["https://github.com/jsfame/api.bookstore.nas/issues",{"_index":899,"title":{},"body":{"properties.html":{}}}],["https://jsfame.github.io/api.bookstore.nas",{"_index":796,"title":{},"body":{"index.html":{}}}],["https://www.prisma.io/docs/concepts/database",{"_index":547,"title":{},"body":{"injectables/PrismaService.html":{}}}],["httpstatus",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":294,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":556,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ignoreexpiration",{"_index":492,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implemented",{"_index":759,"title":{},"body":{"index.html":{}}}],["implements",{"_index":538,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":861,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["import('chalk",{"_index":560,"title":{},"body":{"injectables/PrismaService.html":{}}}],["imports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["imutation",{"_index":299,"title":{"classes/IMutation.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["included",{"_index":855,"title":{},"body":{"license.html":{}}}],["including",{"_index":835,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":523,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":150,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":151,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inspect",{"_index":745,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":787,"title":{},"body":{"index.html":{}}}],["install",{"_index":799,"title":{},"body":{"index.html":{}}}],["installation",{"_index":797,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":802,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["interactions",{"_index":761,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":414,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":416,"title":{},"body":{"interfaces/Flags.html":{},"overview.html":{}}}],["iquery",{"_index":308,"title":{"classes/IQuery.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["isemail",{"_index":283,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{}}}],["isemail()@isnotempty",{"_index":279,"title":{},"body":{"classes/AuthDto.html":{}}}],["isemail()@isoptional",{"_index":407,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isglobal",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":284,"title":{},"body":{"classes/AuthDto.html":{}}}],["iso",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["isoptional",{"_index":412,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring",{"_index":413,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring()@isoptional",{"_index":409,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstrongpassword",{"_index":285,"title":{},"body":{"classes/AuthDto.html":{}}}],["isstrongpassword()@isnotempty",{"_index":281,"title":{},"body":{"classes/AuthDto.html":{}}}],["items",{"_index":746,"title":{},"body":{"index.html":{}}}],["jest",{"_index":783,"title":{},"body":{"index.html":{}}}],["john",{"_index":442,"title":{},"body":{"interfaces/Flags.html":{}}}],["joi",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(2",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('hiro@jwt#token",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().valid('dev",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":422,"title":{},"body":{"interfaces/Flags.html":{}}}],["join(process.cwd",{"_index":449,"title":{},"body":{"interfaces/Flags.html":{}}}],["jwt",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt_max_age",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt_secret",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtconstants",{"_index":471,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":488,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":463,"title":{"classes/JwtGuard.html":{}},"body":{"classes/JwtGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":314,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtstrategy.extractjwtfromcookie",{"_index":490,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["keywordcase",{"_index":574,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kind",{"_index":860,"title":{},"body":{"license.html":{}}}],["kleur",{"_index":526,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["kleur.cyan(json.stringify(e.params",{"_index":582,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.green(formattedquery",{"_index":580,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.magenta(`${e.duration}ms",{"_index":584,"title":{},"body":{"injectables/PrismaService.html":{}}}],["laciferin@gmail.com",{"_index":902,"title":{},"body":{"properties.html":{}}}],["landing",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["language",{"_index":570,"title":{},"body":{"injectables/PrismaService.html":{}}}],["lastname",{"_index":307,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["layers",{"_index":769,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":534,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":874,"title":{},"body":{"license.html":{}}}],["liable",{"_index":871,"title":{},"body":{"license.html":{}}}],["license",{"_index":818,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":817,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":836,"title":{},"body":{"license.html":{}}}],["limited",{"_index":862,"title":{},"body":{"license.html":{}}}],["linesbetweenqueries",{"_index":576,"title":{},"body":{"injectables/PrismaService.html":{}}}],["literal",{"_index":481,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["log",{"_index":553,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logevents",{"_index":530,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":597,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["long",{"_index":430,"title":{},"body":{"interfaces/Flags.html":{}}}],["manage",{"_index":742,"title":{},"body":{"index.html":{}}}],["management",{"_index":771,"title":{},"body":{"index.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(@getusergraphql",{"_index":354,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["me(user",{"_index":344,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["merchantability",{"_index":864,"title":{},"body":{"license.html":{}}}],["merge",{"_index":839,"title":{},"body":{"license.html":{}}}],["message",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["methodologies",{"_index":748,"title":{},"body":{"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["milliseconds",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":722,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":816,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":838,"title":{},"body":{"license.html":{}}}],["modular",{"_index":750,"title":{},"body":{"index.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["morph",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["mutation",{"_index":332,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signin",{"_index":327,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signup",{"_index":329,"title":{},"body":{"classes/AuthResolver.html":{}}}],["name",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["needs",{"_index":640,"title":{},"body":{"controllers/UserController.html":{}}}],["nest/swagger",{"_index":758,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":712,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"interfaces/Flags.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":467,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":868,"title":{},"body":{"license.html":{}}}],["notice",{"_index":853,"title":{},"body":{"license.html":{}}}],["npm",{"_index":798,"title":{},"body":{"index.html":{}}}],["null",{"_index":310,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":305,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":295,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object(dto",{"_index":765,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":829,"title":{},"body":{"license.html":{}}}],["ok",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["onmoduledestroy",{"_index":542,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":519,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":161,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["orders",{"_index":743,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":879,"title":{},"body":{"license.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outputas",{"_index":450,"title":{},"body":{"interfaces/Flags.html":{}}}],["over",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["overview",{"_index":886,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":776,"title":{},"body":{"index.html":{}}}],["p2002",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":678,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["parameters",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":577,"title":{},"body":{"injectables/PrismaService.html":{}}}],["parser",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":866,"title":{},"body":{"license.html":{}}}],["passport",{"_index":485,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passport.js",{"_index":735,"title":{},"body":{"index.html":{}}}],["passportjs",{"_index":777,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":483,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":486,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":278,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"index.html":{}}}],["patch",{"_index":631,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["pattern",{"_index":766,"title":{},"body":{"index.html":{}}}],["payload",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":498,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":495,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":823,"title":{},"body":{"license.html":{}}}],["permit",{"_index":846,"title":{},"body":{"license.html":{}}}],["person",{"_index":828,"title":{},"body":{"license.html":{}}}],["persons",{"_index":847,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":763,"title":{},"body":{"index.html":{}}}],["playground",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["pnpm",{"_index":801,"title":{},"body":{"index.html":{}}}],["port",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":857,"title":{},"body":{"license.html":{}}}],["post",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signin",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":571,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prefix",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["prerequisite",{"_index":803,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.logdefinition",{"_index":531,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":514,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":352,"title":{},"body":{"classes/AuthResolver-1.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{}}}],["prisma/client/runtime/library",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["prisma/prisma.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":168,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":516,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientknownrequesterror",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismaclientunknownrequesterror",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismamodule",{"_index":60,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":156,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["process.argv.slice(2",{"_index":444,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["process.env.force_color",{"_index":554,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.mode",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["prod",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["production",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project",{"_index":790,"title":{},"body":{"index.html":{}}}],["promise",{"_index":301,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["properties",{"_index":276,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"properties.html":{}}}],["provided",{"_index":858,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["publish",{"_index":840,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":867,"title":{},"body":{"license.html":{}}}],["pwmatches",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":347,"title":{},"body":{"classes/AuthResolver-1.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["query('me",{"_index":345,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"classes/ServiceStatus.html":{}}}],["reflect",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["replace",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["repo",{"_index":815,"title":{},"body":{"index.html":{}}}],["repository",{"_index":900,"title":{},"body":{"properties.html":{}}}],["req",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{}}}],["req.cookies",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.cookies.token",{"_index":508,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies[tokenfield].length",{"_index":505,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":502,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request",{"_index":457,"title":{},"body":{"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["requesttype",{"_index":478,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestwithuser",{"_index":454,"title":{"classes/RequestWithUser.html":{}},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["required",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["res.clearcookie('token",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie(cookiename",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('token",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('user",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send(token",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolver",{"_index":333,"title":{},"body":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{}}}],["resolver('auth",{"_index":334,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('user",{"_index":353,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["resolvers",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["restriction",{"_index":834,"title":{},"body":{"license.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":500,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":837,"title":{},"body":{"license.html":{}}}],["run",{"_index":809,"title":{},"body":{"index.html":{}}}],["running",{"_index":178,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["rxjs",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["salts",{"_index":780,"title":{},"body":{"index.html":{}}}],["schema",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["sec",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["secret",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":493,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["select",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["sell",{"_index":844,"title":{},"body":{"license.html":{}}}],["sent",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["separate",{"_index":754,"title":{},"body":{"index.html":{}}}],["separating",{"_index":755,"title":{},"body":{"index.html":{}}}],["server",{"_index":730,"title":{},"body":{"index.html":{}}}],["service",{"_index":641,"title":{},"body":{"controllers/UserController.html":{}}}],["services",{"_index":760,"title":{},"body":{"index.html":{}}}],["servicestatus",{"_index":169,"title":{"classes/ServiceStatus.html":{}},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["set",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["shall",{"_index":854,"title":{},"body":{"license.html":{}}}],["short",{"_index":435,"title":{},"body":{"interfaces/Flags.html":{}}}],["signed",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signin(@args('data",{"_index":337,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signin(@body",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(data",{"_index":302,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["signin(dto",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signtoken",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(userid",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signup(@args('data",{"_index":335,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signup(@body",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(data",{"_index":300,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["signup(dto",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signuppayload",{"_index":293,"title":{"classes/SignUpPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["software",{"_index":830,"title":{},"body":{"license.html":{}}}],["solana/web3.js",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["something",{"_index":642,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specs",{"_index":738,"title":{},"body":{"index.html":{}}}],["sql",{"_index":528,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["src/**/*.graphql",{"_index":448,"title":{},"body":{"interfaces/Flags.html":{}}}],["src/.../app.module.ts",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generate",{"_index":725,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":905,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":724,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.service.ts",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.dto.ts",{"_index":453,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["src/app.dto.ts:11",{"_index":455,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:12",{"_index":456,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:8",{"_index":599,"title":{},"body":{"classes/RequestWithUser.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":152,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":157,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":165,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":163,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:4",{"_index":601,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:6",{"_index":603,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:7",{"_index":604,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:8",{"_index":602,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/auth/auth.controller.ts",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":323,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:16",{"_index":330,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:23",{"_index":328,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:9",{"_index":325,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.service.ts",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/get",{"_index":671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":275,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":282,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":280,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/guard/jwt.guard.ts",{"_index":464,"title":{},"body":{"classes/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guard/jwt.guard.ts:3",{"_index":465,"title":{},"body":{"classes/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":470,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":476,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:24",{"_index":482,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:35",{"_index":479,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/generate",{"_index":417,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/graphql.ts",{"_index":288,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/graphql.ts:12",{"_index":289,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:13",{"_index":290,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:17",{"_index":321,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/graphql.ts:21",{"_index":607,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:22",{"_index":606,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:23",{"_index":605,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:24",{"_index":608,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:28",{"_index":461,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:30",{"_index":460,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:34",{"_index":613,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:35",{"_index":610,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:36",{"_index":612,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:37",{"_index":611,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:38",{"_index":614,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:39",{"_index":609,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:40",{"_index":615,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:44",{"_index":462,"title":{},"body":{"classes/IQuery.html":{}}}],["src/main.ts",{"_index":675,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":512,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":515,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.service.ts:29",{"_index":520,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:71",{"_index":525,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:81",{"_index":524,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:88",{"_index":521,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/user/dto/edit",{"_index":405,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":616,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:23",{"_index":629,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:29",{"_index":626,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":623,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":652,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.resolver.ts",{"_index":340,"title":{},"body":{"classes/AuthResolver-1.html":{},"coverage.html":{}}}],["src/user/user.resolver.ts:17",{"_index":346,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["src/user/user.resolver.ts:9",{"_index":343,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["src/user/user.service.ts",{"_index":653,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:24",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":549,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert",{"_index":545,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert=root.crt",{"_index":546,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":810,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":811,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":812,"title":{},"body":{"index.html":{}}}],["started",{"_index":727,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":472,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["status",{"_index":173,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["stdout",{"_index":535,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":167,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":791,"title":{},"body":{"index.html":{}}}],["sub",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":849,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":842,"title":{},"body":{"license.html":{}}}],["subscriptions",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["substantial",{"_index":856,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":186,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["super",{"_index":469,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["supertest",{"_index":784,"title":{},"body":{"index.html":{}}}],["support",{"_index":883,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":884,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":309,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["tabwidth",{"_index":572,"title":{},"body":{"injectables/PrismaService.html":{}}}],["taken",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["tear",{"_index":595,"title":{},"body":{"injectables/PrismaService.html":{}}}],["technical",{"_index":747,"title":{},"body":{"index.html":{}}}],["test",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["test').default('dev",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["test:covlicense",{"_index":814,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":813,"title":{},"body":{"index.html":{}}}],["testing",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["tests",{"_index":782,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":588,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$executerawunsafe(\"set",{"_index":589,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":592,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('query",{"_index":557,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction",{"_index":594,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethealth",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authcontroller.signin(dto",{"_index":338,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authcontroller.signup(dto",{"_index":336,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.signin(dto",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get('jwt_secret",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.jwt.signasync(payload",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma",{"_index":182,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["this.prisma.user.create",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.delete",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.prisma.user.update",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["this.signtoken(user.id",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.deletemany",{"_index":598,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.usercontroller.getme(user",{"_index":355,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["this.userservice.deleteuser(userid",{"_index":648,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituser(userid",{"_index":645,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["throws",{"_index":496,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["time",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["timezone",{"_index":590,"title":{},"body":{"injectables/PrismaService.html":{}}}],["todo",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["token.access_token",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenfield",{"_index":503,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":778,"title":{},"body":{"index.html":{}}}],["tools",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":734,"title":{},"body":{"index.html":{}}}],["tort",{"_index":878,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":764,"title":{},"body":{"index.html":{}}}],["transferring",{"_index":767,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["transformers",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["transport",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["try",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":555,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["type",{"_index":160,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":903,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typepaths",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Flags.html":{}}}],["types",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":733,"title":{},"body":{"index.html":{}}}],["typings.ts",{"_index":418,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":781,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["up",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["updatedat",{"_index":297,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["upper",{"_index":575,"title":{},"body":{"injectables/PrismaService.html":{}}}],["url",{"_index":551,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["useguards",{"_index":632,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":636,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete",{"_index":622,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get('me",{"_index":628,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@patch",{"_index":625,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":303,"title":{"classes/User.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":349,"title":{},"body":{"classes/AuthResolver-1.html":{},"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":406,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":410,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:14",{"_index":411,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:6",{"_index":408,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.email",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.hash",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":348,"title":{},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["user[data",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":342,"title":{"controllers/UserController.html":{}},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":61,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":617,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":341,"title":{"injectables/UserService.html":{}},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":732,"title":{},"body":{"index.html":{}}}],["utility",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":474,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":480,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":762,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":286,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":441,"title":{},"body":{"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":906,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":808,"title":{},"body":{"index.html":{}}}],["version",{"_index":891,"title":{},"body":{"properties.html":{}}}],["w",{"_index":419,"title":{},"body":{"interfaces/Flags.html":{}}}],["walletid",{"_index":458,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["ware",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["warn",{"_index":536,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":863,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":859,"title":{},"body":{"license.html":{}}}],["watch",{"_index":420,"title":{},"body":{"interfaces/Flags.html":{},"index.html":{}}}],["web2",{"_index":893,"title":{},"body":{"properties.html":{}}}],["whatever",{"_index":499,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whether",{"_index":875,"title":{},"body":{"license.html":{}}}],["whitelist:true",{"_index":644,"title":{},"body":{"controllers/UserController.html":{}}}],["without",{"_index":833,"title":{},"body":{"license.html":{}}}],["work",{"_index":540,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ws",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHealth\n                            \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheTTL(undefined)@Get('health')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@CacheKey('home')@CacheTTL(Number.MAX_SAFE_INTEGER)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { CacheInterceptor, CacheKey, CacheTTL } from '@nestjs/cache-manager'\n\n@Controller()\n@UseInterceptors(CacheInterceptor)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @CacheKey('home')\n  @CacheTTL(Number.MAX_SAFE_INTEGER) //default is just 1 sec\n  getHello() {\n    return this.appService.getHello()\n  }\n\n  @CacheTTL(5 * 1000)\n  @Get('health')\n  getHealth() {\n    return this.appService.getHealth()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { ConfigModule } from '@nestjs/config'\nimport { AuthModule } from './auth/auth.module'\nimport Joi from 'joi'\nimport { CacheModule } from '@nestjs/cache-manager'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { ApolloServerPluginLandingPageGraphQLPlayground } from '@apollo/server-plugin-landing-page-graphql-playground'\nimport { GraphQLDateTime } from 'graphql-iso-date'\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'\nimport { AppController } from './app.controller'\nimport { GraphqlContext } from './app.dto'\nimport { UserModule } from './user/user.module'\nimport { PrismaModule } from './prisma/prisma.module'\n\nlet mode = process.env.MODE\nlet envFile = '.env'\n\nswitch (mode) {\n  case 'test':\n    envFile = '.env.test'\n    process.env.NODE_ENV = 'testing'\n    break\n  case 'prod':\n    process.env.NODE_ENV = 'production'\n    envFile = '.env.prod'\n    break\n  default:\n    mode = 'dev'\n    process.env.NODE_ENV = 'development'\n    envFile = '.env.local'\n}\n\nconsole.debug({ mode, envFile })\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [envFile, '.env'],\n      isGlobal: true,\n      cache: true,\n      validationSchema: Joi.object({\n        MODE: Joi.string().valid('dev', 'prod', 'test').default('dev'),\n        PORT: Joi.number().default(3000),\n        DATABASE_URL: Joi.string(),\n        JWT_SECRET: Joi.string().default('Hiro@JWT#TOKEN$'),\n        JWT_MAX_AGE: Joi.number().default(2 * 60 * 60 * 1000),\n      }),\n    }),\n    CacheModule.register({ isGlobal: true }),\n    GraphQLModule.forRoot({\n      context: ({ req, res }: GraphqlContext) => ({ req, res }), //required for cookies\n\n      fieldResolverEnhancers: ['interceptors'], //FIXME:unsure\n\n      autoSchemaFile: false, // schema-first\n      playground: false,\n      driver: ApolloDriver,\n      plugins: [ApolloServerPluginLandingPageGraphQLPlayground()],\n      typePaths: ['./**/*.graphql'],\n      resolvers: { DateTime: GraphQLDateTime },\n      subscriptions: {\n        'graphql-ws': true,\n        'subscriptions-transport-ws': true,\n      },\n    }),\n    PrismaModule,\n    AuthModule,\n    UserModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHealth\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Res } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { AuthDto } from './dto'\nimport { Response } from 'express'\nimport { ConfigService } from '@nestjs/config'\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService, private config: ConfigService) {}\n\n  @Post('signup')\n  signup(@Body() dto: AuthDto) {\n    return this.authService.signup(dto)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signin(@Body() dto: AuthDto, @Res() res: Response) {\n    const token = await this.authService.signin(dto)\n\n    /*    res.cookie('user', dto.email, { //TODO:\n      // Set cookie options here (e.g., expiration, domain, path, etc.)\n      maxAge: 3600000, // Cookie expiration time in milliseconds (1 hour)\n      httpOnly: true, // Cookie accessible only through HTTP(S) requests\n      secure: true, // Cookie sent only over HTTPS if true\n      signed: true,\n    })*/\n    // const cookies = req.cookies; //TODO: middle ware to clear the cookies when signin\n    // TODO: utility function to clear and set cookie\n    // for (let cookieName in cookies) {\n    //   res.clearCookie(cookieName); // Replace '.your-domain.com' with your actual domain\n    // }\n    res.clearCookie('token')\n    res.cookie('token', token.access_token, {\n      maxAge: this.config.get('JWT_SECRET') * 1000 || 60 * 60 * 1000,\n      secure: true,\n      httpOnly: true,\n      // signed: true,\n    })\n\n    res.send(token)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsStrongPassword } from 'class-validator'\n\nexport class AuthDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string\n\n  @IsStrongPassword()\n  @IsNotEmpty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInput.html":{"url":"classes/AuthInput.html","title":"class - AuthInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PrismaModule } from '../prisma/prisma.module'\nimport { JwtStrategy } from './strategy'\n\n@Module({\n  imports: [JwtModule.register({}), PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPayload.html":{"url":"classes/AuthPayload.html","title":"class - AuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authController: AuthController)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authController\n                                                  \n                                                        \n                                                                        AuthController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(dto: AuthDto, ctx: GraphqlContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signIn')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n                                    \n                                                GraphqlContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signUp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql'\nimport { AuthService } from './auth.service'\nimport { AuthController } from './auth.controller'\nimport { GraphqlContext } from '../app.dto'\nimport { AuthDto } from './dto'\nimport { AuthInput } from '../graphql'\n\n@Resolver('Auth')\nexport class AuthResolver {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authController: AuthController,\n  ) {}\n\n  @Mutation('signUp')\n  signUp(@Args('data') dto: AuthDto) {\n    console.debug({ dto })\n\n    return this.authController.signup(dto as AuthInput)\n  }\n\n  @Mutation('signIn')\n  signIn(@Args('data') dto: AuthDto, @Context() ctx: GraphqlContext) {\n    console.debug({ dto })\n\n    return this.authController.signin(dto as AuthInput, ctx.res)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver-1.html":{"url":"classes/AuthResolver-1.html","title":"class - AuthResolver-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, userService: UserService, userController: UserController)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userController\n                                                  \n                                                        \n                                                                        UserController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { UserService } from './user.service'\nimport { UserController } from './user.controller'\nimport { GetUserGraphql } from '../auth/decorator'\nimport { User } from '@prisma/client'\n\n@Resolver('User')\nexport class AuthResolver {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly userService: UserService,\n    private readonly userController: UserController,\n  ) {}\n\n  @Query('me')\n  me(@GetUserGraphql() user: User) {\n    return this.userController.getMe(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userId: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { AuthDto } from './dto'\n\nimport argon from 'argon2'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwt: JwtService,\n    private config: ConfigService,\n  ) {}\n\n  async signup(dto: AuthDto) {\n    const hash = await argon.hash(dto.password)\n\n    try {\n      const user = await this.prisma.user.create({\n        data: {\n          email: dto.email,\n          hash: hash,\n        },\n        select: {\n          //FIXME: use transformers\n          id: true,\n          email: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      return user\n    } catch (error) {\n      console.error({\n        code: error.code,\n        error,\n      })\n      if (\n        error instanceof PrismaClientKnownRequestError ||\n        PrismaClientUnknownRequestError\n      ) {\n        if (error.code == 'P2002') {\n          throw new ForbiddenException('credentials taken')\n        }\n      }\n      throw error\n    }\n  }\n\n  async signin(dto: AuthDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email: dto.email,\n      },\n    })\n\n    if (!user) throw new ForbiddenException('incorrect credentials')\n\n    const pwMatches = await argon.verify(user.hash, dto.password)\n\n    if (!pwMatches) throw new ForbiddenException('invalid credentials')\n\n    return this.signToken(user.id, user.email)\n  }\n\n  async signToken(userId: number, email: string) {\n    const payload = {\n      sub: userId,\n      email,\n    }\n    const secret = this.config.get('JWT_SECRET')\n\n    return {\n      access_token: await this.jwt.signAsync(payload, {\n        expiresIn: '1hr', //TODO:\n        secret: secret,\n      }),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserDto.html":{"url":"classes/EditUserDto.html","title":"class - EditUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/edit-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator'\n\nexport class EditUserDto {\n  @IsEmail()\n  @IsOptional()\n  email?: string\n\n  @IsString()\n  @IsOptional()\n  firstName?: string\n\n  @IsString()\n  @IsOptional()\n  lastName?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Flags.html":{"url":"interfaces/Flags.html","title":"interface - Flags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Flags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generate-typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            w\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        w\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        w:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDefinitionsFactory } from '@nestjs/graphql'\nimport { join } from 'path'\n\ninterface Flags {\n  watch?: boolean\n  w?: boolean\n}\n\n// Function to extract flags from the arguments array\nfunction extractFlags(args) {\n  const flags: Flags = {}\n  let currentFlag = null\n\n  for (const arg of args) {\n    if (arg.startsWith('--')) {\n      // Long flag (e.g., --watch)\n      const flagName = arg.slice(2)\n      flags[flagName] = true\n      currentFlag = flagName\n    } else if (arg.startsWith('-')) {\n      // Short flag (e.g., -w)\n      const flagKeys = arg.slice(1).split('')\n      flagKeys.forEach((key) => {\n        flags[key] = true\n      })\n      currentFlag = arg.slice(-1)\n    } else if (currentFlag) {\n      // Flag value (e.g., --name John)\n      flags[currentFlag] = arg\n      currentFlag = null\n    }\n  }\n\n  return flags\n}\n\nconst args = process.argv.slice(2)\nconst flags: Flags = extractFlags(args)\n\nconsole.log('Flags:', flags)\n\nconst definitionsFactory = new GraphQLDefinitionsFactory()\ndefinitionsFactory.generate({\n  typePaths: ['./src/**/*.graphql'],\n  path: join(process.cwd(), 'src/graphql.ts'),\n  outputAs: 'class',\n  watch: flags.watch || flags.w,\n})\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphqlContext.html":{"url":"classes/GraphqlContext.html","title":"class - GraphqlContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphqlContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                req\n                            \n                            \n                                res\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        req\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RequestWithUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Response\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IMutation.html":{"url":"classes/IMutation.html","title":"class - IMutation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IMutation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SignUpPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IQuery.html":{"url":"classes/IQuery.html","title":"class - IQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me()\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User | Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtGuard.html":{"url":"classes/JwtGuard.html","title":"class - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport'\n\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtConstants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                extractJWTFromCookie\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        extractJWTFromCookie\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractJWTFromCookie(req: RequestType)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            RequestType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { userId: number; email: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { ConfigService } from '@nestjs/config'\nimport { PrismaService } from '../../prisma/prisma.service'\nimport { Request as RequestType } from 'express'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  private jwtConstants: any\n\n  constructor(private config: ConfigService, private prisma: PrismaService) {\n    const mode = config.get('MODE') || 'dev'\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        JwtStrategy.extractJWTFromCookie,\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ]),\n      ignoreExpiration: mode == 'dev' || mode == 'test',\n      secretOrKey: config.get('JWT_SECRET'),\n    })\n  }\n\n  validate(payload: { sub: number; email: string }) {\n    const user = this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    })\n    if (!user) return null //throws the 401 error\n\n    return { userId: payload.sub, email: payload.email }\n    // whatever is returned is appended to req.user\n  }\n  private static extractJWTFromCookie(req: RequestType): string | null {\n    const tokenField = 'token'\n    console.debug(req.cookies)\n    if (req.cookies && tokenField in req.cookies && req.cookies[tokenField].length > 0) {\n      console.log('extracted cookie')\n      return req.cookies.token\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common'\nimport { PrismaService } from './prisma.service'\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDb\n                            \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDb\n                        \n                    \n                \n            \n            \n                \ncleanDb()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common'\nimport { Prisma, PrismaClient } from '@prisma/client'\nimport { ConfigService } from '@nestjs/config'\nimport kleur from 'kleur'\nimport { format } from 'sql-formatter'\n\nconst logEvents: Prisma.LogDefinition[] = [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n\nlet DB_CONNECTED = false\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  // FIXME doesn't work for e2e OnModuleDestroy{\n  // https://docs.nestjs.com/fundamentals/lifecycle-events\n\n  constructor(config: ConfigService) {\n    const sslcert = '?sslcert=root.crt'\n    //https://www.prisma.io/docs/concepts/database-connectors/postgresql#configuring-an-ssl-connection\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL') + sslcert,\n        },\n      },\n      log: logEvents,\n    })\n\n    process.env.FORCE_COLOR = 'true'\n\n    // @ts-ignore\n    this.$on('query', async (e: any) => {\n      if (config.get('MODE') != 'dev') {\n        return\n      }\n\n      // const chalk = await import('chalk')\n      // console.log(chalk.yellow('Query: ') + chalk.green(e.query))\n      // console.log(chalk.yellow('Params: ') + chalk.cyan(JSON.stringify(e.params)))\n      // console.log(chalk.yellow('Duration: ') + chalk.magenta(`${e.duration}ms`))\n      const query = e.query\n\n      const formattedQuery = format(query, {\n        language: 'postgresql',\n        tabWidth: 2,\n        keywordCase: 'upper',\n        linesBetweenQueries: 2,\n        params: e.params || [],\n      })\n      console.log(kleur.yellow('Query: ') + kleur.green(formattedQuery))\n      console.log(kleur.yellow('Params: ') + kleur.cyan(JSON.stringify(e.params)))\n      console.log(kleur.yellow('Duration: ') + kleur.magenta(`${e.duration}ms`))\n    })\n  }\n  async onModuleInit() {\n    if (DB_CONNECTED) return\n\n    console.info(new Date(), 'connecting to the database')\n    await this.$connect()\n    await this.$executeRawUnsafe(\"SET timezone = 'Asia/Kolkata'\")\n\n    DB_CONNECTED = true\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    // @ts-ignore\n    this.$on('beforeExit', async () => {\n      await app.close()\n    })\n  }\n\n  cleanDb() {\n    return this.$transaction([\n      //tear down logic\n      this.user.deleteMany(),\n    ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestWithUser.html":{"url":"classes/RequestWithUser.html","title":"class - RequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceStatus.html":{"url":"classes/ServiceStatus.html","title":"class - ServiceStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ok: boolean, status: string, debug: any)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ok\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        debug\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OK'\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpPayload.html":{"url":"classes/SignUpPayload.html","title":"class - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                hash\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                editUser\n                            \n                            \n                                    \n                                    \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Patch()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Injectable,\n  Patch,\n  UseGuards,\n} from '@nestjs/common'\nimport { JwtGuard } from '../auth/guard'\nimport { GetUser } from '../auth/decorator'\nimport { User } from '@prisma/client'\nimport { EditUserDto } from './dto'\nimport { UserService } from './user.service'\n\n@Injectable()\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtGuard)\n  @Get('me')\n  getMe(@GetUser() user: User) {\n    return user\n  }\n\n  @UseGuards(JwtGuard)\n  @Patch()\n  editUser(@GetUser('userId') userId: number, @Body() dto: EditUserDto) {\n    //needs service\n    // we will get something in api request due to whitelist:true\n    return this.userService.editUser(userId, dto)\n  }\n\n  @UseGuards(JwtGuard)\n  @Delete()\n  async deleteUser(@GetUser('userId') userId: number) {\n    return {\n      message: 'user deleted',\n      user: await this.userService.deleteUser(userId),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserController\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserController } from './user.controller'\nimport { UserService } from './user.service'\nimport { AuthModule } from '../auth/auth.module'\nimport { PrismaModule } from '../prisma/prisma.module'\n\n@Module({\n  imports: [AuthModule, PrismaModule],\n  controllers: [UserController],\n  providers: [UserService, UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { EditUserDto } from './dto'\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  async editUser(userId: number, dto: EditUserDto) {\n    console.log({ userId, dto })\n    const user = await this.prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: {\n        ...dto,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n\n  async deleteUser(userId: number) {\n    const user = await this.prisma.user.delete({\n      where: {\n        id: userId,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            GraphqlContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            RequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            class\n            ServiceStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUserGraphql\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            class\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            interface\n            Flags\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            function\n            extractFlags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            args\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            definitionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            flags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IMutation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            SignUpPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            DB_CONNECTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            logEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/edit-user.dto.ts\n            \n            class\n            EditUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            injectable\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.7.5\n        \n            @nestjs/apollo : ^12.0.7\n        \n            @nestjs/cache-manager : ^2.0.1\n        \n            @nestjs/common : ^10.0.5\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.5\n        \n            @nestjs/graphql : ^12.0.8\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.5\n        \n            @solana/web3.js : ^1.78.0\n        \n            argon2 : ^0.30.3\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            graphql : 16.7.1\n        \n            graphql-iso-date : ^3.6.1\n        \n            graphql-subscriptions : 2.0.0\n        \n            graphql-tools : ^9.0.0\n        \n            joi : ^17.9.2\n        \n            kleur : ^4.1.5\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-nestjs-graphql : ^18.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : 7.8.1\n        \n            sql-formatter : ^12.2.3\n        \n            ts-morph : ^19.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            extractFlags   (src/.../generate-typings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractFlags\n                        \n                    \n                \n            \n            \n                \nextractFlags(args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\napi.bookstore.nas\nDescription\nAPI Server built using , TypeScript, Prisma, Graphql and PostgreSQL.\nBuilt with ❤️on top of\n\n Typescript\n NestJS\n Prisma\n Passport.js\n Graphql:Schema First\n PostgreSQL\n\nFunctional specs\nAPI allows authenticated to users to create and manage orders\n\nUser SignUp & SignIn\nCRUD Orders\nInspect Items\n\nTechnical methodologies followed\n\nModular architecture: Business Logic & Auth handled in separate modules, separating\nconcerns.\nHTTP requests are handled by Controllers\n API documentation using nest/swagger module \nBusiness logic is implemented in Services\nDatabase interactions are handled using Prisma\nValidation using NestJS Pipes\nData Transfer Object(DTO) pattern for transferring data between layers\nConfiguration management using .env files for development, test & prod configs\nAuthentication / Authorization, Event ownership by users\nPassportJS, JWT tokens, Password hashing, salts\nUnit tests using Jest\nSupertest for E2E testing\n\nTechnical documentation using Compodoc\nAs NestJS is heavily inspired by Angular, we can generate the documentation about project\nstructure modules, controllers, services etc. I have generated the docs.\nFind 'em here - https://jsFame.github.io/api.bookstore.nas/\nInstallation\nnpm install -g pnpm\npnpm installRunning the app\nPrerequisite for running the app in any mode - dev/test/prod\n\nCopy .env.example with .env\nFill in the env vars in .env\n\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covLicense\nThis repo is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Hiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : Web2 backend of bookstore.nas\n        \n            Homepage : https://github.com/jsFame/api.bookstore.nas\n        \n            Bugs : https://github.com/jsFame/api.bookstore.nas/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/jsFame/api.bookstore.nas\n        \n            Author : laciferin@gmail.com\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateTime   (src/.../graphql.ts)\n                        \n                        \n                            Nullable   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            args   (src/.../generate-typings.ts)\n                        \n                        \n                            DB_CONNECTED   (src/.../prisma.service.ts)\n                        \n                        \n                            definitionsFactory   (src/.../generate-typings.ts)\n                        \n                        \n                            envFile   (src/.../app.module.ts)\n                        \n                        \n                            flags   (src/.../generate-typings.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            GetUserGraphql   (src/.../get-user.decorator.ts)\n                        \n                        \n                            logEvents   (src/.../prisma.service.ts)\n                        \n                        \n                            mode   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        args\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.argv.slice(2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        definitionsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLDefinitionsFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Flags\n\n                    \n                \n                \n                    \n                        Default value : extractFlags(args)\n                    \n                \n\n\n        \n    \n\n    src/prisma/prisma.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.LogDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.env'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MODE\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest()\n\n    if (data) return request.user[data]\n\n    return request.user\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetUserGraphql\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, context: ExecutionContext) => {\n    const ctx: GraphqlContext = GqlExecutionContext.create(context).getContext()\n\n    const { user } = ctx.req\n\n    if (data) return user[data]\n\n    return user\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
