var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.536,1,2.504]],["body/controllers/AppController.html",[0,2.261,1,3.685,2,1.629,3,0.239,4,0.267,5,0.239,6,3.494,7,0.453,8,1.624,9,4.813,10,4.813,11,2.134,12,0.021,13,4.086,14,0.78,15,4.086,16,1.624,17,4.086,18,4.086,19,0.763,20,4.086,21,1.001,22,3.245,23,3.494,24,4.086,25,4.086,26,4.086,27,3.104,28,3.104,29,4.086,30,0.296,31,0.208,32,1.831,33,1.947,34,4.086,35,4.086,36,2.581,37,2.813,38,4.086,39,1.624,40,4.086,41,4.086,42,3.104,43,4.086,44,4.086,45,0.015,46,0.015]],["title/modules/AppModule.html",[47,1.297,48,2.504]],["body/modules/AppModule.html",[1,2.956,2,1.4,3,0.133,4,0.148,5,0.133,12,0.021,19,0.861,21,0.556,22,3.005,23,1.94,27,1.723,28,1.723,30,0.164,31,0.116,36,1.433,42,1.723,45,0.01,46,0.01,47,1.531,48,4.639,49,1.017,50,1.081,51,1.233,52,1.233,53,1.081,54,2.334,55,1.233,56,1.94,57,1.94,58,1.94,59,3.229,60,3.491,61,3.491,62,3.005,63,3.491,64,1.908,65,1.233,66,1.153,67,1.723,68,2.667,69,2.268,70,1.325,71,1.94,72,3.002,73,2.268,74,2.268,75,1.325,76,3.51,77,1.94,78,2.268,79,2.268,80,2.268,81,3.328,82,3.51,83,3.51,84,1.94,85,1.723,86,3.51,87,2.268,88,1.94,89,2.268,90,1.908,91,1.94,92,2.268,93,1.723,94,2.268,95,2.268,96,3.302,97,1.94,98,4.2,99,2.667,100,1.94,101,3.002,102,1.723,103,2.268,104,4.294,105,1.94,106,3.002,107,3.002,108,1.94,109,2.268,110,1.723,111,1.94,112,2.268,113,1.94,114,2.268,115,2.268,116,3.51,117,2.842,118,1.94,119,2.268,120,2.268,121,2.268,122,2.268,123,2.268,124,2.268,125,2.268,126,2.268,127,2.268,128,2.268,129,2.268,130,2.268,131,3.002,132,2.268,133,2.268,134,1.723,135,2.417,136,2.417,137,1.94,138,1.94,139,2.268,140,2.268,141,2.268,142,2.268,143,2.217,144,2.268,145,1.94,146,2.268,147,2.268,148,1.94,149,2.268,150,1.153,151,3.002,152,3.51,153,2.268]],["title/injectables/AppService.html",[22,1.977,154,1.103]],["body/injectables/AppService.html",[3,0.195,4,0.218,5,0.195,7,0.369,8,1.414,9,4.425,10,4.425,12,0.021,14,0.784,16,1.414,19,0.596,21,0.816,22,2.534,30,0.241,31,0.238,32,1.493,33,1.588,39,1.414,45,0.013,46,0.013,117,1.811,143,2.104,154,1.414,155,1.693,156,2.531,157,2.563,158,1.969,159,1.946,160,2.195,161,3.332,162,1.011,163,0.958,164,0.426,165,0.773,166,2.144,167,3.332,168,1.946,169,3.332,170,3.209,171,1.663,172,1.693,173,3.702,174,4.598,175,3.986,176,2.531,177,2.531,178,2.849,179,2.531,180,3.209,181,2.849,182,2.531,183,3.986,184,2.534,185,1.693,186,2.849,187,2.849,188,2.849,189,2.849,190,2.849,191,2.849,192,2.531,193,3.209,194,3.542,195,2.531,196,3.986,197,2.849,198,2.849,199,2.849,200,2.531]],["title/controllers/AuthController.html",[0,1.536,201,2.297]],["body/controllers/AuthController.html",[0,1.141,2,1.078,3,0.158,4,0.177,5,0.158,7,0.3,8,1.216,11,1.598,12,0.021,14,0.584,16,1.216,19,0.721,21,0.662,30,0.196,31,0.138,32,1.211,37,1.861,39,0.82,42,3.045,45,0.011,46,0.011,70,1.579,117,3.328,131,3.428,136,3.887,138,4.086,157,2.277,162,1.216,163,1.153,164,0.512,165,0.93,185,1.373,201,2.532,202,2.311,203,1.861,204,2.311,205,3.018,206,2.532,207,2.053,208,3.576,209,3.639,210,2.703,211,2.703,212,3.566,213,2.053,214,4.009,215,2.703,216,1.861,217,2.703,218,2.311,219,2.053,220,2.598,221,2.053,222,1.469,223,2.76,224,2.703,225,1.579,226,1.861,227,2.703,228,2.703,229,2.703,230,2.703,231,2.703,232,1.91,233,2.311,234,2.703,235,2.703,236,2.311,237,4.086,238,4.009,239,4.289,240,2.703,241,2.311,242,2.311,243,4.009,244,4.009,245,2.311,246,2.311,247,4.009,248,2.703,249,2.703,250,2.703,251,2.703,252,4.009,253,2.703,254,2.703,255,2.703,256,2.311,257,4.009,258,2.703,259,2.703,260,2.703,261,4.009,262,2.311,263,2.703,264,2.703,265,4.009,266,2.703,267,2.053,268,2.703,269,2.703,270,2.703,271,2.703,272,2.703,273,2.703,274,2.703,275,2.703,276,2.311,277,2.703]],["title/classes/AuthDto.html",[31,0.185,208,2.124]],["body/classes/AuthDto.html",[3,0.268,4,0.299,5,0.268,7,0.507,11,2.296,12,0.02,14,0.84,19,0.585,30,0.332,31,0.293,45,0.016,46,0.016,164,0.736,171,2.358,208,3.364,278,1.062,279,3.915,280,1.843,281,2.823,282,3.201,283,4.579,284,4.579,285,4.579,286,4.579,287,4.924,288,4.786,289,5.759,290,2.675]],["title/classes/AuthInput.html",[31,0.185,291,1.733]],["body/classes/AuthInput.html",[3,0.215,4,0.24,5,0.215,7,0.408,12,0.021,14,0.727,30,0.485,31,0.334,45,0.014,46,0.014,150,3.226,164,0.776,171,2.388,278,0.853,280,1.597,281,2.845,282,2.877,291,2.894,292,1.752,293,3.677,294,3.677,295,2.535,296,1.999,297,2.535,298,1.88,299,1.36,300,2.712,301,2.712,302,3.709,303,1.868,304,2.148,305,3.308,306,2.148,307,1.435,308,1.999,309,3.301,310,1.999,311,1.999,312,1.868,313,1.999,314,1.752]],["title/modules/AuthModule.html",[47,1.297,59,2.124]],["body/modules/AuthModule.html",[2,2.074,3,0.229,4,0.256,5,0.229,12,0.021,19,0.852,21,0.958,30,0.283,31,0.199,45,0.015,46,0.015,47,2.084,49,1.753,50,1.864,51,2.126,52,2.126,53,1.864,54,3.176,55,2.126,59,4.126,62,3.623,64,2.827,65,2.126,66,1.988,68,3.951,93,2.972,201,3.69,220,3.623,221,2.972,315,3.345,316,3.345,317,3.912,318,4.21,319,3.912,320,3.345,321,3.912,322,2.972,323,3.345,324,3.912]],["title/classes/AuthPayload.html",[31,0.185,295,1.848]],["body/classes/AuthPayload.html",[3,0.22,4,0.246,5,0.22,7,0.417,12,0.021,14,0.549,30,0.488,31,0.336,45,0.014,46,0.014,150,3.252,164,0.732,171,2.351,278,0.874,280,1.622,281,2.569,282,1.913,291,2.731,292,1.794,295,2.912,296,3.116,297,2.576,298,1.911,299,1.382,300,2.756,301,2.756,302,3.739,303,1.913,304,2.199,305,3.348,306,2.199,307,1.458,308,2.047,309,3.333,310,2.047,311,2.047,312,1.913,313,2.047,314,1.794,325,3.765]],["title/classes/AuthResolver.html",[31,0.185,326,2.297]],["body/classes/AuthResolver.html",[3,0.193,4,0.216,5,0.193,7,0.366,8,1.405,11,1.847,12,0.021,14,0.78,16,1.405,19,0.809,30,0.239,31,0.168,33,2.208,39,1.405,45,0.013,46,0.013,75,1.929,81,2.273,90,3.153,91,2.824,113,3.961,134,3.519,158,1.957,162,1.623,163,1.539,164,0.684,165,1.242,201,4.108,205,2.926,206,2.926,207,2.509,208,3.8,212,4.108,213,2.509,220,3.443,221,2.509,225,2.706,278,0.766,291,2.55,320,2.824,326,2.926,327,2.824,328,3.302,329,3.302,330,4.065,331,4.632,332,3.302,333,4.632,334,3.302,335,2.085,336,3.302,337,2.824,338,3.302,339,3.302,340,3.302,341,3.302,342,3.302,343,3.302]],["title/classes/AuthResolver-1.html",[31,0.155,37,2.095,326,1.921]],["body/classes/AuthResolver-1.html",[3,0.218,4,0.244,5,0.218,7,0.413,8,1.527,11,1.486,12,0.021,14,0.734,16,1.13,19,0.84,30,0.27,31,0.19,33,2.717,39,1.13,45,0.014,46,0.014,75,2.177,158,2.127,159,2.177,160,2.302,162,1.527,163,1.448,164,0.643,165,1.168,166,2.008,172,1.893,225,3.331,278,0.865,307,1.89,326,3.18,337,3.187,344,3.187,345,3.414,346,3.925,347,3.727,348,3.727,349,5.035,350,3.727,351,2.831,352,2.831,353,3.187,354,2.831,355,2.831,356,2.177,357,3.727,358,3.727,359,3.727]],["title/injectables/AuthService.html",[154,1.103,220,1.977]],["body/injectables/AuthService.html",[3,0.138,4,0.154,5,0.138,7,0.261,8,1.096,12,0.021,14,0.719,16,1.334,19,0.747,21,0.577,30,0.171,31,0.12,39,1.334,45,0.01,46,0.01,70,1.376,117,2.68,154,1.096,155,1.197,157,2.946,158,1.527,159,1.376,160,1.859,162,1.496,163,1.418,164,0.63,165,1.144,166,1.441,168,2.569,171,1.568,172,1.197,184,2.39,185,2.702,192,1.79,205,2.282,206,2.282,207,2.746,208,3.414,212,2.777,213,2.746,220,1.965,223,3.395,225,2.569,226,3.027,232,2.675,236,3.091,237,2.014,276,2.014,281,2.619,296,1.281,298,0.888,299,1.199,300,1.281,301,1.281,307,1.418,308,2.39,322,1.79,360,2.014,361,3.614,362,3.027,363,4.931,364,2.356,365,2.356,366,3.614,367,2.356,368,2.282,369,2.356,370,2.014,371,2.356,372,2.014,373,3.091,374,3.091,375,2.014,376,2.356,377,2.356,378,2.356,379,1.281,380,2.356,381,1.79,382,2.014,383,2.356,384,2.014,385,3.114,386,2.014,387,3.614,388,2.356,389,2.014,390,4.217,391,2.356,392,2.356,393,1.79,394,2.356,395,3.614,396,3.614,397,2.356,398,2.356,399,2.356,400,2.356,401,2.356,402,1.79,403,2.014,404,4.397,405,2.356,406,2.356,407,2.356]],["title/classes/Book.html",[31,0.185,408,2.504]],["body/classes/Book.html",[3,0.321,4,0.359,5,0.321,12,0.019,30,0.398,31,0.28,45,0.018,46,0.018,278,1.274,408,4.427,409,4.696]],["title/controllers/BookController.html",[0,1.536,410,2.504]],["body/controllers/BookController.html",[0,1.273,2,1.201,3,0.176,4,0.197,5,0.176,7,0.334,8,1.317,11,2.352,12,0.021,14,0.86,16,1.79,19,0.711,21,0.738,30,0.218,31,0.154,32,1.35,33,1.436,39,1.79,45,0.012,46,0.012,162,1.688,163,1.601,164,0.711,165,1.292,203,2.074,216,2.988,219,3.865,298,2.316,299,1.8,410,2.988,411,2.577,412,3.013,413,2.359,414,3.832,415,2.741,416,2.988,417,2.988,418,2.577,419,3.59,420,3.013,421,3.013,422,2.074,423,3.712,424,3.013,425,2.074,426,3.712,427,3.013,428,2.074,429,4.094,430,3.712,431,3.013,432,2.074,433,2.577,434,2.289,435,2.765,436,2.577,437,2.577,438,3.712,439,2.577,440,3.013,441,3.013,442,3.013,443,3.013,444,2.577,445,3.013,446,2.577,447,3.013,448,2.577,449,3.013]],["title/modules/BookModule.html",[47,1.297,60,2.297]],["body/modules/BookModule.html",[2,2.261,3,0.261,4,0.292,5,0.261,12,0.02,19,0.796,21,1.094,30,0.324,31,0.228,45,0.016,46,0.016,47,2.221,49,2.002,50,2.129,51,2.428,52,2.428,53,2.129,54,3.386,55,2.428,60,4.364,64,3.082,65,2.428,66,2.27,410,4.288,435,3.756,436,3.82,450,3.82,451,3.82,452,4.467,453,4.467]],["title/injectables/BookService.html",[154,1.103,435,1.977]],["body/injectables/BookService.html",[3,0.18,4,0.201,5,0.18,7,0.34,8,1.335,12,0.021,14,0.902,16,1.803,19,0.657,21,0.752,30,0.223,31,0.157,32,1.377,33,1.464,39,1.803,45,0.012,46,0.012,154,1.335,155,1.561,158,1.297,159,1.794,160,2.117,162,1.803,163,1.709,164,0.76,165,1.379,166,2.051,172,1.561,298,2.331,299,1.809,356,1.794,379,2.392,413,2.392,414,3.866,415,2.779,416,3.03,417,3.03,418,3.763,419,2.571,422,3.03,425,3.03,428,3.03,429,3.547,435,2.392,454,2.627,455,3.072,456,5.143,457,3.072,458,3.072,459,3.072,460,3.072,461,5.143,462,3.072,463,3.072,464,3.072,465,3.072,466,3.072,467,3.072]],["title/classes/CreateBookDto.html",[31,0.185,419,2.124]],["body/classes/CreateBookDto.html",[3,0.22,4,0.246,5,0.22,7,0.417,11,2.552,12,0.02,14,0.933,19,0.481,30,0.273,31,0.258,45,0.014,46,0.014,164,0.818,165,1.176,171,2.443,278,0.874,280,1.622,288,4.862,290,2.199,299,1.382,419,2.961,468,5.638,469,2.86,470,5.732,471,4.901,472,5.732,473,5.732,474,5.732,475,5.732,476,3.765,477,3.219,478,3.765,479,3.765,480,3.765,481,3.765,482,3.765,483,5.069,484,3.851,485,3.851,486,5.244]],["title/classes/CreateOrderDto.html",[31,0.185,487,2.124]],["body/classes/CreateOrderDto.html",[3,0.265,4,0.297,5,0.265,7,0.503,11,2.284,12,0.02,14,0.835,19,0.58,30,0.329,31,0.292,45,0.016,46,0.016,164,0.732,278,1.054,280,1.833,288,4.768,290,2.653,299,1.797,477,4.899,484,4.768,487,3.347,488,5.367,489,3.45,490,5.367,491,5.367,492,4.541,493,4.541]],["title/classes/EditUserDto.html",[31,0.185,494,2.297]],["body/classes/EditUserDto.html",[3,0.243,4,0.272,5,0.243,7,0.461,11,2.402,12,0.02,14,0.878,19,0.532,30,0.302,31,0.276,45,0.015,46,0.015,164,0.77,165,1.574,171,2.419,278,0.966,280,1.734,281,2.7,287,4.634,290,2.432,310,3.275,311,3.275,485,4.848,486,5.151,494,3.422,495,5.456,496,3.56,497,4.163,498,4.163,499,5.419,500,4.163,501,4.163]],["title/interfaces/Flags.html",[502,2.297,503,2.504]],["body/interfaces/Flags.html",[3,0.185,4,0.207,5,0.185,7,0.35,12,0.021,19,0.574,31,0.161,37,2.175,39,0.958,45,0.013,46,0.013,75,1.846,117,2.441,148,2.702,163,0.909,164,0.574,165,1.32,176,4.744,184,1.718,232,3.061,242,4.467,245,3.84,267,3.412,280,1.437,292,1.506,314,2.14,335,2.836,502,1.996,503,4.598,504,2.702,505,2.175,506,2.175,507,6.009,508,5.339,509,3.84,510,3.16,511,3.16,512,3.16,513,3.16,514,3.412,515,6.009,516,4.491,517,4.491,518,3.16,519,5.224,520,4.491,521,3.16,522,3.16,523,3.16,524,3.16,525,3.16,526,3.16,527,3.16,528,3.16,529,2.401,530,3.16,531,3.16,532,2.702,533,3.16,534,2.401,535,3.16,536,3.16,537,3.16,538,3.16,539,3.16,540,3.16]],["title/classes/GraphqlContext.html",[31,0.185,90,1.977]],["body/classes/GraphqlContext.html",[3,0.264,4,0.296,5,0.264,7,0.501,12,0.02,14,0.833,19,0.578,30,0.414,31,0.291,45,0.016,46,0.016,90,3.106,135,4.312,136,4.312,164,0.73,209,4.312,222,2.458,278,1.049,280,1.828,299,1.233,307,1.801,502,2.856,541,3.436,542,4.312,543,4.522,544,4.522,545,3.609,546,3.867,547,2.298]],["title/classes/IMutation.html",[31,0.185,303,1.848]],["body/classes/IMutation.html",[3,0.198,4,0.221,5,0.198,7,0.375,8,1.429,12,0.021,14,0.687,16,1.429,30,0.475,31,0.325,45,0.013,46,0.013,150,3.132,162,1.429,163,1.355,164,0.749,165,1.093,171,2.198,205,2.976,206,2.976,278,0.785,281,2.43,282,1.719,291,3.121,292,1.612,295,2.755,296,1.839,297,2.755,298,1.776,299,1.285,300,2.561,301,2.561,302,3.963,303,2.394,304,2.752,305,3.601,306,2.752,307,1.355,308,1.839,309,3.187,310,1.839,311,1.839,312,1.719,313,1.839,314,1.612,379,2.561,548,3.383,549,3.383]],["title/classes/IQuery.html",[31,0.185,312,1.848]],["body/classes/IQuery.html",[3,0.219,4,0.244,5,0.219,7,0.414,8,1.531,12,0.021,14,0.545,16,1.134,30,0.487,31,0.335,45,0.014,46,0.014,150,3.244,164,0.645,171,2.277,278,0.868,281,2.56,282,1.9,291,2.722,292,1.782,295,2.564,296,2.033,297,2.564,298,1.902,299,1.376,300,2.743,301,2.743,302,3.929,303,1.9,304,2.184,305,3.572,306,2.184,307,1.642,308,2.033,309,3.324,310,2.033,311,2.033,312,2.564,313,2.033,314,1.782,550,3.739]],["title/classes/JwtGuard.html",[31,0.185,551,2.297]],["body/classes/JwtGuard.html",[3,0.297,4,0.332,5,0.297,12,0.02,14,0.741,19,0.65,30,0.369,31,0.259,45,0.017,46,0.017,158,2.789,278,1.18,547,2.584,551,3.88,552,4.349,553,5.086,554,5.086,555,3.864,556,5.086,557,3.864]],["title/injectables/JwtStrategy.html",[154,1.103,318,2.297]],["body/injectables/JwtStrategy.html",[3,0.156,4,0.175,5,0.156,7,0.297,8,1.207,12,0.021,14,0.767,16,1.207,19,0.753,21,0.656,30,0.194,31,0.136,32,1.199,39,1.596,45,0.011,46,0.011,70,1.563,96,3,102,2.033,110,3.023,135,1.842,154,1.207,155,1.36,158,1.13,160,1.983,162,1.441,163,1.366,164,0.753,165,1.102,166,1.894,171,1.876,172,1.36,222,1.455,223,3.622,225,3.565,226,2.74,232,2.264,233,2.289,239,2.033,262,3.403,280,1.274,281,2.129,298,1.009,299,1.085,307,1.144,314,2.507,318,2.513,323,2.289,362,2.74,368,2.513,385,1.69,393,2.033,402,2.033,403,2.289,545,1.69,547,1.36,555,2.033,557,2.033,558,2.289,559,4.751,560,4.751,561,3.98,562,3.98,563,2.289,564,3.98,565,3.98,566,5.261,567,2.676,568,3.98,569,3.98,570,2.676,571,2.676,572,2.676,573,2.289,574,2.676,575,2.289,576,2.676,577,2.676,578,2.676,579,2.676,580,2.676,581,2.676,582,2.676,583,3.98,584,2.676,585,2.676,586,2.676,587,2.676,588,2.676,589,2.676,590,2.676,591,3.98,592,2.676,593,2.676,594,2.289,595,2.676,596,2.676]],["title/classes/Order.html",[31,0.185,597,2.763]],["body/classes/Order.html",[3,0.321,4,0.359,5,0.321,12,0.019,30,0.398,31,0.28,45,0.018,46,0.018,278,1.274,597,4.886,598,4.696]],["title/controllers/OrderController.html",[0,1.536,599,2.504]],["body/controllers/OrderController.html",[0,1.179,2,1.113,3,0.163,4,0.182,5,0.163,7,0.309,8,1.245,11,2.282,12,0.021,14,0.834,16,1.736,19,0.765,21,0.684,30,0.202,31,0.142,32,1.251,33,1.33,39,1.736,45,0.011,46,0.011,157,2.321,162,1.629,163,1.544,164,0.686,165,1.246,168,1.631,203,1.922,216,3.353,219,3.7,298,2.255,299,1.842,355,2.121,368,3.076,413,2.647,414,3.697,415,2.593,416,2.827,417,2.827,422,1.922,423,3.511,425,1.922,426,3.511,428,1.922,430,3.511,432,1.922,433,2.387,434,2.121,437,2.387,439,2.387,444,2.387,446,2.387,448,2.387,487,3.708,491,2.387,551,1.763,599,2.827,600,2.387,601,2.387,602,2.792,603,2.792,604,2.792,605,2.792,606,2.792,607,4.008,608,2.792,609,2.387,610,3.511,611,2.845,612,2.387,613,1.922,614,2.387,615,2.387,616,2.792,617,2.792,618,2.792,619,2.792,620,2.792,621,2.792,622,2.792]],["title/modules/OrderModule.html",[47,1.297,61,2.297]],["body/modules/OrderModule.html",[2,2.261,3,0.261,4,0.292,5,0.261,12,0.02,19,0.796,21,1.094,30,0.324,31,0.228,45,0.016,46,0.016,47,2.221,49,2.002,50,2.129,51,2.428,52,2.428,53,2.129,54,3.386,55,2.428,61,4.364,64,3.082,65,2.428,66,2.27,599,4.288,611,4.036,612,3.82,623,3.82,624,3.82,625,4.467,626,4.467]],["title/injectables/OrderService.html",[154,1.103,611,2.124]],["body/injectables/OrderService.html",[3,0.142,4,0.158,5,0.142,7,0.269,8,1.12,12,0.021,14,0.827,16,1.634,19,0.688,21,0.594,30,0.176,31,0.123,33,2.385,39,1.634,45,0.01,46,0.01,154,1.12,155,1.231,157,2.132,158,1.56,159,1.416,160,1.886,162,1.634,163,1.549,164,0.688,165,1.25,166,1.784,168,1.416,172,1.231,184,2.432,185,2.273,225,2.923,232,2.132,298,2.224,299,1.699,307,1.062,345,2.999,356,1.416,370,2.072,379,2.432,390,3.826,408,2.542,413,2.007,414,3.445,415,2.332,416,2.542,417,2.542,422,2.542,425,2.542,428,2.542,435,3.208,471,3.158,487,2.157,607,3.16,611,3.554,627,2.072,628,2.423,629,3.693,630,4.474,631,2.423,632,2.423,633,2.423,634,2.423,635,4.474,636,2.423,637,2.423,638,2.423,639,2.423,640,2.423,641,3.693,642,3.826,643,3.693,644,2.423,645,2.423,646,3.693,647,3.693,648,2.423,649,3.693,650,2.423,651,2.072,652,2.423,653,2.423,654,2.423,655,2.423,656,2.423,657,2.423]],["title/classes/PrismaClientExceptionFilter.html",[31,0.185,658,2.763]],["body/classes/PrismaClientExceptionFilter.html",[3,0.162,4,0.182,5,0.162,7,0.308,8,1.241,12,0.021,14,0.405,16,0.842,19,0.763,21,0.68,30,0.201,31,0.142,36,2.583,45,0.011,46,0.011,75,1.623,100,2.375,101,2.375,106,3.498,137,2.375,162,0.842,163,0.799,164,0.355,165,0.645,166,1.631,170,4.363,177,2.11,194,2.11,209,2.816,218,2.375,222,1.51,232,2.846,278,0.645,330,2.11,356,1.623,373,4.883,374,2.375,375,2.375,381,2.11,384,4.581,385,4.086,386,2.375,389,3.498,402,2.11,547,2.078,658,3.108,659,3.498,660,4.581,661,3.498,662,2.375,663,4.856,664,3.498,665,4.856,666,2.777,667,4.856,668,5.357,669,5.357,670,5.357,671,2.777,672,4.09,673,2.777,674,2.375,675,2.777,676,2.777,677,2.777,678,2.777,679,2.777,680,2.777,681,4.09,682,2.777,683,2.777,684,2.777,685,2.777,686,2.777,687,2.777,688,4.09,689,2.777,690,2.777,691,2.777,692,2.777,693,4.09,694,4.09,695,3.498,696,2.777,697,2.777,698,2.777,699,2.777,700,2.777,701,2.777,702,2.777,703,2.11,704,2.777,705,2.777,706,2.777]],["title/modules/PrismaModule.html",[47,1.297,62,1.977]],["body/modules/PrismaModule.html",[3,0.257,4,0.287,5,0.257,12,0.02,19,0.717,21,1.077,30,0.319,31,0.224,45,0.016,46,0.016,47,2.205,49,1.97,50,2.095,51,2.39,52,2.39,53,2.095,54,3.36,55,3.36,62,3.802,64,3.051,65,2.39,66,2.234,160,2.749,707,3.759,708,3.759,709,3.759,710,4.396,711,5.612,712,4.396]],["title/injectables/PrismaService.html",[154,1.103,160,1.371]],["body/injectables/PrismaService.html",[3,0.21,4,0.153,5,0.137,7,0.259,8,1.091,12,0.021,14,0.716,16,1.328,19,0.678,21,0.573,30,0.17,31,0.119,39,1.328,45,0.01,46,0.01,70,1.367,85,1.778,110,1.778,117,1.955,143,1.478,154,1.091,155,1.189,157,2.868,158,0.989,160,1.356,162,1.091,163,1.034,164,0.46,165,0.835,166,0.933,180,1.611,185,2.497,193,1.611,200,1.778,223,3.383,226,1.611,232,2.527,351,2.732,356,1.367,381,1.778,385,1.478,547,1.827,557,1.778,563,3.075,575,2.002,642,2.002,664,2.002,703,1.778,713,1.778,714,4.379,715,4.914,716,3.596,717,5.598,718,2.341,719,2.341,720,3.596,721,4.914,722,2.341,723,2.341,724,3.075,725,2.341,726,2.002,727,2.002,728,2.732,729,2.002,730,4.203,731,1.611,732,4.203,733,3.745,734,2.002,735,3.327,736,2.341,737,2.002,738,2.341,739,2.341,740,2.341,741,3.596,742,2.341,743,2.341,744,2.341,745,2.341,746,2.341,747,2.341,748,2.341,749,2.341,750,2.341,751,3.075,752,3.596,753,2.341,754,2.341,755,2.341,756,2.341,757,2.341,758,2.341,759,2.341,760,2.341,761,2.341,762,2.341,763,2.341,764,2.341,765,2.341,766,2.341,767,2.002,768,2.341,769,3.075,770,2.341,771,2.341,772,2.341,773,2.341,774,2.341,775,2.341,776,2.341,777,2.341,778,2.341,779,2.341,780,2.341,781,2.341,782,2.341,783,2.341,784,2.341,785,2.341,786,2.341,787,2.341,788,2.341,789,2.341,790,2.341,791,2.341,792,2.002,793,2.341]],["title/classes/RequestWithUser.html",[31,0.185,542,2.504]],["body/classes/RequestWithUser.html",[3,0.27,4,0.302,5,0.27,7,0.512,12,0.02,14,0.673,19,0.59,30,0.419,31,0.295,45,0.016,46,0.016,90,2.51,135,3.179,136,3.179,164,0.59,209,3.985,222,2.51,278,1.071,280,1.852,299,1.259,307,2.004,502,2.916,541,3.508,542,4.354,545,3.994,546,3.948,547,2.941,794,4.617]],["title/classes/ServiceStatus.html",[31,0.185,173,2.504]],["body/classes/ServiceStatus.html",[3,0.182,4,0.204,5,0.182,7,0.345,9,2.367,10,2.367,12,0.021,14,0.824,19,0.568,21,0.763,22,1.693,30,0.226,31,0.227,32,1.396,33,1.485,36,3.273,39,1.348,45,0.012,46,0.012,117,2.417,143,1.967,154,1.348,156,2.367,157,1.485,158,1.878,160,1.676,162,0.945,163,0.896,164,0.722,165,0.723,166,1.773,170,2.145,171,2.016,172,1.583,173,3.891,174,5.692,175,5.314,176,4.294,177,4.541,178,5.111,179,3.377,180,3.06,181,2.664,182,2.367,183,3.801,184,2.417,185,1.583,186,2.664,187,2.664,188,2.664,189,2.664,190,2.664,191,2.664,192,2.367,193,3.06,194,3.377,195,2.367,196,3.801,197,2.664,198,2.664,199,2.664,200,2.367,278,0.723,280,1.423,529,3.938,795,3.115,796,3.115,797,3.115,798,3.115,799,3.115]],["title/classes/SignUpPayload.html",[31,0.185,297,1.848]],["body/classes/SignUpPayload.html",[3,0.205,4,0.23,5,0.205,7,0.389,12,0.021,14,0.869,30,0.479,31,0.329,45,0.014,46,0.014,150,3.361,164,0.825,171,2.303,278,0.815,280,1.547,281,2.8,282,1.785,291,2.635,292,1.674,295,2.457,296,1.909,297,2.81,298,2.246,299,1.508,300,3.239,301,3.239,302,3.65,303,1.785,304,2.052,305,3.231,306,2.052,307,1.391,308,1.909,309,3.239,310,1.909,311,1.909,312,1.785,313,1.909,314,1.674,800,3.513,801,3.513,802,3.513,803,3.513]],["title/classes/UpdateBookDto.html",[31,0.185,429,2.297]],["body/classes/UpdateBookDto.html",[3,0.299,4,0.334,5,0.299,12,0.02,19,0.787,30,0.37,31,0.26,45,0.017,46,0.017,278,1.186,413,2.778,419,2.985,429,3.891,438,4.369,469,3.882,547,2.596,804,4.369,805,4.369,806,3.882,807,3.882,808,5.11]],["title/classes/UpdateOrderDto.html",[31,0.185,607,2.297]],["body/classes/UpdateOrderDto.html",[3,0.264,4,0.296,5,0.264,7,0.501,11,1.803,12,0.02,14,0.659,19,0.8,30,0.328,31,0.291,45,0.016,46,0.016,164,0.578,165,1.326,278,1.049,280,1.828,290,2.642,299,1.558,413,2.458,484,4.341,485,4.341,487,2.642,489,3.436,490,5.357,547,2.298,607,3.609,610,3.867,805,3.867,806,3.436,807,3.436,809,4.886,810,4.522,811,4.522,812,4.522]],["title/classes/User.html",[31,0.185,307,1.046]],["body/classes/User.html",[3,0.189,4,0.211,5,0.189,7,0.358,12,0.021,14,0.943,30,0.469,31,0.321,45,0.013,46,0.013,150,3.285,164,0.858,165,1.46,171,2.244,278,0.751,280,1.461,281,2.717,282,1.643,291,2.522,292,1.541,295,2.32,296,1.758,297,2.32,298,2.166,299,1.443,300,3.125,301,3.125,302,3.541,303,1.643,304,1.889,305,3.091,306,1.889,307,1.522,308,2.876,309,3.515,310,2.876,311,2.876,312,1.643,313,1.758,314,1.541,813,3.234,814,3.234,815,3.234,816,3.234,817,3.234,818,3.234,819,3.234]],["title/controllers/UserController.html",[0,1.536,346,2.124]],["body/controllers/UserController.html",[0,1.305,2,1.232,3,0.181,4,0.202,5,0.181,7,0.342,8,1.34,11,2.057,12,0.021,14,0.752,16,1.565,19,0.792,21,0.757,30,0.224,31,0.157,32,1.384,39,1.565,45,0.012,46,0.012,154,1.34,157,2.459,162,1.565,163,1.484,164,0.659,165,1.197,168,1.805,170,2.127,185,1.57,195,2.347,203,2.127,212,3.762,216,3.042,299,1.69,307,1.938,345,2.621,346,2.581,352,2.347,355,2.347,356,1.805,368,3.556,432,3.042,434,3.357,494,3.556,545,1.951,551,1.951,609,2.642,613,2.127,614,2.642,615,4.412,695,2.642,820,2.642,821,2.642,822,3.779,823,3.779,824,4.419,825,2.642,826,3.089,827,3.089,828,2.642,829,3.089,830,3.089,831,3.089,832,3.089,833,3.089,834,3.089,835,3.089,836,3.089,837,3.089,838,3.089,839,3.089,840,2.642,841,3.089,842,3.089,843,3.089,844,3.089,845,3.089]],["title/modules/UserModule.html",[47,1.297,63,2.297]],["body/modules/UserModule.html",[2,2.064,3,0.227,4,0.254,5,0.227,12,0.021,19,0.826,21,0.951,30,0.281,31,0.198,45,0.014,46,0.014,47,2.077,49,1.741,50,1.851,51,2.111,52,2.111,53,1.851,54,3.165,55,2.111,59,3.886,62,3.616,63,4.524,64,2.814,65,2.111,66,1.974,68,3.933,71,3.322,93,2.951,345,3.38,346,4.03,352,2.951,353,3.322,846,3.322,847,3.322,848,3.884,849,3.884]],["title/injectables/UserService.html",[154,1.103,345,1.848]],["body/injectables/UserService.html",[3,0.184,4,0.205,5,0.184,7,0.348,8,1.357,12,0.021,14,0.827,16,1.58,19,0.665,21,0.77,30,0.228,31,0.16,32,1.408,39,1.58,45,0.012,46,0.012,154,1.357,155,1.596,157,2.97,158,1.327,159,1.835,160,2.139,162,1.721,163,1.632,164,0.725,165,1.317,166,1.783,168,2.613,172,1.596,185,2.272,212,3.936,232,2.131,298,1.963,299,1.818,307,1.632,345,2.272,368,4.05,379,1.708,393,2.387,415,2.825,432,3.079,494,3.583,651,2.687,822,3.825,823,3.825,825,3.825,828,3.825,850,2.687,851,3.142,852,3.142,853,3.142,854,4.473,855,3.142,856,3.142,857,4.473,858,3.142]],["title/coverage.html",[859,3.762]],["body/coverage.html",[0,2.183,1,1.524,5,0.129,6,1.893,12,0.021,22,1.203,31,0.353,45,0.01,46,0.01,53,1.055,67,2.617,90,1.203,96,1.398,98,1.682,154,1.792,156,2.617,160,0.834,164,0.283,173,1.524,184,1.203,201,1.398,202,1.893,208,1.293,220,1.203,267,2.617,279,1.893,291,1.055,292,2.608,295,1.125,297,1.125,303,1.125,307,0.991,312,1.125,318,1.398,326,2.175,327,1.893,335,1.398,344,1.893,345,1.125,346,2.012,354,1.682,360,1.893,408,1.524,409,1.893,410,1.524,411,1.893,419,1.293,429,1.398,435,1.203,454,1.893,468,1.893,469,2.617,487,1.293,488,1.893,489,2.617,494,1.398,495,1.893,496,1.893,502,2.175,503,2.371,505,3.559,506,3.559,534,1.682,541,3.212,542,1.524,551,1.398,552,1.893,558,1.893,594,6.299,597,1.682,598,1.893,599,1.524,600,1.893,607,1.398,611,1.293,613,1.524,627,1.893,658,1.682,659,1.893,660,2.946,661,1.893,662,1.893,713,3.212,728,1.682,735,1.682,804,1.893,809,1.893,820,2.946,850,1.893,859,1.682,860,1.682,861,2.214,862,2.214,863,6.069,864,5.714,865,6.069,866,6.581,867,5.714,868,4.771,869,2.946,870,2.946,871,4.228,872,3.444,873,1.893,874,2.214,875,1.893,876,2.214,877,2.214]],["title/dependencies.html",[50,2.083,878,2.602]],["body/dependencies.html",[12,0.021,21,0.895,27,2.775,28,3.773,31,0.253,45,0.014,46,0.014,50,1.741,70,2.134,72,3.123,75,2.134,77,3.123,81,4.361,84,3.123,85,2.775,88,3.123,118,3.123,151,3.123,166,1.456,222,1.985,239,2.775,290,2.134,322,2.775,362,2.515,372,3.123,555,2.775,573,4.247,674,3.123,724,3.123,726,3.123,727,3.123,751,3.123,806,2.775,807,2.775,879,3.652,880,3.652,881,3.652,882,5.643,883,3.652,884,3.652,885,3.652,886,3.652,887,3.652,888,3.652,889,3.652,890,3.652,891,3.652,892,3.652,893,3.652,894,3.652,895,3.652,896,3.652,897,3.652,898,3.652,899,3.652,900,3.652,901,3.652,902,3.652,903,3.652,904,3.652,905,3.652,906,3.652,907,3.652,908,3.652,909,3.123,910,3.652,911,3.652,912,3.652,913,3.652,914,3.652,915,3.652,916,3.652,917,3.652,918,3.652]],["title/miscellaneous/functions.html",[919,1.777,920,3.738]],["body/miscellaneous/functions.html",[7,0.58,12,0.019,45,0.017,46,0.017,53,3.184,162,1.587,163,1.504,165,1.214,335,3.304,505,3.601,506,4.302,514,3.974,873,5.343,875,4.473,919,3.056,920,4.473,921,5.231,922,4.473]],["title/index.html",[7,0.337,923,2.602,924,2.602]],["body/index.html",[2,1.662,12,0.02,45,0.012,46,0.012,47,1.016,49,1.868,81,1.962,96,3.112,99,4.12,102,3.744,105,2.437,107,2.437,108,2.437,111,3.564,145,2.437,166,1.965,180,2.869,182,2.165,204,2.437,205,1.799,206,1.799,241,2.437,246,2.437,256,2.437,282,1.448,307,0.819,362,1.962,379,2.266,413,1.549,508,2.437,601,3.564,703,2.165,731,1.962,737,3.564,767,3.564,792,3.564,821,3.564,840,4.214,859,2.165,860,3.744,909,4.214,925,2.849,926,2.437,927,2.849,928,4.168,929,6.226,930,4.168,931,2.849,932,2.849,933,2.849,934,2.849,935,2.849,936,2.849,937,2.849,938,2.849,939,2.849,940,2.849,941,2.849,942,4.168,943,2.849,944,2.849,945,2.849,946,2.849,947,4.168,948,4.928,949,2.849,950,2.849,951,2.849,952,2.849,953,2.849,954,2.849,955,4.168,956,2.849,957,2.849,958,2.849,959,2.849,960,2.849,961,2.849,962,2.849,963,2.849,964,2.849,965,2.849,966,2.849,967,2.437,968,2.849,969,2.849,970,2.849,971,2.849,972,2.849,973,2.849,974,2.849,975,2.849,976,4.168,977,4.928,978,2.849,979,2.849,980,2.849,981,2.849,982,2.849,983,2.849,984,2.849,985,2.849,986,2.849,987,2.849,988,2.849,989,2.849,990,2.849,991,2.849,992,2.849,993,2.849,994,2.849,995,2.849,996,6.383,997,2.849,998,2.849,999,2.849,1000,2.437,1001,2.849,1002,2.849,1003,2.849,1004,6.027,1005,2.849,1006,2.849,1007,2.849,1008,2.849,1009,2.849,1010,2.849,1011,2.165,1012,2.849]],["title/license.html",[923,2.602,924,2.602,1013,2.311]],["body/license.html",[12,0.014,45,0.014,46,0.014,66,1.981,193,2.684,222,2.119,382,4.437,731,2.684,860,2.961,967,3.333,1000,4.437,1011,2.961,1013,2.961,1014,5.833,1015,3.898,1016,3.898,1017,3.898,1018,5.189,1019,3.898,1020,3.898,1021,3.898,1022,3.898,1023,3.898,1024,3.898,1025,6.989,1026,3.898,1027,3.898,1028,5.833,1029,3.898,1030,5.189,1031,3.898,1032,3.898,1033,3.898,1034,3.898,1035,3.898,1036,3.898,1037,3.898,1038,3.898,1039,3.898,1040,5.189,1041,3.898,1042,3.898,1043,3.898,1044,3.898,1045,3.898,1046,3.898,1047,3.898,1048,5.189,1049,5.189,1050,3.898,1051,3.898,1052,3.898,1053,3.898,1054,3.898,1055,3.898,1056,3.898,1057,3.898,1058,3.898,1059,3.898,1060,3.898,1061,3.898,1062,3.898,1063,3.898,1064,3.898,1065,3.898,1066,3.898,1067,3.898,1068,3.898,1069,3.898,1070,3.898,1071,3.898,1072,3.898,1073,3.898,1074,3.898,1075,3.898,1076,3.898]],["title/modules.html",[49,2.219]],["body/modules.html",[12,0.017,45,0.017,46,0.017,48,3.422,49,2.228,59,2.904,60,3.14,61,3.14,62,2.702,63,3.14,1077,7.095,1078,7.095,1079,7.095,1080,7.095]],["title/overview.html",[1081,4.235]],["body/overview.html",[2,1.353,12,0.02,22,2.952,45,0.013,46,0.013,47,1.21,48,4.892,49,1.521,50,1.617,51,1.845,52,1.845,53,1.617,54,1.845,55,1.845,56,2.902,57,2.902,58,2.902,59,4.016,60,3.897,61,3.897,62,3.633,63,4.387,64,2.567,65,1.845,66,1.724,155,1.724,160,2.47,220,2.952,278,0.788,315,2.902,316,2.902,318,3.429,345,2.759,346,3.172,435,2.952,450,2.902,451,2.902,504,2.902,611,3.172,623,2.902,624,2.902,707,2.902,708,2.902,709,2.902,769,2.902,846,2.902,847,2.902,1081,2.902,1082,3.394,1083,3.394,1084,3.394,1085,3.394]],["title/properties.html",[280,1.399,878,2.602]],["body/properties.html",[12,0.021,45,0.017,46,0.017,280,1.643,926,4.39,1011,3.9,1013,3.9,1086,5.133,1087,5.133,1088,5.133,1089,5.133,1090,5.133,1091,5.133,1092,6.178,1093,5.133,1094,5.133,1095,5.133,1096,5.133,1097,5.133]],["title/miscellaneous/typealiases.html",[919,1.777,1098,4.371]],["body/miscellaneous/typealiases.html",[7,0.597,12,0.019,45,0.018,46,0.018,150,3.23,164,0.688,292,2.566,309,3.456,313,2.927,314,2.566,919,3.145,1099,5.384,1100,6.357]],["title/miscellaneous/variables.html",[919,1.777,1101,3.738]],["body/miscellaneous/variables.html",[3,0.185,7,0.351,12,0.021,36,4.221,39,1.728,45,0.013,46,0.013,67,2.408,90,1.723,96,2.842,97,2.71,98,3.419,99,2.408,134,2.408,143,2.001,164,0.669,171,1.866,179,3.419,184,1.723,232,2.494,307,1.294,330,3.419,335,2.842,351,2.408,354,3.419,379,3.096,385,2.001,503,3.602,505,2.182,506,3.921,509,2.71,514,2.408,529,5.077,532,2.71,534,3.419,545,2.001,613,3.098,713,2.408,728,3.419,729,2.71,730,4.871,731,2.182,732,4.871,733,4.474,734,2.71,735,3.419,869,2.71,870,4.474,919,1.851,922,4.474,1101,2.71,1102,4.5,1103,4.5,1104,4.5,1105,4.5,1106,4.5,1107,3.169,1108,3.169,1109,3.169,1110,3.169,1111,3.169,1112,3.169]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":594,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["0.1.13",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1087,"title":{},"body":{"properties.html":{}}}],["0.30.3",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":37,"title":{"classes/AuthResolver-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["1.4.6",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["1.78.0",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["12.0.7",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["12.0.8",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["16.7.1",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["17.9.2",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["18.0.2",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":769,"title":{},"body":{"injectables/PrismaService.html":{},"overview.html":{}}}],["2.0.0",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1016,"title":{},"body":{"license.html":{}}}],["21",{"_index":1085,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["3600000",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["4.0.1",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":585,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5",{"_index":1083,"title":{},"body":{"overview.html":{}}}],["5.2.3",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":698,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["6",{"_index":1082,"title":{},"body":{"overview.html":{}}}],["60",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["7.8.1",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["7d056s1koop2",{"_index":706,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["8",{"_index":1084,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1047,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":302,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["access_token",{"_index":296,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["accessible",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":1071,"title":{},"body":{"license.html":{}}}],["actual",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["aliases",{"_index":1099,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":936,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1038,"title":{},"body":{"license.html":{}}}],["angular",{"_index":983,"title":{},"body":{"index.html":{}}}],["api",{"_index":840,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["api.bookstore.nas",{"_index":925,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["apollodriver",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagegraphqlplayground",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["app.close",{"_index":788,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["app.dto",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appended",{"_index":589,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":946,"title":{},"body":{"index.html":{}}}],["arg",{"_index":516,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice",{"_index":528,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(1).split",{"_index":525,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(2",{"_index":521,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.startswith",{"_index":517,"title":{},"body":{"interfaces/Flags.html":{}}}],["argon",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(dto.password",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.verify(user.hash",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["args",{"_index":335,"title":{},"body":{"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":512,"title":{},"body":{"interfaces/Flags.html":{}}}],["argumentshost",{"_index":669,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["arising",{"_index":1075,"title":{},"body":{"license.html":{}}}],["array",{"_index":513,"title":{},"body":{"interfaces/Flags.html":{}}}],["asia/kolkata",{"_index":786,"title":{},"body":{"injectables/PrismaService.html":{}}}],["associated",{"_index":1026,"title":{},"body":{"license.html":{}}}],["async",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth.service",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth/auth.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/decorator",{"_index":355,"title":{},"body":{"classes/AuthResolver-1.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["auth/guard",{"_index":614,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["authcontroller",{"_index":201,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authdto",{"_index":208,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authenticated",{"_index":937,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":969,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":554,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authguard('jwt",{"_index":556,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authinput",{"_index":291,"title":{"classes/AuthInput.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1096,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":970,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1064,"title":{},"body":{"license.html":{}}}],["authpayload",{"_index":295,"title":{"classes/AuthPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["authresolver",{"_index":326,"title":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{}},"body":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"coverage.html":{}}}],["authservice",{"_index":220,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":1089,"title":{},"body":{"properties.html":{}}}],["based",{"_index":694,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["baseexceptionfilter",{"_index":663,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["between",{"_index":963,"title":{},"body":{"index.html":{}}}],["body",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["book",{"_index":408,"title":{"classes/Book.html":{}},"body":{"classes/Book.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["book.controller",{"_index":453,"title":{},"body":{"modules/BookModule.html":{}}}],["book.dto",{"_index":438,"title":{},"body":{"controllers/BookController.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts",{"_index":469,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.dto.ts:10",{"_index":482,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:14",{"_index":476,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:18",{"_index":478,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:22",{"_index":480,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:6",{"_index":481,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.point",{"_index":646,"title":{},"body":{"injectables/OrderService.html":{}}}],["book.service",{"_index":436,"title":{},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{}}}],["book/book.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["book/book.service",{"_index":639,"title":{},"body":{"injectables/OrderService.html":{}}}],["bookcontroller",{"_index":410,"title":{"controllers/BookController.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"coverage.html":{}}}],["bookid",{"_index":490,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["bookmodule",{"_index":60,"title":{"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["books",{"_index":412,"title":{},"body":{"controllers/BookController.html":{}}}],["bookservice",{"_index":435,"title":{"injectables/BookService.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["bookstore.nas",{"_index":1090,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["browse",{"_index":1080,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1077,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1093,"title":{},"body":{"properties.html":{}}}],["built",{"_index":928,"title":{},"body":{"index.html":{}}}],["business",{"_index":947,"title":{},"body":{"index.html":{}}}],["c",{"_index":1015,"title":{},"body":{"license.html":{}}}],["cache",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('home",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["cachemodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(5",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(number.max_safe_integer",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(undefined)@get('health",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["case",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["catch",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["catch((err",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["catch(exception",{"_index":666,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["catch(prismaclientunknownrequesterror",{"_index":675,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["chalk",{"_index":755,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.cyan(json.stringify(e.params",{"_index":760,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.green(e.query",{"_index":758,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.magenta(`${e.duration}ms",{"_index":762,"title":{},"body":{"injectables/PrismaService.html":{}}}],["charge",{"_index":1022,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1067,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"classes/Order.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":278,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"classes/Order.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cleandb",{"_index":715,"title":{},"body":{"injectables/PrismaService.html":{}}}],["clear",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["client",{"_index":660,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bookmodule",{"_index":450,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_providers",{"_index":451,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":623,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_providers",{"_index":624,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":707,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":708,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":709,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":846,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":848,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":847,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["compodoc",{"_index":980,"title":{},"body":{"index.html":{}}}],["compression",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["concerns",{"_index":951,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1046,"title":{},"body":{"license.html":{}}}],["config",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":748,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mode",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":968,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configuration",{"_index":965,"title":{},"body":{"index.html":{}}}],["connect",{"_index":187,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connected",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connecting",{"_index":782,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"license.html":{}}}],["connectors/postgresql#configuring",{"_index":744,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.count('db",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["console.debug",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["console.debug(req.cookies",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.error",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ServiceStatus.html":{}}}],["console.error('db",{"_index":700,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.error('db:caught",{"_index":696,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.error(exception.message",{"_index":676,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.info(new",{"_index":781,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":856,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('extracted",{"_index":595,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('flags",{"_index":533,"title":{},"body":{"interfaces/Flags.html":{}}}],["console.log(chalk.yellow('duration",{"_index":761,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('params",{"_index":759,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('query",{"_index":757,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('duration",{"_index":779,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('params",{"_index":777,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('query",{"_index":775,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":686,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["constructor",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":328,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(config",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(ok",{"_index":795,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["constructor(prisma",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["context",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1072,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('books",{"_index":440,"title":{},"body":{"controllers/BookController.html":{}}}],["controller('orders",{"_index":616,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('users",{"_index":834,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["cookie",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["cookiename",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["cookies",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["copies",{"_index":1040,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1000,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1014,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":859,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coverimage",{"_index":470,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["create",{"_index":413,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"index.html":{}}}],["create(@body",{"_index":441,"title":{},"body":{"controllers/BookController.html":{}}}],["create(createbookdto",{"_index":418,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["create(createorderdto",{"_index":629,"title":{},"body":{"injectables/OrderService.html":{}}}],["create(userid",{"_index":602,"title":{},"body":{"controllers/OrderController.html":{}}}],["createbookdto",{"_index":419,"title":{"classes/CreateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["createdat",{"_index":300,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["createorderdto",{"_index":487,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":939,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":330,"title":{},"body":{"classes/AuthResolver.html":{},"classes/PrismaClientExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":678,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["ctx.req",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.res",{"_index":343,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentflag",{"_index":515,"title":{},"body":{"interfaces/Flags.html":{}}}],["customerid",{"_index":491,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{}}}],["customize",{"_index":693,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["damages",{"_index":1068,"title":{},"body":{"license.html":{}}}],["data",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":703,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["database_url",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["datasources",{"_index":746,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["datetime",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["db",{"_index":200,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["db_connected",{"_index":735,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_error:unique",{"_index":690,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["dbstatus",{"_index":183,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.debug",{"_index":199,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.ok",{"_index":197,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.status",{"_index":198,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["deal",{"_index":1027,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1076,"title":{},"body":{"license.html":{}}}],["debug",{"_index":178,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"controllers/BookController.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"controllers/OrderController.html":{},"classes/UpdateOrderDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["definitionsfactory",{"_index":534,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["definitionsfactory.generate",{"_index":535,"title":{},"body":{"interfaces/Flags.html":{}}}],["delete",{"_index":432,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":426,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["deleted",{"_index":844,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":822,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@getuser('userid",{"_index":843,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":825,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":926,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["dev/test/prod",{"_index":999,"title":{},"body":{"index.html":{}}}],["development",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["distribute",{"_index":1036,"title":{},"body":{"license.html":{}}}],["docs",{"_index":988,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":860,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":642,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{}}}],["domain",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["domain.com",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["down",{"_index":791,"title":{},"body":{"injectables/PrismaService.html":{}}}],["driver",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.password",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/create",{"_index":437,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["dto/update",{"_index":439,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["due",{"_index":195,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["e",{"_index":754,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.g",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["e.params",{"_index":774,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.query",{"_index":763,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e2e",{"_index":737,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["edituser",{"_index":823,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituser(@getuser('userid",{"_index":837,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(userid",{"_index":828,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituserdto",{"_index":494,"title":{"classes/EditUserDto.html":{}},"body":{"classes/EditUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["em",{"_index":990,"title":{},"body":{"index.html":{}}}],["email",{"_index":281,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["emit",{"_index":730,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":716,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":720,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enough",{"_index":648,"title":{},"body":{"injectables/OrderService.html":{}}}],["env",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":1001,"title":{},"body":{"index.html":{}}}],["env.local",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["env.prod",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["envfile",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["error",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["error.code",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["event",{"_index":731,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":740,"title":{},"body":{"injectables/PrismaService.html":{}}}],["exception",{"_index":672,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.code",{"_index":681,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":662,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:16",{"_index":671,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.message",{"_index":680,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.message.replace(/\\n/g",{"_index":679,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception/prisma",{"_index":661,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["executioncontext",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":643,"title":{},"body":{"injectables/OrderService.html":{}}}],["expiration",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":547,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{}}}],["extract",{"_index":511,"title":{},"body":{"interfaces/Flags.html":{}}}],["extractflags",{"_index":873,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractflags(args",{"_index":514,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":577,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie(req",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":194,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{}}}],["false",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["fieldresolverenhancers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["fields",{"_index":692,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":967,"title":{},"body":{"index.html":{},"license.html":{}}}],["fill",{"_index":1002,"title":{},"body":{"index.html":{}}}],["find",{"_index":989,"title":{},"body":{"index.html":{}}}],["findall",{"_index":414,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findone",{"_index":415,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":444,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["findone(id",{"_index":422,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findone(userid",{"_index":854,"title":{},"body":{"injectables/UserService.html":{}}}],["first",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firstname",{"_index":310,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["fitness",{"_index":1060,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{}}}],["fixme:unsure",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["flag",{"_index":519,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys",{"_index":524,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys.foreach((key",{"_index":526,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagname",{"_index":520,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags",{"_index":503,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["flags.w",{"_index":540,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags.watch",{"_index":539,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[currentflag",{"_index":531,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[flagname",{"_index":522,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[key",{"_index":527,"title":{},"body":{"interfaces/Flags.html":{}}}],["followed",{"_index":944,"title":{},"body":{"index.html":{}}}],["following",{"_index":1045,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{}}}],["forbiddenexception(\"user",{"_index":641,"title":{},"body":{"injectables/OrderService.html":{}}}],["forbiddenexception('credentials",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('incorrect",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":725,"title":{},"body":{"injectables/PrismaService.html":{}}}],["format(query",{"_index":765,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formattedquery",{"_index":764,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formatter",{"_index":727,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["free",{"_index":1021,"title":{},"body":{"license.html":{}}}],["function",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{},"coverage.html":{}}}],["functional",{"_index":934,"title":{},"body":{"index.html":{}}}],["functions",{"_index":920,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1043,"title":{},"body":{"license.html":{}}}],["g",{"_index":995,"title":{},"body":{"index.html":{}}}],["generate",{"_index":984,"title":{},"body":{"index.html":{}}}],["generated",{"_index":987,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":423,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["get('health",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":835,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@cachekey('home')@cachettl(number.max_safe_integer",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["gethealth",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["getme",{"_index":824,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(@getuser",{"_index":836,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(user",{"_index":831,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":923,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":613,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser('userid",{"_index":617,"title":{},"body":{"controllers/OrderController.html":{}}}],["getusergraphql",{"_index":354,"title":{},"body":{"classes/AuthResolver-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":711,"title":{},"body":{"modules/PrismaModule.html":{}}}],["gqlexceptionfilter",{"_index":665,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1020,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"dependencies.html":{},"index.html":{}}}],["graphql:schema",{"_index":933,"title":{},"body":{"index.html":{}}}],["graphqlargumentshost",{"_index":670,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["graphqlcontext",{"_index":90,"title":{"classes/GraphqlContext.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqldatetime",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqldefinitionsfactory",{"_index":509,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["handled",{"_index":948,"title":{},"body":{"index.html":{}}}],["handling",{"_index":705,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["hash",{"_index":308,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["hashing",{"_index":974,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":981,"title":{},"body":{"index.html":{}}}],["here",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1019,"title":{},"body":{"license.html":{}}}],["hiro",{"_index":1017,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1065,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1091,"title":{},"body":{"properties.html":{}}}],["host",{"_index":668,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":677,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["hour",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["http",{"_index":952,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('signin",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["httponly",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["https",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com/fundamentals/lifecycle",{"_index":739,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://github.com/jsfame/api.bookstore.nas",{"_index":1092,"title":{},"body":{"properties.html":{}}}],["https://github.com/jsfame/api.bookstore.nas/issues",{"_index":1094,"title":{},"body":{"properties.html":{}}}],["https://jsfame.github.io/api.bookstore.nas",{"_index":991,"title":{},"body":{"index.html":{}}}],["https://www.prisma.io/blog/nestjs",{"_index":704,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["https://www.prisma.io/docs/concepts/database",{"_index":743,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://www.prisma.io/docs/reference/api",{"_index":682,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.bad_request",{"_index":689,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.conflict",{"_index":687,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":702,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["id",{"_index":298,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":752,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ignoreexpiration",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implemented",{"_index":954,"title":{},"body":{"index.html":{}}}],["implements",{"_index":664,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{}}}],["implied",{"_index":1056,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["import('chalk",{"_index":756,"title":{},"body":{"injectables/PrismaService.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["imutation",{"_index":303,"title":{"classes/IMutation.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["included",{"_index":1050,"title":{},"body":{"license.html":{}}}],["including",{"_index":1030,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":721,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":154,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":691,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["inspect",{"_index":940,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":982,"title":{},"body":{"index.html":{}}}],["install",{"_index":994,"title":{},"body":{"index.html":{}}}],["installation",{"_index":992,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":997,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["interactions",{"_index":956,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":502,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":504,"title":{},"body":{"interfaces/Flags.html":{},"overview.html":{}}}],["iquery",{"_index":312,"title":{"classes/IQuery.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["isarray",{"_index":483,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["isemail",{"_index":287,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{}}}],["isemail()@isnotempty",{"_index":283,"title":{},"body":{"classes/AuthDto.html":{}}}],["isemail()@isoptional",{"_index":497,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isglobal",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":484,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isnotempty",{"_index":288,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{}}}],["isnotempty()@isint",{"_index":477,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{}}}],["isnotempty()@isstring",{"_index":475,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["iso",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["isoptional",{"_index":485,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isoptional()@isarray",{"_index":479,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["isoptional()@isint",{"_index":810,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["isstring",{"_index":486,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{}}}],["isstring()@isoptional",{"_index":499,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstrongpassword",{"_index":289,"title":{},"body":{"classes/AuthDto.html":{}}}],["isstrongpassword()@isnotempty",{"_index":285,"title":{},"body":{"classes/AuthDto.html":{}}}],["items",{"_index":941,"title":{},"body":{"index.html":{}}}],["jest",{"_index":978,"title":{},"body":{"index.html":{}}}],["john",{"_index":530,"title":{},"body":{"interfaces/Flags.html":{}}}],["joi",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(2",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('hiro@jwt#token",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().valid('dev",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":510,"title":{},"body":{"interfaces/Flags.html":{}}}],["join(process.cwd",{"_index":537,"title":{},"body":{"interfaces/Flags.html":{}}}],["jwt",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt_max_age",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt_secret",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtconstants",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":576,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":551,"title":{"classes/JwtGuard.html":{}},"body":{"classes/JwtGuard.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":324,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":318,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtstrategy.extractjwtfromcookie",{"_index":578,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["keywordcase",{"_index":770,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kind",{"_index":1055,"title":{},"body":{"license.html":{}}}],["kleur",{"_index":724,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["kleur.cyan(json.stringify(e.params",{"_index":778,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.green(formattedquery",{"_index":776,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.magenta(`${e.duration}ms",{"_index":780,"title":{},"body":{"injectables/PrismaService.html":{}}}],["laciferin@gmail.com",{"_index":1097,"title":{},"body":{"properties.html":{}}}],["landing",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["language",{"_index":766,"title":{},"body":{"injectables/PrismaService.html":{}}}],["lastname",{"_index":311,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["layers",{"_index":964,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":732,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":1069,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1066,"title":{},"body":{"license.html":{}}}],["license",{"_index":1013,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":1012,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1031,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1057,"title":{},"body":{"license.html":{}}}],["linesbetweenqueries",{"_index":772,"title":{},"body":{"injectables/PrismaService.html":{}}}],["literal",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["log",{"_index":749,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logevents",{"_index":728,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":792,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["long",{"_index":518,"title":{},"body":{"interfaces/Flags.html":{}}}],["manage",{"_index":938,"title":{},"body":{"index.html":{}}}],["management",{"_index":966,"title":{},"body":{"index.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(@getusergraphql",{"_index":358,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["me(user",{"_index":348,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["merchantability",{"_index":1059,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1034,"title":{},"body":{"license.html":{}}}],["message",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["methodologies",{"_index":943,"title":{},"body":{"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["milliseconds",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":919,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1011,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1033,"title":{},"body":{"license.html":{}}}],["modular",{"_index":945,"title":{},"body":{"index.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["morph",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["mutation",{"_index":336,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signin",{"_index":331,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signup",{"_index":333,"title":{},"body":{"classes/AuthResolver.html":{}}}],["name",{"_index":163,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["needs",{"_index":695,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"controllers/UserController.html":{}}}],["nest/swagger",{"_index":953,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":909,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":674,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"interfaces/Flags.html":{},"classes/PrismaClientExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":806,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":555,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["netpoint",{"_index":649,"title":{},"body":{"injectables/OrderService.html":{}}}],["new",{"_index":184,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1063,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":637,"title":{},"body":{"injectables/OrderService.html":{}}}],["notfoundexception(\"book",{"_index":645,"title":{},"body":{"injectables/OrderService.html":{}}}],["notice",{"_index":1048,"title":{},"body":{"license.html":{}}}],["npm",{"_index":993,"title":{},"body":{"index.html":{}}}],["null",{"_index":314,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":309,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":299,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object(dto",{"_index":960,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":1024,"title":{},"body":{"license.html":{}}}],["ok",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["onmoduledestroy",{"_index":738,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":717,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["order",{"_index":597,"title":{"classes/Order.html":{}},"body":{"classes/Order.html":{},"coverage.html":{}}}],["order.controller",{"_index":626,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":610,"title":{},"body":{"controllers/OrderController.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts",{"_index":489,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:10",{"_index":492,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:6",{"_index":493,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:8",{"_index":811,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["order.service",{"_index":612,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":599,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":61,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orders",{"_index":601,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["orderservice",{"_index":611,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["otherwise",{"_index":1074,"title":{},"body":{"license.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outputas",{"_index":538,"title":{},"body":{"interfaces/Flags.html":{}}}],["over",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["overview",{"_index":1081,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":971,"title":{},"body":{"index.html":{}}}],["p2002",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["package",{"_index":878,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":433,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["parameters",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":773,"title":{},"body":{"injectables/PrismaService.html":{}}}],["parser",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":805,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{}}}],["partialtype(createbookdto",{"_index":808,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["partialtype(createorderdto",{"_index":812,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["particular",{"_index":1061,"title":{},"body":{"license.html":{}}}],["passport",{"_index":573,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passport.js",{"_index":932,"title":{},"body":{"index.html":{}}}],["passportjs",{"_index":972,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":574,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":282,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"index.html":{}}}],["patch",{"_index":434,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":430,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["path",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["pattern",{"_index":961,"title":{},"body":{"index.html":{}}}],["payload",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["payload.email",{"_index":586,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":1018,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1041,"title":{},"body":{"license.html":{}}}],["person",{"_index":1023,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1042,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":958,"title":{},"body":{"index.html":{}}}],["playground",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["pnpm",{"_index":996,"title":{},"body":{"index.html":{}}}],["point",{"_index":471,"title":{},"body":{"classes/CreateBookDto.html":{},"injectables/OrderService.html":{}}}],["port",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1052,"title":{},"body":{"license.html":{}}}],["post",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["post('signin",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":767,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prefix",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["prerequisite",{"_index":998,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.bookcreateinput",{"_index":456,"title":{},"body":{"injectables/BookService.html":{}}}],["prisma.bookupdateinput",{"_index":461,"title":{},"body":{"injectables/BookService.html":{}}}],["prisma.logdefinition",{"_index":729,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prisma.orderuncheckedcreateinput",{"_index":630,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.orderuncheckedupdateinput",{"_index":635,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":667,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["prisma.service",{"_index":712,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":356,"title":{},"body":{"classes/AuthResolver-1.html":{},"injectables/BookService.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{}}}],["prisma/client/runtime/library",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prisma/prisma.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":714,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientexceptionfilter",{"_index":658,"title":{"classes/PrismaClientExceptionFilter.html":{}},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["prismaclientknownrequesterror",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prismaclientunknownrequesterror",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prismamodule",{"_index":62,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":160,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{}}}],["process.argv.slice(2",{"_index":532,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["process.env.force_color",{"_index":750,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.mode",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["prod",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["production",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project",{"_index":985,"title":{},"body":{"index.html":{}}}],["promise",{"_index":305,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["properties",{"_index":280,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"properties.html":{}}}],["provided",{"_index":1053,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["publish",{"_index":1035,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1062,"title":{},"body":{"license.html":{}}}],["pwmatches",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":351,"title":{},"body":{"classes/AuthResolver-1.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["query('me",{"_index":349,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{}}}],["reference",{"_index":684,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["reference/error",{"_index":683,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["reflect",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":416,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["remove(@param('id",{"_index":448,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["remove(id",{"_index":425,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["replace",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["repo",{"_index":1010,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1095,"title":{},"body":{"properties.html":{}}}],["req",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{}}}],["req.cookies",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.cookies.token",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies[tokenfield].length",{"_index":593,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request",{"_index":545,"title":{},"body":{"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["requesttype",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestwithuser",{"_index":542,"title":{"classes/RequestWithUser.html":{}},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["required",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["res",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["res.clearcookie('token",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie(cookiename",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('token",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('user",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send(token",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolver",{"_index":337,"title":{},"body":{"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{}}}],["resolver('auth",{"_index":338,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('user",{"_index":357,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["resolvers",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{}}}],["response.status(httpstatus.conflict).json(payload",{"_index":697,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["response.status(httpstatus.internal_server_error).json",{"_index":701,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["restriction",{"_index":1029,"title":{},"body":{"license.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":588,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":1032,"title":{},"body":{"license.html":{}}}],["run",{"_index":1004,"title":{},"body":{"index.html":{}}}],["running",{"_index":182,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["rxjs",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["salts",{"_index":975,"title":{},"body":{"index.html":{}}}],["schema",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["sec",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["secret",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["select",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["sell",{"_index":1039,"title":{},"body":{"license.html":{}}}],["sent",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["separate",{"_index":949,"title":{},"body":{"index.html":{}}}],["separating",{"_index":950,"title":{},"body":{"index.html":{}}}],["server",{"_index":927,"title":{},"body":{"index.html":{}}}],["service",{"_index":838,"title":{},"body":{"controllers/UserController.html":{}}}],["services",{"_index":955,"title":{},"body":{"index.html":{}}}],["servicestatus",{"_index":173,"title":{"classes/ServiceStatus.html":{}},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["set",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["shall",{"_index":1049,"title":{},"body":{"license.html":{}}}],["short",{"_index":523,"title":{},"body":{"interfaces/Flags.html":{}}}],["signed",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signin(@args('data",{"_index":341,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signin(@body",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(data",{"_index":306,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["signin(dto",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signtoken",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(userid",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signup(@args('data",{"_index":339,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signup(@body",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(data",{"_index":304,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["signup(dto",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signuppayload",{"_index":297,"title":{"classes/SignUpPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{}}}],["software",{"_index":1025,"title":{},"body":{"license.html":{}}}],["solana/web3.js",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["something",{"_index":839,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specs",{"_index":935,"title":{},"body":{"index.html":{}}}],["sql",{"_index":726,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["src/**/*.graphql",{"_index":536,"title":{},"body":{"interfaces/Flags.html":{}}}],["src/.../app.module.ts",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generate",{"_index":922,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":1100,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.service.ts",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.dto.ts",{"_index":541,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"coverage.html":{}}}],["src/app.dto.ts:11",{"_index":543,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:12",{"_index":544,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:8",{"_index":794,"title":{},"body":{"classes/RequestWithUser.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":156,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":161,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":169,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:4",{"_index":796,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:6",{"_index":798,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:7",{"_index":799,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:8",{"_index":797,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/auth/auth.controller.ts",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":327,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:16",{"_index":334,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:23",{"_index":332,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:9",{"_index":329,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.service.ts",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/get",{"_index":869,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":279,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":286,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":284,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/guard/jwt.guard.ts",{"_index":552,"title":{},"body":{"classes/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guard/jwt.guard.ts:3",{"_index":553,"title":{},"body":{"classes/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:24",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:35",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/book/book.controller.ts",{"_index":411,"title":{},"body":{"controllers/BookController.html":{},"coverage.html":{}}}],["src/book/book.controller.ts:11",{"_index":420,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:16",{"_index":421,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:21",{"_index":424,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:26",{"_index":431,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:31",{"_index":427,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.module.ts",{"_index":452,"title":{},"body":{"modules/BookModule.html":{}}}],["src/book/book.service.ts",{"_index":454,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{}}}],["src/book/book.service.ts:13",{"_index":458,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:19",{"_index":459,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:27",{"_index":462,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:34",{"_index":460,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:6",{"_index":455,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:9",{"_index":457,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/dto/create",{"_index":468,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{}}}],["src/book/dto/update",{"_index":804,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/book/entities/book.entity.ts",{"_index":409,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/generate",{"_index":505,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/graphql.ts",{"_index":292,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/graphql.ts:12",{"_index":293,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:13",{"_index":294,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:17",{"_index":325,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/graphql.ts:21",{"_index":802,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:22",{"_index":801,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:23",{"_index":800,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:24",{"_index":803,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:28",{"_index":549,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:30",{"_index":548,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:34",{"_index":817,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:35",{"_index":814,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:36",{"_index":816,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:37",{"_index":815,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:38",{"_index":818,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:39",{"_index":813,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:40",{"_index":819,"title":{},"body":{"classes/User.html":{}}}],["src/graphql.ts:44",{"_index":550,"title":{},"body":{"classes/IQuery.html":{}}}],["src/main.ts",{"_index":875,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":488,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/order/dto/update",{"_index":809,"title":{},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":598,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/order.controller.ts",{"_index":600,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:23",{"_index":603,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:34",{"_index":604,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:39",{"_index":605,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:44",{"_index":608,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:49",{"_index":606,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":625,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":627,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:16",{"_index":631,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:45",{"_index":632,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:51",{"_index":633,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:59",{"_index":636,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:66",{"_index":634,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":628,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma",{"_index":659,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["src/prisma/prisma.module.ts",{"_index":710,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":713,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.service.ts:29",{"_index":718,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:71",{"_index":723,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:81",{"_index":722,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:88",{"_index":719,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/user/dto/edit",{"_index":495,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":820,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:23",{"_index":833,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:29",{"_index":830,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":827,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":849,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.resolver.ts",{"_index":344,"title":{},"body":{"classes/AuthResolver-1.html":{},"coverage.html":{}}}],["src/user/user.resolver.ts:17",{"_index":350,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["src/user/user.resolver.ts:9",{"_index":347,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["src/user/user.service.ts",{"_index":850,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:17",{"_index":853,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:32",{"_index":852,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":851,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":855,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":745,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert",{"_index":741,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert=root.crt",{"_index":742,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":1005,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1006,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1007,"title":{},"body":{"index.html":{}}}],["started",{"_index":924,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["status",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{}}}],["statuscode",{"_index":688,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["stdout",{"_index":733,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":986,"title":{},"body":{"index.html":{}}}],["sub",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":1044,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1037,"title":{},"body":{"license.html":{}}}],["subscriptions",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["substantial",{"_index":1051,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":190,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["super",{"_index":557,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["super.catch(exception",{"_index":699,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["supertest",{"_index":979,"title":{},"body":{"index.html":{}}}],["support",{"_index":1078,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1079,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["t",{"_index":313,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["tabwidth",{"_index":768,"title":{},"body":{"injectables/PrismaService.html":{}}}],["tags",{"_index":472,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["taken",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["tear",{"_index":790,"title":{},"body":{"injectables/PrismaService.html":{}}}],["technical",{"_index":942,"title":{},"body":{"index.html":{}}}],["test",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["test').default('dev",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["test:covlicense",{"_index":1009,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1008,"title":{},"body":{"index.html":{}}}],["testing",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["tests",{"_index":977,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":783,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$executerawunsafe(\"set",{"_index":784,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":787,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('query",{"_index":753,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction",{"_index":789,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethealth",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authcontroller.signin(dto",{"_index":342,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authcontroller.signup(dto",{"_index":340,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.signin(dto",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.bookservice.create(createbookdto",{"_index":442,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findall",{"_index":443,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findone(createorderdto.bookid",{"_index":644,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.bookservice.findone(id",{"_index":445,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.remove(+id",{"_index":449,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.update(+id",{"_index":447,"title":{},"body":{"controllers/BookController.html":{}}}],["this.config.get('jwt_secret",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.jwt.signasync(payload",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create",{"_index":618,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":619,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":620,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.remove(+id",{"_index":622,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.update(+id",{"_index":621,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma",{"_index":186,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["this.prisma.$transaction",{"_index":650,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.book.create",{"_index":463,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.delete",{"_index":467,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.findmany",{"_index":464,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.findunique",{"_index":465,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.update",{"_index":466,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.order.create",{"_index":653,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.delete",{"_index":657,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":654,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":655,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.update",{"_index":656,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.user.create",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.delete",{"_index":858,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":651,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["this.signtoken(user.id",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.deletemany",{"_index":793,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.usercontroller.getme(user",{"_index":359,"title":{},"body":{"classes/AuthResolver-1.html":{}}}],["this.userservice.deleteuser(userid",{"_index":845,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituser(userid",{"_index":842,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(createorderdto.customerid",{"_index":640,"title":{},"body":{"injectables/OrderService.html":{}}}],["through",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{}}}],["throws",{"_index":584,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["time",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["timezone",{"_index":785,"title":{},"body":{"injectables/PrismaService.html":{}}}],["title",{"_index":473,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["todo",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["token.access_token",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenfield",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":973,"title":{},"body":{"index.html":{}}}],["tools",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":931,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1073,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":959,"title":{},"body":{"index.html":{}}}],["transferring",{"_index":962,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["transformers",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["transport",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["try",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":751,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["type",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1098,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typepaths",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Flags.html":{}}}],["types",{"_index":807,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":930,"title":{},"body":{"index.html":{}}}],["typings.ts",{"_index":506,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":685,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["unit",{"_index":976,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":168,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["up",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["update",{"_index":417,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["update(@param('id",{"_index":446,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["update(id",{"_index":428,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["updatebookdto",{"_index":429,"title":{"classes/UpdateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":301,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{}}}],["updateorderdto",{"_index":607,"title":{"classes/UpdateOrderDto.html":{}},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["upper",{"_index":771,"title":{},"body":{"injectables/PrismaService.html":{}}}],["url",{"_index":747,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["useguards",{"_index":609,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":615,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete",{"_index":826,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get('me",{"_index":832,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@patch",{"_index":829,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":307,"title":{"classes/User.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver-1.html":{},"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":353,"title":{},"body":{"classes/AuthResolver-1.html":{},"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":496,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":500,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:14",{"_index":501,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:6",{"_index":498,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.email",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.hash",{"_index":857,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":652,"title":{},"body":{"injectables/OrderService.html":{}}}],["user.point",{"_index":647,"title":{},"body":{"injectables/OrderService.html":{}}}],["user.service",{"_index":352,"title":{},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.service",{"_index":638,"title":{},"body":{"injectables/OrderService.html":{}}}],["user[data",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":346,"title":{"controllers/UserController.html":{}},"body":{"classes/AuthResolver-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":63,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":821,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":345,"title":{"injectables/UserService.html":{}},"body":{"classes/AuthResolver-1.html":{},"injectables/OrderService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":929,"title":{},"body":{"index.html":{}}}],["utility",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":957,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":290,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["value",{"_index":529,"title":{},"body":{"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1101,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1003,"title":{},"body":{"index.html":{}}}],["version",{"_index":1086,"title":{},"body":{"properties.html":{}}}],["void",{"_index":673,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["w",{"_index":507,"title":{},"body":{"interfaces/Flags.html":{}}}],["walletid",{"_index":546,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{}}}],["ware",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["warn",{"_index":734,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":1058,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1054,"title":{},"body":{"license.html":{}}}],["watch",{"_index":508,"title":{},"body":{"interfaces/Flags.html":{},"index.html":{}}}],["web2",{"_index":1088,"title":{},"body":{"properties.html":{}}}],["whatever",{"_index":587,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whether",{"_index":1070,"title":{},"body":{"license.html":{}}}],["whitelist:true",{"_index":841,"title":{},"body":{"controllers/UserController.html":{}}}],["without",{"_index":1028,"title":{},"body":{"license.html":{}}}],["work",{"_index":736,"title":{},"body":{"injectables/PrismaService.html":{}}}],["writer",{"_index":474,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["ws",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHealth\n                            \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheTTL(undefined)@Get('health')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@CacheKey('home')@CacheTTL(Number.MAX_SAFE_INTEGER)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { CacheInterceptor, CacheKey, CacheTTL } from '@nestjs/cache-manager'\n\n@Controller()\n@UseInterceptors(CacheInterceptor)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @CacheKey('home')\n  @CacheTTL(Number.MAX_SAFE_INTEGER) //default is just 1 sec\n  getHello() {\n    return this.appService.getHello()\n  }\n\n  @CacheTTL(5 * 1000)\n  @Get('health')\n  getHealth() {\n    return this.appService.getHealth()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BookModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { ConfigModule } from '@nestjs/config'\nimport { AuthModule } from './auth/auth.module'\nimport Joi from 'joi'\nimport { CacheModule } from '@nestjs/cache-manager'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { ApolloServerPluginLandingPageGraphQLPlayground } from '@apollo/server-plugin-landing-page-graphql-playground'\nimport { GraphQLDateTime } from 'graphql-iso-date'\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'\nimport { AppController } from './app.controller'\nimport { GraphqlContext } from './app.dto'\nimport { UserModule } from './user/user.module'\nimport { PrismaModule } from './prisma/prisma.module'\nimport { BookModule } from './book/book.module'\nimport { OrderModule } from './order/order.module'\n\nlet mode = process.env.MODE\nlet envFile = '.env'\n\nswitch (mode) {\n  case 'test':\n    envFile = '.env.test'\n    process.env.NODE_ENV = 'testing'\n    break\n  case 'prod':\n    process.env.NODE_ENV = 'production'\n    envFile = '.env.prod'\n    break\n  default:\n    mode = 'dev'\n    process.env.NODE_ENV = 'development'\n    envFile = '.env.local'\n}\n\nconsole.debug({ mode, envFile })\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [envFile, '.env'],\n      isGlobal: true,\n      cache: true,\n      validationSchema: Joi.object({\n        MODE: Joi.string().valid('dev', 'prod', 'test').default('dev'),\n        PORT: Joi.number().default(3000),\n        DATABASE_URL: Joi.string(),\n        JWT_SECRET: Joi.string().default('Hiro@JWT#TOKEN$'),\n        JWT_MAX_AGE: Joi.number().default(2 * 60 * 60 * 1000),\n      }),\n    }),\n    CacheModule.register({ isGlobal: true }),\n    GraphQLModule.forRoot({\n      context: ({ req, res }: GraphqlContext) => ({ req, res }), //required for cookies\n\n      fieldResolverEnhancers: ['interceptors'], //FIXME:unsure\n\n      autoSchemaFile: false, // schema-first\n      playground: false,\n      driver: ApolloDriver,\n      plugins: [ApolloServerPluginLandingPageGraphQLPlayground()],\n      typePaths: ['./**/*.graphql'],\n      resolvers: { DateTime: GraphQLDateTime },\n      subscriptions: {\n        'graphql-ws': true,\n        'subscriptions-transport-ws': true,\n      },\n    }),\n    PrismaModule,\n    AuthModule,\n    UserModule,\n    BookModule,\n    OrderModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHealth\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Res } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { AuthDto } from './dto'\nimport { Response } from 'express'\nimport { ConfigService } from '@nestjs/config'\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService, private config: ConfigService) {}\n\n  @Post('signup')\n  signup(@Body() dto: AuthDto) {\n    return this.authService.signup(dto)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signin(@Body() dto: AuthDto, @Res() res: Response) {\n    const token = await this.authService.signin(dto)\n\n    /*    res.cookie('user', dto.email, { //TODO:\n      // Set cookie options here (e.g., expiration, domain, path, etc.)\n      maxAge: 3600000, // Cookie expiration time in milliseconds (1 hour)\n      httpOnly: true, // Cookie accessible only through HTTP(S) requests\n      secure: true, // Cookie sent only over HTTPS if true\n      signed: true,\n    })*/\n    // const cookies = req.cookies; //TODO: middle ware to clear the cookies when signin\n    // TODO: utility function to clear and set cookie\n    // for (let cookieName in cookies) {\n    //   res.clearCookie(cookieName); // Replace '.your-domain.com' with your actual domain\n    // }\n    res.clearCookie('token')\n    res.cookie('token', token.access_token, {\n      maxAge: this.config.get('JWT_SECRET') * 1000 || 60 * 60 * 1000,\n      secure: true,\n      httpOnly: true,\n      // signed: true,\n    })\n\n    res.send(token)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsStrongPassword } from 'class-validator'\n\nexport class AuthDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string\n\n  @IsStrongPassword()\n  @IsNotEmpty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInput.html":{"url":"classes/AuthInput.html","title":"class - AuthInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PrismaModule } from '../prisma/prisma.module'\nimport { JwtStrategy } from './strategy'\n\n@Module({\n  imports: [JwtModule.register({}), PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPayload.html":{"url":"classes/AuthPayload.html","title":"class - AuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authController: AuthController)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authController\n                                                  \n                                                        \n                                                                        AuthController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(dto: AuthDto, ctx: GraphqlContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signIn')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n                                    \n                                                GraphqlContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signUp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql'\nimport { AuthService } from './auth.service'\nimport { AuthController } from './auth.controller'\nimport { GraphqlContext } from '../app.dto'\nimport { AuthDto } from './dto'\nimport { AuthInput } from '../graphql'\n\n@Resolver('Auth')\nexport class AuthResolver {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authController: AuthController,\n  ) {}\n\n  @Mutation('signUp')\n  signUp(@Args('data') dto: AuthDto) {\n    console.debug({ dto })\n\n    return this.authController.signup(dto as AuthInput)\n  }\n\n  @Mutation('signIn')\n  signIn(@Args('data') dto: AuthDto, @Context() ctx: GraphqlContext) {\n    console.debug({ dto })\n\n    return this.authController.signin(dto as AuthInput, ctx.res)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver-1.html":{"url":"classes/AuthResolver-1.html","title":"class - AuthResolver-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, userService: UserService, userController: UserController)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userController\n                                                  \n                                                        \n                                                                        UserController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { UserService } from './user.service'\nimport { UserController } from './user.controller'\nimport { GetUserGraphql } from '../auth/decorator'\nimport { User } from '@prisma/client'\n\n@Resolver('User')\nexport class AuthResolver {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly userService: UserService,\n    private readonly userController: UserController,\n  ) {}\n\n  @Query('me')\n  me(@GetUserGraphql() user: User) {\n    return this.userController.getMe(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userId: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { AuthDto } from './dto'\n\nimport argon from 'argon2'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwt: JwtService,\n    private config: ConfigService,\n  ) {}\n\n  async signup(dto: AuthDto) {\n    const hash = await argon.hash(dto.password)\n\n    try {\n      const user = await this.prisma.user.create({\n        data: {\n          email: dto.email,\n          hash: hash,\n        },\n        select: {\n          //FIXME: use transformers\n          id: true,\n          email: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      return user\n    } catch (error) {\n      console.error({\n        code: error.code,\n        error,\n      })\n      if (\n        error instanceof PrismaClientKnownRequestError ||\n        PrismaClientUnknownRequestError\n      ) {\n        if (error.code == 'P2002') {\n          throw new ForbiddenException('credentials taken')\n        }\n      }\n      throw error\n    }\n  }\n\n  async signin(dto: AuthDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email: dto.email,\n      },\n    })\n\n    if (!user) throw new ForbiddenException('incorrect credentials')\n\n    const pwMatches = await argon.verify(user.hash, dto.password)\n\n    if (!pwMatches) throw new ForbiddenException('invalid credentials')\n\n    return this.signToken(user.id, user.email)\n  }\n\n  async signToken(userId: number, email: string) {\n    const payload = {\n      sub: userId,\n      email,\n    }\n    const secret = this.config.get('JWT_SECRET')\n\n    return {\n      access_token: await this.jwt.signAsync(payload, {\n        expiresIn: '1hr', //TODO:\n        secret: secret,\n      }),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/entities/book.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Book {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookController.html":{"url":"controllers/BookController.html","title":"controller - BookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createBookDto: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateBookDto: UpdateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common'\nimport { BookService } from './book.service'\nimport { CreateBookDto } from './dto/create-book.dto'\nimport { UpdateBookDto } from './dto/update-book.dto'\n\n@Controller('books')\nexport class BookController {\n  constructor(private readonly bookService: BookService) {}\n\n  @Post()\n  create(@Body() createBookDto: CreateBookDto) {\n    return this.bookService.create(createBookDto)\n  }\n\n  @Get()\n  findAll() {\n    return this.bookService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.bookService.findOne(id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateBookDto: UpdateBookDto) {\n    return this.bookService.update(+id, updateBookDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.bookService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookModule.html":{"url":"modules/BookModule.html","title":"module - BookModule","body":"\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\n\nBookService\n\nBookService\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/book/book.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { BookService } from './book.service'\nimport { BookController } from './book.controller'\n\n@Module({\n  controllers: [BookController],\n  providers: [BookService],\n})\nexport class BookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/book/book.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBookDto: Prisma.BookCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                Prisma.BookCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBookDto: Prisma.BookUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                Prisma.BookUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Prisma } from '@prisma/client'\nimport { PrismaService } from '../prisma/prisma.service'\n\n@Injectable()\nexport class BookService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(createBookDto: Prisma.BookCreateInput) {\n    return this.prisma.book.create({ data: createBookDto })\n  }\n\n  findAll() {\n    return this.prisma.book.findMany({\n      where: {},\n    })\n  }\n\n  findOne(id: number) {\n    return this.prisma.book.findUnique({\n      where: {\n        id,\n      },\n    })\n  }\n\n  update(id: number, updateBookDto: Prisma.BookUpdateInput) {\n    return this.prisma.book.update({\n      where: { id },\n      data: updateBookDto,\n    })\n  }\n\n  remove(id: number) {\n    return this.prisma.book.delete({\n      where: { id },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/create-book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                coverImage\n                            \n                            \n                                    \n                                    \n                                point\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                writer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        coverImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        point\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        writer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsInt, IsNotEmpty, IsOptional, IsString } from 'class-validator'\n\nexport class CreateBookDto {\n  @IsNotEmpty()\n  @IsString()\n  title: string\n\n  @IsNotEmpty()\n  @IsString()\n  writer: string\n\n  @IsNotEmpty()\n  @IsString()\n  coverImage: string\n\n  @IsNotEmpty()\n  @IsInt()\n  point: number\n\n  @IsOptional()\n  @IsArray()\n  tags?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bookId\n                            \n                            \n                                    \n                                    \n                                customerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bookId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        customerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty } from 'class-validator'\n\nexport class CreateOrderDto {\n  @IsNotEmpty()\n  @IsInt()\n  customerId: number\n\n  @IsNotEmpty()\n  @IsInt()\n  bookId: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserDto.html":{"url":"classes/EditUserDto.html","title":"class - EditUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/edit-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator'\n\nexport class EditUserDto {\n  @IsEmail()\n  @IsOptional()\n  email?: string\n\n  @IsString()\n  @IsOptional()\n  firstName?: string\n\n  @IsString()\n  @IsOptional()\n  lastName?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Flags.html":{"url":"interfaces/Flags.html","title":"interface - Flags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Flags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generate-typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            w\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        w\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        w:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDefinitionsFactory } from '@nestjs/graphql'\nimport { join } from 'path'\n\ninterface Flags {\n  watch?: boolean\n  w?: boolean\n}\n\n// Function to extract flags from the arguments array\nfunction extractFlags(args) {\n  const flags: Flags = {}\n  let currentFlag = null\n\n  for (const arg of args) {\n    if (arg.startsWith('--')) {\n      // Long flag (e.g., --watch)\n      const flagName = arg.slice(2)\n      flags[flagName] = true\n      currentFlag = flagName\n    } else if (arg.startsWith('-')) {\n      // Short flag (e.g., -w)\n      const flagKeys = arg.slice(1).split('')\n      flagKeys.forEach((key) => {\n        flags[key] = true\n      })\n      currentFlag = arg.slice(-1)\n    } else if (currentFlag) {\n      // Flag value (e.g., --name John)\n      flags[currentFlag] = arg\n      currentFlag = null\n    }\n  }\n\n  return flags\n}\n\nconst args = process.argv.slice(2)\nconst flags: Flags = extractFlags(args)\n\nconsole.log('Flags:', flags)\n\nconst definitionsFactory = new GraphQLDefinitionsFactory()\ndefinitionsFactory.generate({\n  typePaths: ['./src/**/*.graphql'],\n  path: join(process.cwd(), 'src/graphql.ts'),\n  outputAs: 'class',\n  watch: flags.watch || flags.w,\n})\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphqlContext.html":{"url":"classes/GraphqlContext.html","title":"class - GraphqlContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphqlContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                req\n                            \n                            \n                                res\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        req\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RequestWithUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Response\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IMutation.html":{"url":"classes/IMutation.html","title":"class - IMutation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IMutation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SignUpPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IQuery.html":{"url":"classes/IQuery.html","title":"class - IQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me()\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User | Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtGuard.html":{"url":"classes/JwtGuard.html","title":"class - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport'\n\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtConstants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                extractJWTFromCookie\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        extractJWTFromCookie\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractJWTFromCookie(req: RequestType)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            RequestType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { userId: number; email: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { ConfigService } from '@nestjs/config'\nimport { PrismaService } from '../../prisma/prisma.service'\nimport { Request as RequestType } from 'express'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  private jwtConstants: any\n\n  constructor(private config: ConfigService, private prisma: PrismaService) {\n    const mode = config.get('MODE') || 'dev'\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        JwtStrategy.extractJWTFromCookie,\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ]),\n      ignoreExpiration: mode == 'dev' || mode == 'test',\n      secretOrKey: config.get('JWT_SECRET'),\n    })\n  }\n\n  validate(payload: { sub: number; email: string }) {\n    const user = this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    })\n    if (!user) return null //throws the 401 error\n\n    return { userId: payload.sub, email: payload.email }\n    // whatever is returned is appended to req.user\n  }\n  private static extractJWTFromCookie(req: RequestType): string | null {\n    const tokenField = 'token'\n    console.debug(req.cookies)\n    if (req.cookies && tokenField in req.cookies && req.cookies[tokenField].length > 0) {\n      console.log('extracted cookie')\n      return req.cookies.token\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Order {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: number, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateOrderDto: UpdateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                UpdateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common'\nimport { CreateOrderDto } from './dto/create-order.dto'\nimport { OrderService } from './order.service'\nimport { UpdateOrderDto } from './dto/update-order.dto'\nimport { GetUser } from '../auth/decorator'\nimport { JwtGuard } from '../auth/guard'\n\n@UseGuards(JwtGuard)\n@Controller('orders')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  async create(\n    @GetUser('userId') userId: number,\n    @Body() createOrderDto: CreateOrderDto,\n  ) {\n    return this.orderService.create({\n      ...createOrderDto,\n      customerId: userId,\n    })\n  }\n\n  @Get()\n  findAll() {\n    return this.orderService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.orderService.findOne(id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateOrderDto: UpdateOrderDto) {\n    return this.orderService.update(+id, updateOrderDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.orderService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nOrderService\n\nOrderService\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { OrderService } from './order.service'\nimport { OrderController } from './order.controller'\n\n@Module({\n  controllers: [OrderController],\n  providers: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, orderService: OrderService, userService: UserService, bookService: BookService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookService\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createOrderDto: Prisma.OrderUncheckedCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                Prisma.OrderUncheckedCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateOrderDto: Prisma.OrderUncheckedUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                Prisma.OrderUncheckedUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, NotFoundException } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { Prisma } from '@prisma/client'\nimport { UserService } from '../user/user.service'\nimport { BookService } from '../book/book.service'\n\n@Injectable()\nexport class OrderService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly orderService: OrderService,\n    private readonly userService: UserService,\n    private readonly bookService: BookService,\n  ) {}\n\n  async create(createOrderDto: Prisma.OrderUncheckedCreateInput) {\n    const user = await this.userService.findOne(createOrderDto.customerId)\n    if (!user) {\n      throw new ForbiddenException(\"user doesn't exist\")\n    }\n\n    const book = await this.bookService.findOne(createOrderDto.bookId)\n    if (!book) {\n      throw new NotFoundException(\"book: doesn't exist\")\n    }\n\n    if (book.point > user.point)\n      throw new ForbiddenException(\"user doesn't have enough point\")\n\n    const netPoint = user.point - book.point\n\n    return await this.prisma.$transaction([\n      this.prisma.user.update({\n        where: {\n          id: user.id,\n        },\n        data: {\n          point: netPoint,\n        },\n      }),\n      this.prisma.order.create({ data: createOrderDto }),\n    ])\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      where: {},\n    })\n  }\n\n  findOne(id: number) {\n    return this.prisma.order.findUnique({\n      where: {\n        id,\n      },\n    })\n  }\n\n  update(id: number, updateOrderDto: Prisma.OrderUncheckedUpdateInput) {\n    return this.prisma.order.update({\n      where: { id },\n      data: updateOrderDto,\n    })\n  }\n\n  remove(id: number) {\n    return this.prisma.order.delete({\n      where: { id },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaClientExceptionFilter.html":{"url":"classes/PrismaClientExceptionFilter.html","title":"class - PrismaClientExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaClientExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma-client-exception/prisma-client-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n            \n                Implements\n            \n            \n                        GqlExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError, host: ArgumentsHost | GraphQLArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma-client-exception/prisma-client-exception.filter.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost | GraphQLArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpStatus } from '@nestjs/common'\nimport { BaseExceptionFilter } from '@nestjs/core'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\nimport { Prisma } from '@prisma/client'\nimport { Response } from 'express'\nimport { GqlExceptionFilter, GraphQLArgumentsHost } from '@nestjs/graphql'\n\n@Catch(PrismaClientUnknownRequestError, PrismaClientKnownRequestError)\nexport class PrismaClientExceptionFilter\n  extends BaseExceptionFilter\n  implements GqlExceptionFilter\n{\n  catch(\n    exception: Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError,\n    host: ArgumentsHost | GraphQLArgumentsHost,\n  ) {\n    console.error(exception.message)\n    const ctx = host.switchToHttp()\n    const response = ctx.getResponse()\n    // const message = exception.message.replace(/\\n/g, '')\n    const message = exception.message\n    switch (exception.code) {\n      case 'P2002': {\n        // https://www.prisma.io/docs/reference/api-reference/error-reference\n        // unique constraint failed\n        // const status = HttpStatus.CONFLICT\n        const payload = {\n          statusCode: HttpStatus.BAD_REQUEST,\n          message: 'DB_ERROR:Unique input fields required',\n          error: message, // You can customize the error message based on your needs\n        }\n\n        console.error('DB:caught P2002 error')\n        response.status(HttpStatus.CONFLICT).json(payload) //FIXME\n        break\n      }\n      default:\n        // default 500 error code\n        // super.catch(exception, host)\n        console.error('DB Error:', exception.code)\n        response.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n          statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n          message: 'Database Error',\n          error: message, // You can customize the error message based on your needs\n        })\n        break\n    }\n  }\n}\n// https://www.prisma.io/blog/nestjs-prisma-error-handling-7D056s1kOop2\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common'\nimport { PrismaService } from './prisma.service'\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDb\n                            \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDb\n                        \n                    \n                \n            \n            \n                \ncleanDb()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common'\nimport { Prisma, PrismaClient } from '@prisma/client'\nimport { ConfigService } from '@nestjs/config'\nimport kleur from 'kleur'\nimport { format } from 'sql-formatter'\n\nconst logEvents: Prisma.LogDefinition[] = [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n\nlet DB_CONNECTED = false\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  // FIXME doesn't work for e2e OnModuleDestroy{\n  // https://docs.nestjs.com/fundamentals/lifecycle-events\n\n  constructor(config: ConfigService) {\n    const sslcert = '?sslcert=root.crt'\n    //https://www.prisma.io/docs/concepts/database-connectors/postgresql#configuring-an-ssl-connection\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL') + sslcert,\n        },\n      },\n      log: logEvents,\n    })\n\n    process.env.FORCE_COLOR = 'true'\n\n    // @ts-ignore\n    this.$on('query', async (e: any) => {\n      if (config.get('MODE') != 'dev') {\n        return\n      }\n\n      // const chalk = await import('chalk')\n      // console.log(chalk.yellow('Query: ') + chalk.green(e.query))\n      // console.log(chalk.yellow('Params: ') + chalk.cyan(JSON.stringify(e.params)))\n      // console.log(chalk.yellow('Duration: ') + chalk.magenta(`${e.duration}ms`))\n      const query = e.query\n\n      const formattedQuery = format(query, {\n        language: 'postgresql',\n        tabWidth: 2,\n        keywordCase: 'upper',\n        linesBetweenQueries: 2,\n        params: e.params || [],\n      })\n      console.log(kleur.yellow('Query: ') + kleur.green(formattedQuery))\n      console.log(kleur.yellow('Params: ') + kleur.cyan(JSON.stringify(e.params)))\n      console.log(kleur.yellow('Duration: ') + kleur.magenta(`${e.duration}ms`))\n    })\n  }\n  async onModuleInit() {\n    if (DB_CONNECTED) return\n\n    console.info(new Date(), 'connecting to the database')\n    await this.$connect()\n    await this.$executeRawUnsafe(\"SET timezone = 'Asia/Kolkata'\")\n\n    DB_CONNECTED = true\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    // @ts-ignore\n    this.$on('beforeExit', async () => {\n      await app.close()\n    })\n  }\n\n  cleanDb() {\n    return this.$transaction([\n      //tear down logic\n      this.user.deleteMany(),\n    ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestWithUser.html":{"url":"classes/RequestWithUser.html","title":"class - RequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceStatus.html":{"url":"classes/ServiceStatus.html","title":"class - ServiceStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ok: boolean, status: string, debug: any)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ok\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        debug\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OK'\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpPayload.html":{"url":"classes/SignUpPayload.html","title":"class - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/update-book.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateBookDto } from './create-book.dto'\n\nexport class UpdateBookDto extends PartialType(CreateBookDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/update-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                bookId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        bookId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/update-order.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateOrderDto } from './create-order.dto'\nimport { IsInt, IsOptional } from 'class-validator'\n\nexport class UpdateOrderDto extends PartialType(CreateOrderDto) {\n  @IsOptional()\n  @IsInt()\n  bookId?: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                hash\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport class User {\n    id: number;\n    email: string;\n    hash?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IQuery {\n    abstract me(): User | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                editUser\n                            \n                            \n                                    \n                                    \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Patch()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Injectable,\n  Patch,\n  UseGuards,\n} from '@nestjs/common'\nimport { JwtGuard } from '../auth/guard'\nimport { GetUser } from '../auth/decorator'\nimport { User } from '@prisma/client'\nimport { EditUserDto } from './dto'\nimport { UserService } from './user.service'\n\n@Injectable()\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtGuard)\n  @Get('me')\n  getMe(@GetUser() user: User) {\n    return user\n  }\n\n  @UseGuards(JwtGuard)\n  @Patch()\n  editUser(@GetUser('userId') userId: number, @Body() dto: EditUserDto) {\n    //needs service\n    // we will get something in api request due to whitelist:true\n    return this.userService.editUser(userId, dto)\n  }\n\n  @UseGuards(JwtGuard)\n  @Delete()\n  async deleteUser(@GetUser('userId') userId: number) {\n    return {\n      message: 'user deleted',\n      user: await this.userService.deleteUser(userId),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserController\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserController } from './user.controller'\nimport { UserService } from './user.service'\nimport { AuthModule } from '../auth/auth.module'\nimport { PrismaModule } from '../prisma/prisma.module'\n\n@Module({\n  imports: [AuthModule, PrismaModule],\n  controllers: [UserController],\n  providers: [UserService, UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { EditUserDto } from './dto'\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  findOne(userId: number) {\n    return this.prisma.user.findUnique({\n      where: {\n        id: userId,\n      },\n    })\n  }\n\n  async editUser(userId: number, dto: EditUserDto) {\n    console.log({ userId, dto })\n    const user = await this.prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: {\n        ...dto,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n\n  async deleteUser(userId: number) {\n    const user = await this.prisma.user.delete({\n      where: {\n        id: userId,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            GraphqlContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            RequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            class\n            ServiceStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUserGraphql\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            class\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/book/book.controller.ts\n            \n            controller\n            BookController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/book/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/book/entities/book.entity.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            interface\n            Flags\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            function\n            extractFlags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            args\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            definitionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            flags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IMutation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            SignUpPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/dto/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/prisma-client-exception/prisma-client-exception.filter.ts\n            \n            class\n            PrismaClientExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            DB_CONNECTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            logEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/edit-user.dto.ts\n            \n            class\n            EditUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            injectable\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.7.5\n        \n            @nestjs/apollo : ^12.0.7\n        \n            @nestjs/cache-manager : ^2.0.1\n        \n            @nestjs/common : ^10.0.5\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.5\n        \n            @nestjs/graphql : ^12.0.8\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.5\n        \n            @solana/web3.js : ^1.78.0\n        \n            argon2 : ^0.30.3\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            graphql : 16.7.1\n        \n            graphql-iso-date : ^3.6.1\n        \n            graphql-subscriptions : 2.0.0\n        \n            graphql-tools : ^9.0.0\n        \n            joi : ^17.9.2\n        \n            kleur : ^4.1.5\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-nestjs-graphql : ^18.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : 7.8.1\n        \n            sql-formatter : ^12.2.3\n        \n            ts-morph : ^19.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            extractFlags   (src/.../generate-typings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractFlags\n                        \n                    \n                \n            \n            \n                \nextractFlags(args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\napi.bookstore.nas\nDescription\nAPI Server built using , TypeScript, Prisma, Graphql and PostgreSQL.\nBuilt with ❤️on top of\n\n Typescript\n NestJS\n Prisma\n Passport.js\n Graphql:Schema First\n PostgreSQL\n\nFunctional specs\nAPI allows authenticated to users to create and manage orders\n\nUser SignUp & SignIn\nCRUD Orders\nInspect Items\n\nTechnical methodologies followed\n\nModular architecture: Business Logic & Auth handled in separate modules, separating\nconcerns.\nHTTP requests are handled by Controllers\n API documentation using nest/swagger module \nBusiness logic is implemented in Services\nDatabase interactions are handled using Prisma\nValidation using NestJS Pipes\nData Transfer Object(DTO) pattern for transferring data between layers\nConfiguration management using .env files for development, test & prod configs\nAuthentication / Authorization, Event ownership by users\nPassportJS, JWT tokens, Password hashing, salts\nUnit tests using Jest\nSupertest for E2E testing\n\nTechnical documentation using Compodoc\nAs NestJS is heavily inspired by Angular, we can generate the documentation about project\nstructure modules, controllers, services etc. I have generated the docs.\nFind 'em here - https://jsFame.github.io/api.bookstore.nas/\nInstallation\nnpm install -g pnpm\npnpm installRunning the app\nPrerequisite for running the app in any mode - dev/test/prod\n\nCopy .env.example with .env\nFill in the env vars in .env\n\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covLicense\nThis repo is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Hiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    21 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : Web2 backend of bookstore.nas\n        \n            Homepage : https://github.com/jsFame/api.bookstore.nas\n        \n            Bugs : https://github.com/jsFame/api.bookstore.nas/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/jsFame/api.bookstore.nas\n        \n            Author : laciferin@gmail.com\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateTime   (src/.../graphql.ts)\n                        \n                        \n                            Nullable   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            args   (src/.../generate-typings.ts)\n                        \n                        \n                            DB_CONNECTED   (src/.../prisma.service.ts)\n                        \n                        \n                            definitionsFactory   (src/.../generate-typings.ts)\n                        \n                        \n                            envFile   (src/.../app.module.ts)\n                        \n                        \n                            flags   (src/.../generate-typings.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            GetUserGraphql   (src/.../get-user.decorator.ts)\n                        \n                        \n                            logEvents   (src/.../prisma.service.ts)\n                        \n                        \n                            mode   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        args\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.argv.slice(2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        definitionsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLDefinitionsFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Flags\n\n                    \n                \n                \n                    \n                        Default value : extractFlags(args)\n                    \n                \n\n\n        \n    \n\n    src/prisma/prisma.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.LogDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.env'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MODE\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest()\n\n    if (data) return request.user[data]\n\n    return request.user\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetUserGraphql\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, context: ExecutionContext) => {\n    const ctx: GraphqlContext = GqlExecutionContext.create(context).getContext()\n\n    const { user } = ctx.req\n\n    if (data) return user[data]\n\n    return user\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
