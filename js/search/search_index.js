var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.629,1,2.16]],["body/controllers/AppController.html",[0,2.355,1,3.122,2,1.645,3,0.349,4,0.393,5,0.349,6,3.039,7,0.438,8,1.85,9,4.16,10,4.16,11,2.57,12,0.029,13,3.621,14,0.92,15,3.621,16,1.85,17,3.621,18,3.621,19,0.865,20,3.621,21,1.036,22,2.634,23,3.039,24,3.621,25,3.621,26,3.621,27,2.656,28,2.656,29,3.621,30,0.438,31,0.072,32,1.787,33,2.369,34,3.621,35,3.621,36,2.369,37,2.656,38,3.621,39,1.588,40,3.621,41,3.621,42,2.656,43,3.621,44,3.621,45,0.021,46,0.021]],["title/modules/AppModule.html",[47,1.28,48,2.16]],["body/modules/AppModule.html",[1,2.57,2,1.463,3,0.202,4,0.227,5,0.202,12,0.03,19,0.972,21,0.599,22,2.482,23,1.756,27,1.535,28,1.535,30,0.253,31,0.041,36,1.369,42,1.535,45,0.014,46,0.014,47,1.523,48,3.828,49,0.95,50,1.033,51,1.237,52,1.237,53,1.033,54,2.322,55,1.237,56,1.756,57,1.756,58,1.756,59,2.709,60,2.482,61,2.973,62,1.904,63,1.237,64,1.127,65,1.535,66,2.362,67,2.093,68,1.127,69,1.756,70,2.703,71,2.093,72,2.093,73,1.369,74,3.221,75,1.756,76,2.093,77,2.093,78,2.093,79,2.886,80,3.221,81,3.221,82,1.756,83,1.535,84,3.221,85,2.093,86,1.756,87,2.093,88,1.59,89,1.756,90,2.093,91,1.535,92,2.815,93,1.756,94,3.688,95,2.362,96,2.093,97,3.221,98,1.535,99,2.093,100,3.927,101,1.756,102,3.221,103,2.703,104,1.756,105,2.093,106,1.535,107,1.756,108,2.093,109,1.756,110,2.093,111,2.093,112,3.221,113,2.35,114,1.756,115,2.093,116,2.093,117,2.093,118,2.093,119,2.093,120,2.093,121,2.093,122,2.093,123,2.093,124,2.093,125,2.093,126,2.093,127,2.703,128,2.093,129,2.093,130,1.756,131,1.904,132,1.904,133,2.093,134,1.756,135,2.093,136,2.093,137,2.093,138,2.093,139,1.904,140,2.093,141,1.756,142,2.093,143,2.093,144,1.756,145,2.093,146,1.127,147,2.703,148,3.221,149,2.093]],["title/injectables/AppService.html",[22,1.629,150,1.099]],["body/injectables/AppService.html",[3,0.283,4,0.318,5,0.283,7,0.355,8,1.602,9,3.81,10,3.81,12,0.03,14,0.923,16,1.602,19,0.67,21,0.839,22,2.04,30,0.355,31,0.082,32,1.448,33,1.919,39,1.376,45,0.018,46,0.018,113,1.448,139,1.734,150,1.376,151,1.58,152,2.151,153,2.362,154,1.877,155,2.151,156,2.014,157,2.933,158,1.053,159,0.976,160,0.434,161,0.905,162,2.173,163,2.933,164,1.919,165,2.933,166,3.031,167,1.484,168,1.734,169,3.131,170,4.016,171,3.468,172,2.151,173,2.462,174,2.462,175,2.151,176,2.704,177,2.462,178,2.151,179,3.468,180,2.226,181,1.448,182,2.462,183,2.462,184,2.462,185,2.462,186,2.462,187,2.462,188,2.151,189,2.704,190,3.468,191,2.151,192,3.468,193,2.462,194,2.462,195,2.462,196,2.151]],["title/controllers/AuthController.html",[0,1.629,197,1.951]],["body/controllers/AuthController.html",[0,1.168,2,1.075,3,0.228,4,0.257,5,0.228,7,0.287,8,1.371,11,1.904,12,0.03,14,0.682,16,1.371,19,0.815,21,0.677,30,0.287,31,0.047,32,1.168,37,1.735,39,0.787,42,2.593,45,0.016,46,0.016,68,1.274,113,2.698,127,2.967,132,2.971,134,3.553,153,2.089,158,1.27,159,1.177,160,0.523,161,1.091,181,1.168,197,2.09,198,1.986,199,1.986,200,1.986,201,2.502,202,2.09,203,1.735,204,2.944,205,3.073,206,2.366,207,2.366,208,2.971,209,1.735,210,3.535,211,2.366,212,1.986,213,2.366,214,2.366,215,2.366,216,2.089,217,1.735,218,1.168,219,2.313,220,2.366,221,1.548,222,1.548,223,2.366,224,2.366,225,2.366,226,2.366,227,2.366,228,1.745,229,1.986,230,2.366,231,2.366,232,1.986,233,3.553,234,3.535,235,3.686,236,2.366,237,1.986,238,1.986,239,3.535,240,3.535,241,1.986,242,1.986,243,3.535,244,2.366,245,2.366,246,2.366,247,2.366,248,3.535,249,2.366,250,2.366,251,2.366,252,1.986,253,3.535,254,2.366,255,2.366,256,2.366,257,3.535,258,1.986,259,2.366,260,2.366,261,3.535,262,2.366,263,1.735,264,2.366,265,2.366,266,2.366,267,2.366,268,2.366,269,2.366,270,2.366,271,2.366,272,1.986,273,2.366]],["title/classes/AuthDto.html",[31,0.065,204,1.778]],["body/classes/AuthDto.html",[3,0.393,4,0.442,5,0.393,7,0.493,11,2.773,12,0.029,14,0.993,19,0.661,30,0.493,31,0.102,45,0.023,46,0.023,160,0.762,167,2.13,204,2.773,274,1.356,275,3.42,276,1.589,277,2.564,278,3.04,279,4.075,280,4.075,281,4.075,282,4.075,283,4.322,284,5.645,285,5.149,286,2.989]],["title/classes/AuthInput.html",[31,0.065,287,1.629]],["body/classes/AuthInput.html",[3,0.348,4,0.391,5,0.348,7,0.437,12,0.029,14,0.918,30,0.713,31,0.112,45,0.021,46,0.021,146,2.869,160,0.838,167,2.171,274,1.201,276,1.469,277,2.572,278,2.869,287,2.795,288,1.78,289,3.607,290,3.607,291,2.563,292,2.132,293,2.563,294,1.78,295,1.295,296,2.132,297,2.132,298,3.485,299,1.943,300,2.36,301,3.114,302,2.36,303,2.132,304,2.132,305,1.78]],["title/modules/AuthModule.html",[47,1.28,59,1.778]],["body/modules/AuthModule.html",[2,2.103,3,0.334,4,0.376,5,0.334,12,0.029,19,0.969,21,0.99,30,0.419,31,0.069,45,0.02,46,0.02,47,2.023,49,1.572,50,1.708,51,2.046,52,2.046,53,1.708,54,3.085,55,2.046,59,3.417,60,2.95,62,2.737,63,2.046,64,1.864,66,3.396,91,2.539,197,3.085,216,2.95,217,2.539,306,2.905,307,3.461,308,2.905,309,3.533,310,3.461,311,2.905,312,3.461,313,2.539,314,2.905,315,3.461]],["title/classes/AuthPayload.html",[31,0.065,291,1.778]],["body/classes/AuthPayload.html",[3,0.357,4,0.402,5,0.357,7,0.449,12,0.029,14,0.715,30,0.719,31,0.113,45,0.021,46,0.021,146,2.907,160,0.798,167,2.133,274,1.234,276,1.495,277,2.2,278,1.996,287,2.664,288,1.829,291,2.907,292,3.191,293,2.609,294,1.829,295,1.331,296,2.191,297,2.191,298,3.531,299,1.996,300,2.425,301,3.17,302,2.425,303,2.191,304,2.191,305,1.829,316,3.706]],["title/classes/AuthResolver.html",[31,0.065,317,2.421]],["body/classes/AuthResolver.html",[3,0.28,4,0.315,5,0.28,7,0.352,8,1.592,11,2.211,12,0.029,14,0.918,16,1.592,19,0.919,30,0.352,31,0.058,33,2.686,39,1.367,45,0.018,46,0.018,73,1.901,79,1.901,88,2.553,89,2.439,109,3.446,130,3.446,154,1.865,158,1.709,159,1.585,160,0.704,161,1.469,197,3.442,201,2.427,202,2.427,203,2.131,204,3.136,208,3.442,209,2.131,216,2.796,217,2.131,221,2.686,274,0.967,287,2.35,311,2.439,317,3.011,318,2.439,319,2.906,320,2.906,321,3.995,322,4.106,323,2.906,324,4.106,325,2.906,326,1.718,327,2.906,328,2.906,329,2.906,330,2.906,331,2.906,332,2.906,333,2.906,334,2.906]],["title/injectables/AuthService.html",[150,1.099,216,1.629]],["body/injectables/AuthService.html",[3,0.198,4,0.223,5,0.198,7,0.249,8,1.232,12,0.03,14,0.843,16,1.506,19,0.844,21,0.588,30,0.249,31,0.041,39,1.293,45,0.014,46,0.014,68,1.107,113,2.157,150,1.058,151,1.107,153,2.724,154,1.443,155,1.508,156,1.694,158,1.569,159,1.454,160,0.646,161,1.349,162,1.443,164,2.541,167,1.395,168,1.215,180,2.092,181,2.332,188,1.508,201,1.879,202,1.879,203,2.33,204,2.804,208,2.296,209,2.33,216,1.568,219,2.859,221,2.541,222,2.541,228,2.465,232,2.667,233,1.726,272,1.726,277,2.365,292,1.215,294,1.015,295,1.395,296,1.215,297,1.215,313,1.508,335,1.726,336,3.178,337,2.541,338,4.369,339,2.056,340,2.056,341,3.178,342,2.056,343,2.079,344,2.056,345,2.056,346,2.056,347,1.726,348,3.178,349,3.178,350,2.056,351,3.884,352,2.056,353,2.056,354,1.694,355,2.056,356,1.215,357,2.056,358,1.726,359,1.726,360,2.056,361,2.056,362,2.859,363,2.056,364,3.178,365,2.056,366,2.056,367,4.369,368,2.056,369,2.056,370,1.726,371,2.056,372,3.178,373,3.178,374,2.056,375,2.056,376,2.056,377,2.056,378,2.056,379,1.726,380,1.726,381,3.884,382,2.056,383,2.056,384,2.056]],["title/classes/EditUserDto.html",[31,0.065,385,1.951]],["body/classes/EditUserDto.html",[3,0.356,4,0.401,5,0.356,7,0.447,11,2.901,12,0.029,14,1.039,19,0.599,30,0.447,31,0.096,45,0.021,46,0.021,160,0.797,161,1.878,167,2.185,274,1.229,276,1.491,277,2.447,283,4.056,286,2.708,385,2.857,386,4.796,387,3.099,388,5.387,389,5.387,390,3.692,391,3.692,392,4.832,393,3.692,394,3.692,395,5.715,396,5.387]],["title/interfaces/Flags.html",[397,1.629,398,2.16]],["body/interfaces/Flags.html",[3,0.268,4,0.301,5,0.268,7,0.336,12,0.03,19,0.645,31,0.055,37,2.037,39,0.924,45,0.017,46,0.017,73,1.817,113,1.962,144,2.331,159,0.924,160,0.588,161,1.564,172,4.093,180,1.496,228,2.836,238,3.897,241,3.337,263,2.916,276,1.227,288,1.371,305,1.962,326,2.35,397,1.371,398,3.915,399,2.037,400,1.817,401,1.817,402,5.364,403,4.684,404,3.337,405,2.778,406,2.778,407,2.778,408,2.778,409,2.916,410,5.364,411,3.976,412,3.976,413,2.778,414,4.643,415,3.976,416,2.778,417,2.778,418,2.778,419,2.778,420,2.778,421,2.778,422,2.778,423,2.778,424,2.037,425,2.778,426,2.778,427,2.331,428,2.778,429,2.037,430,2.778,431,2.778,432,2.778,433,2.778,434,2.778,435,2.778]],["title/classes/GraphqlContext.html",[31,0.065,88,1.629]],["body/classes/GraphqlContext.html",[3,0.388,4,0.437,5,0.388,7,0.487,12,0.029,14,0.985,19,0.653,30,0.618,31,0.101,45,0.022,46,0.022,88,2.521,131,3.317,132,3.317,160,0.755,205,3.672,218,1.986,274,1.339,276,1.576,295,1.445,354,2.176,397,1.986,436,2.632,437,3.317,438,4.023,439,4.023,440,2.751,441,2.95,442,2.167]],["title/classes/IMutation.html",[31,0.065,299,1.778]],["body/classes/IMutation.html",[3,0.316,4,0.356,5,0.316,7,0.397,8,1.731,12,0.029,14,0.862,16,1.731,30,0.69,31,0.108,45,0.02,46,0.02,146,2.735,158,1.604,159,1.486,160,0.806,161,1.378,167,1.957,201,2.64,202,2.64,274,1.092,277,2.028,278,1.767,287,2.971,288,1.619,291,2.735,292,1.939,293,2.735,294,1.619,295,1.178,296,1.939,297,1.939,298,3.938,299,2.405,300,2.922,301,3.566,302,2.922,303,1.939,304,1.939,305,1.619,356,2.64,443,3.281,444,3.281]],["title/classes/JwtGuard.html",[31,0.065,445,2.16]],["body/classes/JwtGuard.html",[3,0.438,4,0.493,5,0.438,12,0.029,14,0.877,19,0.738,30,0.551,31,0.09,45,0.024,46,0.024,154,2.693,274,1.514,442,2.449,445,3.606,446,3.816,447,4.547,448,4.547,449,3.335,450,4.547,451,3.335]],["title/injectables/JwtStrategy.html",[150,1.099,309,1.951]],["body/injectables/JwtStrategy.html",[3,0.226,4,0.254,5,0.226,7,0.284,8,1.361,12,0.03,14,0.901,16,1.361,19,0.852,21,0.67,30,0.284,31,0.046,32,1.156,39,1.555,45,0.015,46,0.015,68,1.262,92,2.488,98,1.718,106,2.574,131,1.385,150,1.168,151,1.262,154,1.064,156,1.812,158,1.511,159,1.401,160,0.777,161,1.299,162,1.911,167,1.678,168,1.385,218,1.156,219,3.058,221,3.564,222,2.296,228,2.077,229,1.966,235,1.718,258,2.945,276,1.083,277,1.911,294,1.156,295,1.26,305,2.306,309,2.075,314,1.966,337,2.296,343,2.296,354,1.361,362,1.533,370,1.966,379,1.966,380,1.966,440,1.262,442,1.262,449,1.718,451,1.718,452,1.966,453,4.208,454,4.208,455,3.509,456,3.509,457,1.966,458,3.509,459,3.509,460,4.673,461,2.342,462,3.509,463,3.509,464,2.342,465,2.342,466,2.342,467,1.966,468,2.342,469,1.966,470,2.342,471,2.342,472,2.342,473,2.342,474,2.342,475,2.342,476,2.342,477,3.509,478,2.342,479,2.342,480,2.342,481,2.342,482,2.342,483,2.342,484,2.342,485,3.509,486,2.342,487,2.342,488,1.966,489,2.342,490,2.342]],["title/modules/PrismaModule.html",[47,1.28,60,1.629]],["body/modules/PrismaModule.html",[3,0.377,4,0.424,5,0.377,12,0.029,19,0.813,21,1.118,30,0.473,31,0.077,45,0.022,46,0.022,47,2.146,49,1.774,50,1.928,51,2.309,52,2.309,53,1.928,54,3.272,55,3.272,60,3.101,62,2.963,63,2.309,64,2.104,156,2.543,491,3.278,492,3.278,493,3.278,494,3.906,495,5.012,496,3.906]],["title/injectables/PrismaService.html",[150,1.099,156,1.28]],["body/injectables/PrismaService.html",[3,0.305,4,0.222,5,0.197,7,0.247,8,1.226,12,0.03,14,0.84,16,1.5,19,0.764,21,0.585,30,0.247,31,0.04,39,1.287,45,0.014,46,0.014,68,1.1,83,1.498,106,1.498,113,1.561,139,1.208,150,1.052,151,1.1,153,2.649,154,0.928,156,1.226,158,1.135,159,1.052,160,0.468,161,0.976,162,0.928,176,1.337,181,2.149,189,1.337,196,1.498,219,2.849,222,1.337,228,2.325,358,1.714,362,1.337,442,1.703,451,1.498,457,2.654,469,1.714,497,1.498,498,3.868,499,4.354,500,3.162,501,4.981,502,2.043,503,2.043,504,3.162,505,4.354,506,2.043,507,2.043,508,1.714,509,2.654,510,2.043,511,1.714,512,1.714,513,2.319,514,1.714,515,3.654,516,1.337,517,3.654,518,2.654,519,3.246,520,1.714,521,2.837,522,2.043,523,2.043,524,2.043,525,1.714,526,2.043,527,2.043,528,2.043,529,3.162,530,2.043,531,2.043,532,2.043,533,2.043,534,2.043,535,2.043,536,2.043,537,2.043,538,2.043,539,2.654,540,3.162,541,2.043,542,2.043,543,2.043,544,2.043,545,2.043,546,2.043,547,2.043,548,2.043,549,2.043,550,2.043,551,2.043,552,2.043,553,2.043,554,2.043,555,1.714,556,2.043,557,2.654,558,2.043,559,2.043,560,2.043,561,2.043,562,2.043,563,2.043,564,2.043,565,2.043,566,2.043,567,2.043,568,2.043,569,2.043,570,2.043,571,1.714,572,2.043,573,2.043,574,2.043,575,2.043,576,2.043,577,2.043,578,2.043,579,2.043,580,2.043,581,1.714,582,2.043]],["title/classes/RequestWithUser.html",[31,0.065,437,1.951]],["body/classes/RequestWithUser.html",[3,0.396,4,0.446,5,0.396,7,0.498,12,0.029,14,0.793,19,0.667,30,0.627,31,0.102,45,0.023,46,0.023,88,2.029,131,2.43,132,2.43,160,0.608,205,3.388,218,2.029,274,1.368,276,1.598,295,1.476,354,2.427,397,2.029,436,2.69,437,3.351,440,3.053,441,3.015,442,2.789,583,4.111]],["title/classes/ServiceStatus.html",[31,0.065,169,2.16]],["body/classes/ServiceStatus.html",[3,0.264,4,0.297,5,0.264,7,0.331,9,2.007,10,2.007,12,0.03,14,0.971,19,0.638,21,0.783,22,1.351,30,0.331,31,0.078,32,1.351,33,1.791,36,3.013,39,1.309,45,0.017,46,0.017,113,1.942,139,1.618,150,1.309,152,2.007,153,1.351,154,1.787,156,1.525,158,0.983,159,0.911,160,0.745,161,0.845,162,1.787,166,2.007,167,1.808,168,1.618,169,3.295,170,5.004,171,4.661,172,3.693,173,4.476,174,4.476,175,2.885,176,2.574,177,2.297,178,2.007,179,3.302,180,2.119,181,1.351,182,2.297,183,2.297,184,2.297,185,2.297,186,2.297,187,2.297,188,2.007,189,2.574,190,3.302,191,2.007,192,3.302,193,2.297,194,2.297,195,2.297,196,2.007,274,0.911,276,1.214,424,3.378,584,2.737,585,2.737,586,2.737,587,2.737,588,2.737]],["title/classes/SignUpPayload.html",[31,0.065,293,1.778]],["body/classes/SignUpPayload.html",[3,0.33,4,0.371,5,0.33,7,0.415,12,0.029,14,1.07,30,0.701,31,0.11,45,0.02,46,0.02,146,3.116,160,0.881,167,2.078,274,1.14,276,1.419,277,2.519,278,1.844,287,2.561,288,1.69,291,2.476,292,2.024,293,2.795,294,2.561,295,1.65,296,3.068,297,3.068,298,3.395,299,1.844,300,2.24,301,3.008,302,2.24,303,2.024,304,2.024,305,1.69,589,3.424,590,3.424,591,3.424,592,3.424]],["title/interfaces/User.html",[354,1.28,397,1.629]],["body/interfaces/User.html",[3,0.4,4,0.45,5,0.4,7,0.502,12,0.029,19,0.673,30,0.63,31,0.103,45,0.023,46,0.023,88,2.047,131,2.452,132,2.452,160,0.613,205,3.406,218,2.047,276,1.607,295,2.043,354,2.314,397,2.047,399,3.041,436,2.713,437,3.078,440,2.804,441,4.377,442,2.234]],["title/controllers/UserController.html",[0,1.629,593,2.16]],["body/controllers/UserController.html",[0,1.347,2,1.24,3,0.263,4,0.296,5,0.263,7,0.33,8,1.522,11,2.477,12,0.029,14,0.887,16,1.783,19,0.9,21,0.781,30,0.33,31,0.054,32,1.347,39,1.53,45,0.017,46,0.017,153,2.269,158,1.651,159,1.53,160,0.68,161,1.419,164,1.786,166,2.002,181,1.347,191,2.002,199,2.291,208,3.15,212,3.295,295,1.992,343,3.29,354,2.345,385,2.973,440,1.47,445,1.786,508,2.291,593,2.569,594,2.291,595,2.291,596,3.295,597,3.295,598,3.926,599,2.291,600,2.729,601,2.729,602,2.291,603,2.729,604,2.729,605,2.729,606,2.729,607,2.729,608,3.295,609,3.926,610,2.729,611,2.729,612,2.002,613,2.729,614,2.477,615,2.291,616,2.729,617,4.598,618,2.729,619,2.729,620,2.729,621,2.729,622,2.729,623,2.729,624,2.291,625,2.729,626,2.729,627,2.729,628,2.729,629,2.729]],["title/modules/UserModule.html",[47,1.28,61,1.951]],["body/modules/UserModule.html",[2,2.135,3,0.341,4,0.384,5,0.341,12,0.029,19,0.949,21,1.013,30,0.429,31,0.07,45,0.021,46,0.021,47,2.046,49,1.608,50,1.747,51,2.092,52,2.092,53,1.747,54,3.119,55,2.092,59,3.239,60,2.968,61,3.766,62,2.778,63,2.092,64,1.906,66,3.447,69,2.97,91,2.596,593,3.452,614,3.239,615,2.97,630,2.97,631,3.539,632,2.97,633,3.539,634,3.539]],["title/injectables/UserService.html",[150,1.099,614,1.778]],["body/injectables/UserService.html",[3,0.288,4,0.324,5,0.288,7,0.362,8,1.624,12,0.029,14,0.933,16,1.624,19,0.784,21,0.855,30,0.362,31,0.059,32,1.475,39,1.394,45,0.018,46,0.018,150,1.394,151,1.61,153,2.821,154,1.358,155,2.192,156,2.031,158,1.736,159,1.609,160,0.715,161,1.492,162,1.902,164,2.74,168,1.767,181,2.067,208,3.379,228,2.067,294,2.067,295,2.052,343,3.608,354,2.031,356,1.767,385,3.097,596,3.515,597,3.515,599,3.515,602,3.515,608,3.515,614,2.256,635,2.509,636,2.989,637,2.989,638,2.989,639,2.989,640,2.989,641,4.188,642,2.989]],["title/coverage.html",[643,3.289]],["body/coverage.html",[0,2.137,1,1.609,5,0.237,6,2.063,12,0.029,22,1.213,31,0.119,45,0.016,46,0.016,53,1.213,65,2.668,88,1.213,92,1.453,94,1.803,150,1.7,152,2.668,156,0.953,160,0.364,169,1.609,180,1.324,197,1.453,198,2.063,204,1.324,216,1.213,263,2.668,275,2.063,287,1.213,288,2.362,291,1.324,293,1.324,299,1.324,309,1.453,317,1.803,318,2.063,326,1.453,335,2.063,354,0.953,385,1.453,386,2.063,387,2.063,397,1.796,398,2.38,400,3.342,401,3.342,429,1.803,436,2.833,437,1.453,445,1.609,446,2.063,452,2.063,488,5.538,497,3.176,513,1.803,521,1.803,593,1.609,594,2.063,612,1.803,614,1.324,635,2.063,643,1.803,644,1.803,645,2.459,646,2.459,647,5.534,648,4.786,649,5.682,650,5.903,651,5.108,652,5.108,653,2.063,654,2.063,655,2.063,656,2.063,657,2.459,658,2.459]],["title/dependencies.html",[50,1.957,659,2.322]],["body/dependencies.html",[12,0.03,21,0.923,27,2.365,28,3.237,31,0.087,45,0.019,46,0.019,50,1.591,68,1.737,70,2.706,73,2.11,75,2.706,79,3.708,82,2.706,83,2.365,86,2.706,114,2.706,147,2.706,162,1.464,218,1.591,235,2.365,286,2.365,313,2.365,337,2.11,347,2.706,449,2.365,467,3.704,509,2.706,511,2.706,512,2.706,539,2.706,660,3.224,661,3.224,662,3.224,663,5.032,664,3.224,665,3.224,666,3.224,667,3.224,668,3.224,669,3.224,670,3.224,671,3.224,672,3.224,673,3.224,674,3.224,675,3.224,676,3.224,677,3.224,678,3.224,679,3.224,680,3.224,681,3.224,682,3.224,683,3.224,684,3.224,685,3.224,686,3.224,687,3.224,688,3.224,689,3.224,690,3.224,691,3.224,692,3.224,693,2.706,694,3.224,695,3.224,696,3.224,697,3.224,698,3.224,699,3.224,700,3.224,701,3.224,702,3.224]],["title/miscellaneous/functions.html",[703,1.49,704,3.327]],["body/miscellaneous/functions.html",[7,0.567,12,0.026,45,0.025,46,0.025,53,2.964,158,1.682,159,1.559,161,1.445,326,2.768,400,3.064,401,3.67,409,3.435,655,4.708,656,3.93,703,2.522,704,3.93,705,4.683,706,3.93]],["title/index.html",[7,0.335,707,2.322,708,2.322]],["body/index.html",[2,1.672,12,0.028,45,0.016,46,0.016,47,0.968,49,1.672,79,1.634,92,2.584,95,3.537,98,3.205,101,2.096,103,2.096,104,2.096,107,3.089,141,2.096,162,1.985,176,2.408,178,1.832,200,2.096,201,1.477,202,1.477,237,2.096,242,2.096,252,2.096,278,1.345,337,1.634,354,0.968,356,2.176,403,2.096,516,1.634,525,3.089,555,3.089,571,2.096,581,3.089,595,3.089,624,3.668,643,1.832,644,3.205,693,3.668,709,2.498,710,2.096,711,2.498,712,3.681,713,5.562,714,3.681,715,2.498,716,2.498,717,2.498,718,2.498,719,2.498,720,2.498,721,2.498,722,2.498,723,2.498,724,3.681,725,2.498,726,2.498,727,2.498,728,3.681,729,2.498,730,2.498,731,2.498,732,2.498,733,3.681,734,4.37,735,2.498,736,2.498,737,2.498,738,2.498,739,2.498,740,2.498,741,3.681,742,2.498,743,2.498,744,2.498,745,2.498,746,2.498,747,2.498,748,2.498,749,2.498,750,2.498,751,2.498,752,2.498,753,2.096,754,2.498,755,2.498,756,2.498,757,2.498,758,2.498,759,2.498,760,2.498,761,2.498,762,3.681,763,4.37,764,2.498,765,2.498,766,2.498,767,2.498,768,2.498,769,2.498,770,2.498,771,2.498,772,2.498,773,2.498,774,2.498,775,2.498,776,2.498,777,2.498,778,2.498,779,2.498,780,2.498,781,2.498,782,5.708,783,2.498,784,2.498,785,2.498,786,2.096,787,2.498,788,2.498,789,2.498,790,5.379,791,2.498,792,2.498,793,2.498,794,2.498,795,2.498,796,2.498,797,1.832,798,2.498]],["title/license.html",[707,2.322,708,2.322,799,2.029]],["body/license.html",[12,0.02,45,0.02,46,0.02,64,1.857,189,2.256,218,1.702,359,3.877,516,2.256,644,2.529,753,2.894,786,3.877,797,2.529,799,2.529,800,5.208,801,3.449,802,3.449,803,3.449,804,4.619,805,3.449,806,3.449,807,3.449,808,3.449,809,3.449,810,3.449,811,6.275,812,3.449,813,3.449,814,5.208,815,3.449,816,4.619,817,3.449,818,3.449,819,3.449,820,3.449,821,3.449,822,3.449,823,3.449,824,3.449,825,3.449,826,4.619,827,3.449,828,3.449,829,3.449,830,3.449,831,3.449,832,3.449,833,3.449,834,4.619,835,4.619,836,3.449,837,3.449,838,3.449,839,3.449,840,3.449,841,3.449,842,3.449,843,3.449,844,3.449,845,3.449,846,3.449,847,3.449,848,3.449,849,3.449,850,3.449,851,3.449,852,3.449,853,3.449,854,3.449,855,3.449,856,3.449,857,3.449,858,3.449,859,3.449,860,3.449,861,3.449,862,3.449]],["title/modules.html",[49,2.037]],["body/modules.html",[12,0.025,45,0.025,46,0.025,48,3.049,49,2.116,59,2.51,60,2.3,61,2.755,863,6.214,864,6.214,865,6.214,866,6.214]],["title/overview.html",[867,3.764]],["body/overview.html",[2,1.522,12,0.029,22,2.533,45,0.02,46,0.02,47,1.299,48,4.126,49,1.522,50,1.654,51,1.981,52,1.981,53,1.654,54,1.981,55,1.981,56,2.812,57,2.812,58,2.812,59,3.397,60,3.038,61,3.688,62,2.678,63,1.981,64,1.805,151,1.805,156,2.346,216,2.533,274,1.115,306,2.812,308,2.812,309,3.034,399,2.457,491,2.812,492,2.812,493,2.812,557,2.812,614,2.764,630,2.812,632,2.812,867,2.812,868,3.351,869,3.351,870,3.351,871,3.351]],["title/properties.html",[276,1.224,659,2.322]],["body/properties.html",[12,0.029,45,0.024,46,0.024,276,1.417,710,3.854,797,3.368,799,3.368,872,4.592,873,4.592,874,4.592,875,4.592,876,4.592,877,4.592,878,5.543,879,4.592,880,4.592,881,4.592,882,4.592,883,4.592]],["title/miscellaneous/typealiases.html",[703,1.49,884,3.964]],["body/miscellaneous/typealiases.html",[7,0.585,12,0.027,45,0.025,46,0.025,146,3.076,160,0.714,288,2.383,303,3.376,304,2.854,305,2.383,703,2.6,885,4.827,886,5.711]],["title/miscellaneous/variables.html",[703,1.49,887,3.327]],["body/miscellaneous/variables.html",[3,0.299,7,0.375,12,0.029,36,3.953,39,1.429,45,0.019,46,0.019,65,2.271,92,2.538,93,2.599,94,3.148,95,2.271,139,1.831,160,0.729,167,1.541,175,2.271,180,1.668,228,1.529,321,2.599,326,2.538,356,2.538,362,2.027,398,3.224,400,2.027,401,3.481,404,2.599,409,2.271,424,4.431,427,2.599,429,3.148,440,1.668,497,2.271,513,3.148,514,2.599,515,4.464,516,2.027,517,4.464,518,2.599,519,4.135,520,2.599,521,3.148,612,3.148,653,2.599,654,3.603,703,1.668,706,4.135,887,2.599,888,4.293,889,4.293,890,3.097,891,3.097,892,3.097,893,3.097,894,3.097,895,3.097]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":488,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["0.1.13",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":873,"title":{},"body":{"properties.html":{}}}],["0.30.3",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["1.4.6",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["1.78.0",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["11",{"_index":871,"title":{},"body":{"overview.html":{}}}],["12.0.7",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["12.0.8",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["16.7.1",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["17.9.2",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["18.0.2",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":557,"title":{},"body":{"injectables/PrismaService.html":{},"overview.html":{}}}],["2.0.0",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":802,"title":{},"body":{"license.html":{}}}],["3",{"_index":869,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["3600000",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["4",{"_index":868,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":479,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5",{"_index":870,"title":{},"body":{"overview.html":{}}}],["5.2.3",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["7.8.1",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":833,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":298,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["access_token",{"_index":292,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["accessible",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":857,"title":{},"body":{"license.html":{}}}],["actual",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["aliases",{"_index":885,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":720,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":824,"title":{},"body":{"license.html":{}}}],["angular",{"_index":769,"title":{},"body":{"index.html":{}}}],["api",{"_index":624,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["api.bookstore.nas",{"_index":709,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["apollodriver",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagegraphqlplayground",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["app.close",{"_index":577,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["app.dto",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appended",{"_index":483,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":732,"title":{},"body":{"index.html":{}}}],["arg",{"_index":411,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice",{"_index":423,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(1).split",{"_index":420,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(2",{"_index":416,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.startswith",{"_index":412,"title":{},"body":{"interfaces/Flags.html":{}}}],["argon",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(dto.password",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.verify(user.hash",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["args",{"_index":326,"title":{},"body":{"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":407,"title":{},"body":{"interfaces/Flags.html":{}}}],["arising",{"_index":861,"title":{},"body":{"license.html":{}}}],["array",{"_index":408,"title":{},"body":{"interfaces/Flags.html":{}}}],["asia/kolkata",{"_index":575,"title":{},"body":{"injectables/PrismaService.html":{}}}],["associated",{"_index":812,"title":{},"body":{"license.html":{}}}],["async",{"_index":153,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth.service",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth/auth.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/decorator",{"_index":613,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/guard",{"_index":611,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":197,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authdto",{"_index":204,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authenticated",{"_index":721,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":755,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":448,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authguard('jwt",{"_index":450,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authinput",{"_index":287,"title":{"classes/AuthInput.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":882,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":756,"title":{},"body":{"index.html":{}}}],["authors",{"_index":850,"title":{},"body":{"license.html":{}}}],["authpayload",{"_index":291,"title":{"classes/AuthPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["authresolver",{"_index":317,"title":{"classes/AuthResolver.html":{}},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":216,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":875,"title":{},"body":{"properties.html":{}}}],["between",{"_index":749,"title":{},"body":{"index.html":{}}}],["body",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["bookstore.nas",{"_index":876,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":866,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":863,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":879,"title":{},"body":{"properties.html":{}}}],["built",{"_index":712,"title":{},"body":{"index.html":{}}}],["business",{"_index":733,"title":{},"body":{"index.html":{}}}],["c",{"_index":801,"title":{},"body":{"license.html":{}}}],["cache",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('home",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["cachemodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(5",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(number.max_safe_integer",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(undefined)@get('health",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["case",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["catch",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch((err",{"_index":187,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["chalk",{"_index":543,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.cyan(json.stringify(e.params",{"_index":548,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.green(e.query",{"_index":546,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.magenta(`${e.duration}ms",{"_index":550,"title":{},"body":{"injectables/PrismaService.html":{}}}],["charge",{"_index":808,"title":{},"body":{"license.html":{}}}],["claim",{"_index":853,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":274,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"overview.html":{}}}],["cleandb",{"_index":499,"title":{},"body":{"injectables/PrismaService.html":{}}}],["clear",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":491,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":492,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":493,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":630,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":631,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":632,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["compodoc",{"_index":766,"title":{},"body":{"index.html":{}}}],["compression",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["concerns",{"_index":737,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":832,"title":{},"body":{"license.html":{}}}],["config",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":536,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":476,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mode",{"_index":469,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":754,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configuration",{"_index":751,"title":{},"body":{"index.html":{}}}],["connect",{"_index":183,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connected",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connecting",{"_index":570,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"license.html":{}}}],["connectors/postgresql#configuring",{"_index":532,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.count('db",{"_index":184,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["console.debug",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["console.debug(req.cookies",{"_index":486,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.error",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ServiceStatus.html":{}}}],["console.info(new",{"_index":569,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":639,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('extracted",{"_index":489,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('flags",{"_index":428,"title":{},"body":{"interfaces/Flags.html":{}}}],["console.log(chalk.yellow('duration",{"_index":549,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('params",{"_index":547,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('query",{"_index":545,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('duration",{"_index":567,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('params",{"_index":565,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('query",{"_index":563,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":154,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":319,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(config",{"_index":457,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(ok",{"_index":584,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["constructor(prisma",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["context",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["contract",{"_index":858,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":616,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["cookie",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["cookiename",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["cookies",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["copies",{"_index":826,"title":{},"body":{"license.html":{}}}],["copy",{"_index":786,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":800,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":643,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":722,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":296,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["createparamdecorator",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":725,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":321,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["ctx.res",{"_index":334,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentflag",{"_index":410,"title":{},"body":{"interfaces/Flags.html":{}}}],["damages",{"_index":854,"title":{},"body":{"license.html":{}}}],["data",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":571,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["database_url",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["datasources",{"_index":534,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["datetime",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["db",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["db_connected",{"_index":521,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbstatus",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.debug",{"_index":195,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.ok",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.status",{"_index":194,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["deal",{"_index":813,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":862,"title":{},"body":{"license.html":{}}}],["debug",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"classes/EditUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["definitionsfactory",{"_index":429,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["definitionsfactory.generate",{"_index":430,"title":{},"body":{"interfaces/Flags.html":{}}}],["delete",{"_index":608,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":628,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":596,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@getuser('userid",{"_index":627,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":599,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":710,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["dev/test/prod",{"_index":785,"title":{},"body":{"index.html":{}}}],["development",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["distribute",{"_index":822,"title":{},"body":{"license.html":{}}}],["docs",{"_index":774,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":644,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":523,"title":{},"body":{"injectables/PrismaService.html":{}}}],["domain",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["domain.com",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["down",{"_index":580,"title":{},"body":{"injectables/PrismaService.html":{}}}],["driver",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.password",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["due",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["e",{"_index":542,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.g",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["e.params",{"_index":562,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.query",{"_index":551,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e2e",{"_index":525,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["edituser",{"_index":597,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituser(@getuser('userid",{"_index":620,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(userid",{"_index":602,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituserdto",{"_index":385,"title":{"classes/EditUserDto.html":{}},"body":{"classes/EditUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["em",{"_index":776,"title":{},"body":{"index.html":{}}}],["email",{"_index":277,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{}}}],["emit",{"_index":515,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":500,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":504,"title":{},"body":{"injectables/PrismaService.html":{}}}],["env",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":787,"title":{},"body":{"index.html":{}}}],["env.local",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["env.prod",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["envfile",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["error",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["error.code",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["event",{"_index":516,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":528,"title":{},"body":{"injectables/PrismaService.html":{}}}],["executioncontext",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiration",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":442,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["extract",{"_index":406,"title":{},"body":{"interfaces/Flags.html":{}}}],["extractflags",{"_index":655,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractflags(args",{"_index":409,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":466,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":473,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":471,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie",{"_index":455,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie(req",{"_index":459,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":190,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["false",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["fieldresolverenhancers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":753,"title":{},"body":{"index.html":{},"license.html":{}}}],["fill",{"_index":788,"title":{},"body":{"index.html":{}}}],["find",{"_index":775,"title":{},"body":{"index.html":{}}}],["first",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firstname",{"_index":388,"title":{},"body":{"classes/EditUserDto.html":{}}}],["fitness",{"_index":846,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["fixme:unsure",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["flag",{"_index":414,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys",{"_index":419,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys.foreach((key",{"_index":421,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagname",{"_index":415,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags",{"_index":398,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["flags.w",{"_index":435,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags.watch",{"_index":434,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[currentflag",{"_index":426,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[flagname",{"_index":417,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[key",{"_index":422,"title":{},"body":{"interfaces/Flags.html":{}}}],["followed",{"_index":730,"title":{},"body":{"index.html":{}}}],["following",{"_index":831,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('credentials",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('incorrect",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":510,"title":{},"body":{"injectables/PrismaService.html":{}}}],["format(query",{"_index":553,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formattedquery",{"_index":552,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formatter",{"_index":512,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["free",{"_index":807,"title":{},"body":{"license.html":{}}}],["function",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{},"coverage.html":{}}}],["functional",{"_index":718,"title":{},"body":{"index.html":{}}}],["functions",{"_index":704,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":829,"title":{},"body":{"license.html":{}}}],["g",{"_index":781,"title":{},"body":{"index.html":{}}}],["generate",{"_index":770,"title":{},"body":{"index.html":{}}}],["generated",{"_index":773,"title":{},"body":{"index.html":{}}}],["get('health",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":618,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@cachekey('home')@cachettl(number.max_safe_integer",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["gethealth",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["getme",{"_index":598,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(@getuser",{"_index":619,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(user",{"_index":605,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":707,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":612,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":495,"title":{},"body":{"modules/PrismaModule.html":{}}}],["granted",{"_index":806,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"dependencies.html":{},"index.html":{}}}],["graphql:schema",{"_index":717,"title":{},"body":{"index.html":{}}}],["graphqlcontext",{"_index":88,"title":{"classes/GraphqlContext.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["graphqldatetime",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqldefinitionsfactory",{"_index":404,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["handled",{"_index":734,"title":{},"body":{"index.html":{}}}],["hash",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashing",{"_index":760,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":767,"title":{},"body":{"index.html":{}}}],["here",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":805,"title":{},"body":{"license.html":{}}}],["hiro",{"_index":803,"title":{},"body":{"license.html":{}}}],["holders",{"_index":851,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":877,"title":{},"body":{"properties.html":{}}}],["hour",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["http",{"_index":738,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('signin",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["httponly",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["https",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com/fundamentals/lifecycle",{"_index":527,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://github.com/jsfame/api.bookstore.nas",{"_index":878,"title":{},"body":{"properties.html":{}}}],["https://github.com/jsfame/api.bookstore.nas/issues",{"_index":880,"title":{},"body":{"properties.html":{}}}],["https://jsfame.github.io/api.bookstore.nas",{"_index":777,"title":{},"body":{"index.html":{}}}],["https://www.prisma.io/docs/concepts/database",{"_index":531,"title":{},"body":{"injectables/PrismaService.html":{}}}],["httpstatus",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":294,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":540,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ignoreexpiration",{"_index":474,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implemented",{"_index":740,"title":{},"body":{"index.html":{}}}],["implements",{"_index":522,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":842,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["import('chalk",{"_index":544,"title":{},"body":{"injectables/PrismaService.html":{}}}],["imports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["imutation",{"_index":299,"title":{"classes/IMutation.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["included",{"_index":836,"title":{},"body":{"license.html":{}}}],["including",{"_index":816,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":505,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":150,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":151,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inspect",{"_index":726,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":768,"title":{},"body":{"index.html":{}}}],["install",{"_index":780,"title":{},"body":{"index.html":{}}}],["installation",{"_index":778,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":783,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["interactions",{"_index":742,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":397,"title":{"interfaces/Flags.html":{},"interfaces/User.html":{}},"body":{"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":399,"title":{},"body":{"interfaces/Flags.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isemail",{"_index":283,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{}}}],["isemail()@isnotempty",{"_index":279,"title":{},"body":{"classes/AuthDto.html":{}}}],["isemail()@isoptional",{"_index":390,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isglobal",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":284,"title":{},"body":{"classes/AuthDto.html":{}}}],["iso",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["isoptional",{"_index":395,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring",{"_index":396,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring()@isoptional",{"_index":392,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstrongpassword",{"_index":285,"title":{},"body":{"classes/AuthDto.html":{}}}],["isstrongpassword()@isnotempty",{"_index":281,"title":{},"body":{"classes/AuthDto.html":{}}}],["items",{"_index":727,"title":{},"body":{"index.html":{}}}],["jest",{"_index":764,"title":{},"body":{"index.html":{}}}],["john",{"_index":425,"title":{},"body":{"interfaces/Flags.html":{}}}],["joi",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(2",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('hiro@jwt#token",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().valid('dev",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":405,"title":{},"body":{"interfaces/Flags.html":{}}}],["join(process.cwd",{"_index":432,"title":{},"body":{"interfaces/Flags.html":{}}}],["jwt",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt_max_age",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt_secret",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtconstants",{"_index":453,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":470,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":445,"title":{"classes/JwtGuard.html":{}},"body":{"classes/JwtGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":309,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtstrategy.extractjwtfromcookie",{"_index":472,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["keywordcase",{"_index":558,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kind",{"_index":841,"title":{},"body":{"license.html":{}}}],["kleur",{"_index":509,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["kleur.cyan(json.stringify(e.params",{"_index":566,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.green(formattedquery",{"_index":564,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.magenta(`${e.duration}ms",{"_index":568,"title":{},"body":{"injectables/PrismaService.html":{}}}],["laciferin@gmail.com",{"_index":883,"title":{},"body":{"properties.html":{}}}],["landing",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["language",{"_index":554,"title":{},"body":{"injectables/PrismaService.html":{}}}],["lastname",{"_index":389,"title":{},"body":{"classes/EditUserDto.html":{}}}],["layers",{"_index":750,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":517,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":855,"title":{},"body":{"license.html":{}}}],["liable",{"_index":852,"title":{},"body":{"license.html":{}}}],["license",{"_index":799,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":798,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":817,"title":{},"body":{"license.html":{}}}],["limited",{"_index":843,"title":{},"body":{"license.html":{}}}],["linesbetweenqueries",{"_index":560,"title":{},"body":{"injectables/PrismaService.html":{}}}],["literal",{"_index":463,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["log",{"_index":537,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logevents",{"_index":513,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":581,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["long",{"_index":413,"title":{},"body":{"interfaces/Flags.html":{}}}],["manage",{"_index":723,"title":{},"body":{"index.html":{}}}],["management",{"_index":752,"title":{},"body":{"index.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["merchantability",{"_index":845,"title":{},"body":{"license.html":{}}}],["merge",{"_index":820,"title":{},"body":{"license.html":{}}}],["message",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["methodologies",{"_index":729,"title":{},"body":{"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["milliseconds",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":703,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":797,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":819,"title":{},"body":{"license.html":{}}}],["modular",{"_index":731,"title":{},"body":{"index.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["morph",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["mutation",{"_index":327,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signin",{"_index":322,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signup",{"_index":324,"title":{},"body":{"classes/AuthResolver.html":{}}}],["name",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["needs",{"_index":621,"title":{},"body":{"controllers/UserController.html":{}}}],["nest/swagger",{"_index":739,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":693,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":449,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":849,"title":{},"body":{"license.html":{}}}],["notice",{"_index":834,"title":{},"body":{"license.html":{}}}],["npm",{"_index":779,"title":{},"body":{"index.html":{}}}],["null",{"_index":305,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":303,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":295,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object(dto",{"_index":746,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":810,"title":{},"body":{"license.html":{}}}],["ok",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["onmoduledestroy",{"_index":526,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":501,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":161,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["orders",{"_index":724,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":860,"title":{},"body":{"license.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outputas",{"_index":433,"title":{},"body":{"interfaces/Flags.html":{}}}],["over",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["overview",{"_index":867,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":757,"title":{},"body":{"index.html":{}}}],["p2002",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":659,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["parameters",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":561,"title":{},"body":{"injectables/PrismaService.html":{}}}],["parser",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":847,"title":{},"body":{"license.html":{}}}],["passport",{"_index":467,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passport.js",{"_index":716,"title":{},"body":{"index.html":{}}}],["passportjs",{"_index":758,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":465,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":468,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":278,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"index.html":{}}}],["patch",{"_index":609,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["pattern",{"_index":747,"title":{},"body":{"index.html":{}}}],["payload",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":480,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":477,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":804,"title":{},"body":{"license.html":{}}}],["permit",{"_index":827,"title":{},"body":{"license.html":{}}}],["person",{"_index":809,"title":{},"body":{"license.html":{}}}],["persons",{"_index":828,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":744,"title":{},"body":{"index.html":{}}}],["playground",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["pnpm",{"_index":782,"title":{},"body":{"index.html":{}}}],["port",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":838,"title":{},"body":{"license.html":{}}}],["post",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signin",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":555,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prefix",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["prerequisite",{"_index":784,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.logdefinition",{"_index":514,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":496,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":508,"title":{},"body":{"injectables/PrismaService.html":{},"controllers/UserController.html":{}}}],["prisma/client/runtime/library",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["prisma/prisma.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":168,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":498,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientknownrequesterror",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismaclientunknownrequesterror",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismamodule",{"_index":60,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":156,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["process.argv.slice(2",{"_index":427,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["process.env.force_color",{"_index":538,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.mode",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["prod",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["production",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project",{"_index":771,"title":{},"body":{"index.html":{}}}],["promise",{"_index":301,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["properties",{"_index":276,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provided",{"_index":839,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["publish",{"_index":821,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":848,"title":{},"body":{"license.html":{}}}],["pwmatches",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":518,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"classes/ServiceStatus.html":{}}}],["reflect",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["replace",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["repo",{"_index":796,"title":{},"body":{"index.html":{}}}],["repository",{"_index":881,"title":{},"body":{"properties.html":{}}}],["req",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["req.cookies",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.cookies.token",{"_index":490,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies[tokenfield].length",{"_index":487,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":484,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request",{"_index":440,"title":{},"body":{"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["requesttype",{"_index":460,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestwithuser",{"_index":437,"title":{"classes/RequestWithUser.html":{}},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["required",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["res.clearcookie('token",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie(cookiename",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('token",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('user",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send(token",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolver",{"_index":328,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('auth",{"_index":329,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolvers",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["restriction",{"_index":815,"title":{},"body":{"license.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":482,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":818,"title":{},"body":{"license.html":{}}}],["run",{"_index":790,"title":{},"body":{"index.html":{}}}],["running",{"_index":178,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["rxjs",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["salts",{"_index":761,"title":{},"body":{"index.html":{}}}],["schema",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["sec",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["secret",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":475,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["select",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["sell",{"_index":825,"title":{},"body":{"license.html":{}}}],["sent",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["separate",{"_index":735,"title":{},"body":{"index.html":{}}}],["separating",{"_index":736,"title":{},"body":{"index.html":{}}}],["server",{"_index":711,"title":{},"body":{"index.html":{}}}],["service",{"_index":622,"title":{},"body":{"controllers/UserController.html":{}}}],["services",{"_index":741,"title":{},"body":{"index.html":{}}}],["servicestatus",{"_index":169,"title":{"classes/ServiceStatus.html":{}},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["set",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["shall",{"_index":835,"title":{},"body":{"license.html":{}}}],["short",{"_index":418,"title":{},"body":{"interfaces/Flags.html":{}}}],["signed",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signin(@args('data",{"_index":332,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signin(@body",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(data",{"_index":302,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["signin(dto",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signtoken",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(userid",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signup(@args('data",{"_index":330,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signup(@body",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(data",{"_index":300,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["signup(dto",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signuppayload",{"_index":293,"title":{"classes/SignUpPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["software",{"_index":811,"title":{},"body":{"license.html":{}}}],["solana/web3.js",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["something",{"_index":623,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specs",{"_index":719,"title":{},"body":{"index.html":{}}}],["sql",{"_index":511,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["src/**/*.graphql",{"_index":431,"title":{},"body":{"interfaces/Flags.html":{}}}],["src/.../app.module.ts",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generate",{"_index":706,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":886,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":705,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.service.ts",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.dto.ts",{"_index":436,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app.dto.ts:11",{"_index":438,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:12",{"_index":439,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:8",{"_index":583,"title":{},"body":{"classes/RequestWithUser.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":152,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":157,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":165,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":163,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:4",{"_index":585,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:6",{"_index":587,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:7",{"_index":588,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:8",{"_index":586,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/auth/auth.controller.ts",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":318,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:16",{"_index":325,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:23",{"_index":323,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:9",{"_index":320,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.service.ts",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/get",{"_index":653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":275,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":282,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":280,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/guard/jwt.guard.ts",{"_index":446,"title":{},"body":{"classes/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guard/jwt.guard.ts:3",{"_index":447,"title":{},"body":{"classes/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":452,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":458,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:24",{"_index":464,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:35",{"_index":461,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/generate",{"_index":400,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/graphql.ts",{"_index":288,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/graphql.ts:12",{"_index":289,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:13",{"_index":290,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:17",{"_index":316,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/graphql.ts:21",{"_index":591,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:22",{"_index":590,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:23",{"_index":589,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:24",{"_index":592,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:28",{"_index":444,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:30",{"_index":443,"title":{},"body":{"classes/IMutation.html":{}}}],["src/main.ts",{"_index":656,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":494,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":497,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.service.ts:29",{"_index":502,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:71",{"_index":507,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:81",{"_index":506,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:88",{"_index":503,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/user/dto/edit",{"_index":386,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":594,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:14",{"_index":607,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:20",{"_index":604,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:28",{"_index":601,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":633,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":635,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:24",{"_index":637,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":636,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":638,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":533,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert",{"_index":529,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert=root.crt",{"_index":530,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":791,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":792,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":793,"title":{},"body":{"index.html":{}}}],["started",{"_index":708,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":454,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["status",{"_index":173,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["stdout",{"_index":519,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":167,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":772,"title":{},"body":{"index.html":{}}}],["sub",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":830,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":823,"title":{},"body":{"license.html":{}}}],["subscriptions",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["substantial",{"_index":837,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":186,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["super",{"_index":451,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["supertest",{"_index":765,"title":{},"body":{"index.html":{}}}],["support",{"_index":864,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":865,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":304,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["tabwidth",{"_index":556,"title":{},"body":{"injectables/PrismaService.html":{}}}],["taken",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["tear",{"_index":579,"title":{},"body":{"injectables/PrismaService.html":{}}}],["technical",{"_index":728,"title":{},"body":{"index.html":{}}}],["test",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["test').default('dev",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["test:covlicense",{"_index":795,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":794,"title":{},"body":{"index.html":{}}}],["testing",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["tests",{"_index":763,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":572,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$executerawunsafe(\"set",{"_index":573,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":576,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('query",{"_index":541,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction",{"_index":578,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethealth",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authcontroller.signin(dto",{"_index":333,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authcontroller.signup(dto",{"_index":331,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.signin(dto",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get('jwt_secret",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.jwt.signasync(payload",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma",{"_index":182,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["this.prisma.user.create",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.delete",{"_index":642,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.prisma.user.update",{"_index":640,"title":{},"body":{"injectables/UserService.html":{}}}],["this.signtoken(user.id",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.deletemany",{"_index":582,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.userservice.deleteuser(userid",{"_index":629,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituser(userid",{"_index":626,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["throws",{"_index":478,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["time",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["timezone",{"_index":574,"title":{},"body":{"injectables/PrismaService.html":{}}}],["todo",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["token.access_token",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenfield",{"_index":485,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":759,"title":{},"body":{"index.html":{}}}],["tools",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":715,"title":{},"body":{"index.html":{}}}],["tort",{"_index":859,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":745,"title":{},"body":{"index.html":{}}}],["transferring",{"_index":748,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["transformers",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["transport",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["try",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":539,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["type",{"_index":160,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":884,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typepaths",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Flags.html":{}}}],["types",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":714,"title":{},"body":{"index.html":{}}}],["typings.ts",{"_index":401,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":762,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["up",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["updatedat",{"_index":297,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["upper",{"_index":559,"title":{},"body":{"injectables/PrismaService.html":{}}}],["url",{"_index":535,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["useguards",{"_index":610,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":617,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete",{"_index":600,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get('me",{"_index":606,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@patch",{"_index":603,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":354,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user.controller",{"_index":634,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":387,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":393,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:14",{"_index":394,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:6",{"_index":391,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.email",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.hash",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":615,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":593,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":61,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":595,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":614,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":713,"title":{},"body":{"index.html":{}}}],["utility",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":456,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":462,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":743,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":286,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":424,"title":{},"body":{"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":887,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":789,"title":{},"body":{"index.html":{}}}],["version",{"_index":872,"title":{},"body":{"properties.html":{}}}],["w",{"_index":402,"title":{},"body":{"interfaces/Flags.html":{}}}],["walletid",{"_index":441,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["ware",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["warn",{"_index":520,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":844,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":840,"title":{},"body":{"license.html":{}}}],["watch",{"_index":403,"title":{},"body":{"interfaces/Flags.html":{},"index.html":{}}}],["web2",{"_index":874,"title":{},"body":{"properties.html":{}}}],["whatever",{"_index":481,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whether",{"_index":856,"title":{},"body":{"license.html":{}}}],["whitelist:true",{"_index":625,"title":{},"body":{"controllers/UserController.html":{}}}],["without",{"_index":814,"title":{},"body":{"license.html":{}}}],["work",{"_index":524,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ws",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHealth\n                            \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheTTL(undefined)@Get('health')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@CacheKey('home')@CacheTTL(Number.MAX_SAFE_INTEGER)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { CacheInterceptor, CacheKey, CacheTTL } from '@nestjs/cache-manager'\n\n@Controller()\n@UseInterceptors(CacheInterceptor)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @CacheKey('home')\n  @CacheTTL(Number.MAX_SAFE_INTEGER) //default is just 1 sec\n  getHello() {\n    return this.appService.getHello()\n  }\n\n  @CacheTTL(5 * 1000)\n  @Get('health')\n  getHealth() {\n    return this.appService.getHealth()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { ConfigModule } from '@nestjs/config'\nimport { AuthModule } from './auth/auth.module'\nimport Joi from 'joi'\nimport { CacheModule } from '@nestjs/cache-manager'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { ApolloServerPluginLandingPageGraphQLPlayground } from '@apollo/server-plugin-landing-page-graphql-playground'\nimport { GraphQLDateTime } from 'graphql-iso-date'\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'\nimport { AppController } from './app.controller'\nimport { GraphqlContext } from './app.dto'\nimport { UserModule } from './user/user.module'\nimport { PrismaModule } from './prisma/prisma.module'\n\nlet mode = process.env.MODE\nlet envFile = '.env'\n\nswitch (mode) {\n  case 'test':\n    envFile = '.env.test'\n    process.env.NODE_ENV = 'testing'\n    break\n  case 'prod':\n    process.env.NODE_ENV = 'production'\n    envFile = '.env.prod'\n    break\n  default:\n    mode = 'dev'\n    process.env.NODE_ENV = 'development'\n    envFile = '.env.local'\n}\n\nconsole.debug({ mode, envFile })\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [envFile, '.env'],\n      isGlobal: true,\n      cache: true,\n      validationSchema: Joi.object({\n        MODE: Joi.string().valid('dev', 'prod', 'test').default('dev'),\n        PORT: Joi.number().default(3000),\n        DATABASE_URL: Joi.string(),\n        JWT_SECRET: Joi.string().default('Hiro@JWT#TOKEN$'),\n        JWT_MAX_AGE: Joi.number().default(2 * 60 * 60 * 1000),\n      }),\n    }),\n    CacheModule.register({ isGlobal: true }),\n    GraphQLModule.forRoot({\n      context: ({ req, res }: GraphqlContext) => ({ req, res }), //required for cookies\n\n      fieldResolverEnhancers: ['interceptors'], //FIXME:unsure\n\n      autoSchemaFile: false, // schema-first\n      playground: false,\n      driver: ApolloDriver,\n      plugins: [ApolloServerPluginLandingPageGraphQLPlayground()],\n      typePaths: ['./**/*.graphql'],\n      resolvers: { DateTime: GraphQLDateTime },\n      subscriptions: {\n        'graphql-ws': true,\n        'subscriptions-transport-ws': true,\n      },\n    }),\n    PrismaModule,\n    AuthModule,\n    UserModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHealth\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Res } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { AuthDto } from './dto'\nimport { Response } from 'express'\nimport { ConfigService } from '@nestjs/config'\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService, private config: ConfigService) {}\n\n  @Post('signup')\n  signup(@Body() dto: AuthDto) {\n    return this.authService.signup(dto)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signin(@Body() dto: AuthDto, @Res() res: Response) {\n    const token = await this.authService.signin(dto)\n\n    /*    res.cookie('user', dto.email, { //TODO:\n      // Set cookie options here (e.g., expiration, domain, path, etc.)\n      maxAge: 3600000, // Cookie expiration time in milliseconds (1 hour)\n      httpOnly: true, // Cookie accessible only through HTTP(S) requests\n      secure: true, // Cookie sent only over HTTPS if true\n      signed: true,\n    })*/\n    // const cookies = req.cookies; //TODO: middle ware to clear the cookies when signin\n    // TODO: utility function to clear and set cookie\n    // for (let cookieName in cookies) {\n    //   res.clearCookie(cookieName); // Replace '.your-domain.com' with your actual domain\n    // }\n    res.clearCookie('token')\n    res.cookie('token', token.access_token, {\n      maxAge: this.config.get('JWT_SECRET') * 1000 || 60 * 60 * 1000,\n      secure: true,\n      httpOnly: true,\n      // signed: true,\n    })\n\n    res.send(token)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsStrongPassword } from 'class-validator'\n\nexport class AuthDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string\n\n  @IsStrongPassword()\n  @IsNotEmpty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInput.html":{"url":"classes/AuthInput.html","title":"class - AuthInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PrismaModule } from '../prisma/prisma.module'\nimport { JwtStrategy } from './strategy'\n\n@Module({\n  imports: [JwtModule.register({}), PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPayload.html":{"url":"classes/AuthPayload.html","title":"class - AuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authController: AuthController)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authController\n                                                  \n                                                        \n                                                                        AuthController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(dto: AuthDto, ctx: GraphqlContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signIn')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n                                    \n                                                GraphqlContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signUp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql'\nimport { AuthService } from './auth.service'\nimport { AuthController } from './auth.controller'\nimport { GraphqlContext } from '../app.dto'\nimport { AuthDto } from './dto'\nimport { AuthInput } from '../graphql'\n\n@Resolver('Auth')\nexport class AuthResolver {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authController: AuthController,\n  ) {}\n\n  @Mutation('signUp')\n  signUp(@Args('data') dto: AuthDto) {\n    console.debug({ dto })\n\n    return this.authController.signup(dto as AuthInput)\n  }\n\n  @Mutation('signIn')\n  signIn(@Args('data') dto: AuthDto, @Context() ctx: GraphqlContext) {\n    console.debug({ dto })\n\n    return this.authController.signin(dto as AuthInput, ctx.res)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userId: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { AuthDto } from './dto'\n\nimport argon from 'argon2'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwt: JwtService,\n    private config: ConfigService,\n  ) {}\n\n  async signup(dto: AuthDto) {\n    const hash = await argon.hash(dto.password)\n\n    try {\n      const user = await this.prisma.user.create({\n        data: {\n          email: dto.email,\n          hash: hash,\n        },\n        select: {\n          //FIXME: use transformers\n          id: true,\n          email: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      return user\n    } catch (error) {\n      console.error({\n        code: error.code,\n        error,\n      })\n      if (\n        error instanceof PrismaClientKnownRequestError ||\n        PrismaClientUnknownRequestError\n      ) {\n        if (error.code == 'P2002') {\n          throw new ForbiddenException('credentials taken')\n        }\n      }\n      throw error\n    }\n  }\n\n  async signin(dto: AuthDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email: dto.email,\n      },\n    })\n\n    if (!user) throw new ForbiddenException('incorrect credentials')\n\n    const pwMatches = await argon.verify(user.hash, dto.password)\n\n    if (!pwMatches) throw new ForbiddenException('invalid credentials')\n\n    return this.signToken(user.id, user.email)\n  }\n\n  async signToken(userId: number, email: string) {\n    const payload = {\n      sub: userId,\n      email,\n    }\n    const secret = this.config.get('JWT_SECRET')\n\n    return {\n      access_token: await this.jwt.signAsync(payload, {\n        expiresIn: '1hr', //TODO:\n        secret: secret,\n      }),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserDto.html":{"url":"classes/EditUserDto.html","title":"class - EditUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/edit-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator'\n\nexport class EditUserDto {\n  @IsEmail()\n  @IsOptional()\n  email?: string\n\n  @IsString()\n  @IsOptional()\n  firstName?: string\n\n  @IsString()\n  @IsOptional()\n  lastName?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Flags.html":{"url":"interfaces/Flags.html","title":"interface - Flags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Flags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generate-typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            w\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        w\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        w:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDefinitionsFactory } from '@nestjs/graphql'\nimport { join } from 'path'\n\ninterface Flags {\n  watch?: boolean\n  w?: boolean\n}\n\n// Function to extract flags from the arguments array\nfunction extractFlags(args) {\n  const flags: Flags = {}\n  let currentFlag = null\n\n  for (const arg of args) {\n    if (arg.startsWith('--')) {\n      // Long flag (e.g., --watch)\n      const flagName = arg.slice(2)\n      flags[flagName] = true\n      currentFlag = flagName\n    } else if (arg.startsWith('-')) {\n      // Short flag (e.g., -w)\n      const flagKeys = arg.slice(1).split('')\n      flagKeys.forEach((key) => {\n        flags[key] = true\n      })\n      currentFlag = arg.slice(-1)\n    } else if (currentFlag) {\n      // Flag value (e.g., --name John)\n      flags[currentFlag] = arg\n      currentFlag = null\n    }\n  }\n\n  return flags\n}\n\nconst args = process.argv.slice(2)\nconst flags: Flags = extractFlags(args)\n\nconsole.log('Flags:', flags)\n\nconst definitionsFactory = new GraphQLDefinitionsFactory()\ndefinitionsFactory.generate({\n  typePaths: ['./src/**/*.graphql'],\n  path: join(process.cwd(), 'src/graphql.ts'),\n  outputAs: 'class',\n  watch: flags.watch || flags.w,\n})\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphqlContext.html":{"url":"classes/GraphqlContext.html","title":"class - GraphqlContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphqlContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                req\n                            \n                            \n                                res\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        req\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RequestWithUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Response\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IMutation.html":{"url":"classes/IMutation.html","title":"class - IMutation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IMutation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SignUpPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtGuard.html":{"url":"classes/JwtGuard.html","title":"class - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport'\n\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtConstants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                extractJWTFromCookie\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        extractJWTFromCookie\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractJWTFromCookie(req: RequestType)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            RequestType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { userId: number; email: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { ConfigService } from '@nestjs/config'\nimport { PrismaService } from '../../prisma/prisma.service'\nimport { Request as RequestType } from 'express'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  private jwtConstants: any\n\n  constructor(private config: ConfigService, private prisma: PrismaService) {\n    const mode = config.get('MODE') || 'dev'\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        JwtStrategy.extractJWTFromCookie,\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ]),\n      ignoreExpiration: mode == 'dev' || mode == 'test',\n      secretOrKey: config.get('JWT_SECRET'),\n    })\n  }\n\n  validate(payload: { sub: number; email: string }) {\n    const user = this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    })\n    if (!user) return null //throws the 401 error\n\n    return { userId: payload.sub, email: payload.email }\n    // whatever is returned is appended to req.user\n  }\n  private static extractJWTFromCookie(req: RequestType): string | null {\n    const tokenField = 'token'\n    console.debug(req.cookies)\n    if (req.cookies && tokenField in req.cookies && req.cookies[tokenField].length > 0) {\n      console.log('extracted cookie')\n      return req.cookies.token\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common'\nimport { PrismaService } from './prisma.service'\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDb\n                            \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDb\n                        \n                    \n                \n            \n            \n                \ncleanDb()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common'\nimport { Prisma, PrismaClient } from '@prisma/client'\nimport { ConfigService } from '@nestjs/config'\nimport kleur from 'kleur'\nimport { format } from 'sql-formatter'\n\nconst logEvents: Prisma.LogDefinition[] = [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n\nlet DB_CONNECTED = false\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  // FIXME doesn't work for e2e OnModuleDestroy{\n  // https://docs.nestjs.com/fundamentals/lifecycle-events\n\n  constructor(config: ConfigService) {\n    const sslcert = '?sslcert=root.crt'\n    //https://www.prisma.io/docs/concepts/database-connectors/postgresql#configuring-an-ssl-connection\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL') + sslcert,\n        },\n      },\n      log: logEvents,\n    })\n\n    process.env.FORCE_COLOR = 'true'\n\n    // @ts-ignore\n    this.$on('query', async (e: any) => {\n      if (config.get('MODE') != 'dev') {\n        return\n      }\n\n      // const chalk = await import('chalk')\n      // console.log(chalk.yellow('Query: ') + chalk.green(e.query))\n      // console.log(chalk.yellow('Params: ') + chalk.cyan(JSON.stringify(e.params)))\n      // console.log(chalk.yellow('Duration: ') + chalk.magenta(`${e.duration}ms`))\n      const query = e.query\n\n      const formattedQuery = format(query, {\n        language: 'postgresql',\n        tabWidth: 2,\n        keywordCase: 'upper',\n        linesBetweenQueries: 2,\n        params: e.params || [],\n      })\n      console.log(kleur.yellow('Query: ') + kleur.green(formattedQuery))\n      console.log(kleur.yellow('Params: ') + kleur.cyan(JSON.stringify(e.params)))\n      console.log(kleur.yellow('Duration: ') + kleur.magenta(`${e.duration}ms`))\n    })\n  }\n  async onModuleInit() {\n    if (DB_CONNECTED) return\n\n    console.info(new Date(), 'connecting to the database')\n    await this.$connect()\n    await this.$executeRawUnsafe(\"SET timezone = 'Asia/Kolkata'\")\n\n    DB_CONNECTED = true\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    // @ts-ignore\n    this.$on('beforeExit', async () => {\n      await app.close()\n    })\n  }\n\n  cleanDb() {\n    return this.$transaction([\n      //tear down logic\n      this.user.deleteMany(),\n    ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestWithUser.html":{"url":"classes/RequestWithUser.html","title":"class - RequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceStatus.html":{"url":"classes/ServiceStatus.html","title":"class - ServiceStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ok: boolean, status: string, debug: any)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ok\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        debug\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OK'\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpPayload.html":{"url":"classes/SignUpPayload.html","title":"class - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            walletId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        walletId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                editUser\n                            \n                            \n                                    \n                                    \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Patch()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Patch, UseGuards } from '@nestjs/common'\nimport { JwtGuard } from '../auth/guard'\nimport { GetUser } from '../auth/decorator'\nimport { User } from '@prisma/client'\nimport { EditUserDto } from './dto'\nimport { UserService } from './user.service'\n\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtGuard)\n  @Get('me')\n  getMe(@GetUser() user: User) {\n    return user\n  }\n\n  @UseGuards(JwtGuard)\n  @Patch()\n  editUser(@GetUser('userId') userId: number, @Body() dto: EditUserDto) {\n    //needs service\n    // we will get something in api request due to whitelist:true\n    return this.userService.editUser(userId, dto)\n  }\n\n  @UseGuards(JwtGuard)\n  @Delete()\n  async deleteUser(@GetUser('userId') userId: number) {\n    return {\n      message: 'user deleted',\n      user: await this.userService.deleteUser(userId),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserController } from './user.controller'\nimport { UserService } from './user.service'\nimport { AuthModule } from '../auth/auth.module'\nimport { PrismaModule } from '../prisma/prisma.module'\n\n@Module({\n  imports: [AuthModule, PrismaModule],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { EditUserDto } from './dto'\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  async editUser(userId: number, dto: EditUserDto) {\n    console.log({ userId, dto })\n    const user = await this.prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: {\n        ...dto,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n\n  async deleteUser(userId: number) {\n    const user = await this.prisma.user.delete({\n      where: {\n        id: userId,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            GraphqlContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            RequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            class\n            ServiceStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            class\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            interface\n            Flags\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            function\n            extractFlags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            args\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            definitionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            flags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IMutation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            SignUpPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            DB_CONNECTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            logEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/edit-user.dto.ts\n            \n            class\n            EditUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.7.5\n        \n            @nestjs/apollo : ^12.0.7\n        \n            @nestjs/cache-manager : ^2.0.1\n        \n            @nestjs/common : ^10.0.5\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.5\n        \n            @nestjs/graphql : ^12.0.8\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.5\n        \n            @solana/web3.js : ^1.78.0\n        \n            argon2 : ^0.30.3\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            graphql : 16.7.1\n        \n            graphql-iso-date : ^3.6.1\n        \n            graphql-subscriptions : 2.0.0\n        \n            graphql-tools : ^9.0.0\n        \n            joi : ^17.9.2\n        \n            kleur : ^4.1.5\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-nestjs-graphql : ^18.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : 7.8.1\n        \n            sql-formatter : ^12.2.3\n        \n            ts-morph : ^19.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            extractFlags   (src/.../generate-typings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractFlags\n                        \n                    \n                \n            \n            \n                \nextractFlags(args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\napi.bookstore.nas\nDescription\nAPI Server built using , TypeScript, Prisma, Graphql and PostgreSQL.\nBuilt with ❤️on top of\n\n Typescript\n NestJS\n Prisma\n Passport.js\n Graphql:Schema First\n PostgreSQL\n\nFunctional specs\nAPI allows authenticated to users to create and manage orders\n\nUser SignUp & SignIn\nCRUD Orders\nInspect Items\n\nTechnical methodologies followed\n\nModular architecture: Business Logic & Auth handled in separate modules, separating\nconcerns.\nHTTP requests are handled by Controllers\n API documentation using nest/swagger module \nBusiness logic is implemented in Services\nDatabase interactions are handled using Prisma\nValidation using NestJS Pipes\nData Transfer Object(DTO) pattern for transferring data between layers\nConfiguration management using .env files for development, test & prod configs\nAuthentication / Authorization, Event ownership by users\nPassportJS, JWT tokens, Password hashing, salts\nUnit tests using Jest\nSupertest for E2E testing\n\nTechnical documentation using Compodoc\nAs NestJS is heavily inspired by Angular, we can generate the documentation about project\nstructure modules, controllers, services etc. I have generated the docs.\nFind 'em here - https://jsFame.github.io/api.bookstore.nas/\nInstallation\nnpm install -g pnpm\npnpm installRunning the app\nPrerequisite for running the app in any mode - dev/test/prod\n\nCopy .env.example with .env\nFill in the env vars in .env\n\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covLicense\nThis repo is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Hiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : Web2 backend of bookstore.nas\n        \n            Homepage : https://github.com/jsFame/api.bookstore.nas\n        \n            Bugs : https://github.com/jsFame/api.bookstore.nas/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/jsFame/api.bookstore.nas\n        \n            Author : laciferin@gmail.com\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateTime   (src/.../graphql.ts)\n                        \n                        \n                            Nullable   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            args   (src/.../generate-typings.ts)\n                        \n                        \n                            DB_CONNECTED   (src/.../prisma.service.ts)\n                        \n                        \n                            definitionsFactory   (src/.../generate-typings.ts)\n                        \n                        \n                            envFile   (src/.../app.module.ts)\n                        \n                        \n                            flags   (src/.../generate-typings.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            logEvents   (src/.../prisma.service.ts)\n                        \n                        \n                            mode   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        args\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.argv.slice(2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        definitionsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLDefinitionsFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Flags\n\n                    \n                \n                \n                    \n                        Default value : extractFlags(args)\n                    \n                \n\n\n        \n    \n\n    src/prisma/prisma.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.LogDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.env'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MODE\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest()\n\n    if (data) return request.user[data]\n\n    return request.user\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
