var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.629,1,2.16]],["body/controllers/AppController.html",[0,2.348,1,3.113,2,1.638,3,0.348,4,0.391,5,0.348,6,3.026,7,0.437,8,1.845,9,4.153,10,4.153,11,2.562,12,0.029,13,3.606,14,0.918,15,3.606,16,1.845,17,3.606,18,3.606,19,0.864,20,3.606,21,1.032,22,2.628,23,3.026,24,3.606,25,3.606,26,3.606,27,2.644,28,2.644,29,3.606,30,0.437,31,0.071,32,1.78,33,2.359,34,3.606,35,3.606,36,2.359,37,2.644,38,3.606,39,1.584,40,3.606,41,3.606,42,2.644,43,3.606,44,3.606,45,0.021,46,0.021]],["title/modules/AppModule.html",[47,1.28,48,2.16]],["body/modules/AppModule.html",[1,2.582,2,1.472,3,0.203,4,0.229,5,0.203,12,0.029,19,0.973,21,0.603,22,2.49,23,1.77,27,1.547,28,1.547,30,0.392,31,0.064,36,1.38,42,1.547,45,0.014,46,0.014,47,1.53,48,3.883,49,0.958,50,1.041,51,1.247,52,1.247,53,1.041,54,2.333,55,1.247,56,1.77,57,1.77,58,1.77,59,2.717,60,2.49,61,2.982,62,1.916,63,1.247,64,1.136,65,1.547,66,2.377,67,2.109,68,1.136,69,1.77,70,2.72,71,2.109,72,2.109,73,1.38,74,3.24,75,1.77,76,2.109,77,2.109,78,2.109,79,3.127,80,3.24,81,3.24,82,1.77,83,1.547,84,3.24,85,2.109,86,1.77,87,2.109,88,1.599,89,1.77,90,2.109,91,1.547,92,2.825,93,1.77,94,3.7,95,2.377,96,2.109,97,3.24,98,1.547,99,2.109,100,3.946,101,1.77,102,3.24,103,2.72,104,1.77,105,2.109,106,1.547,107,1.77,108,2.109,109,1.77,110,2.109,111,2.109,112,3.24,113,2.359,114,1.77,115,2.109,116,2.109,117,2.109,118,2.109,119,2.109,120,2.109,121,2.109,122,2.109,123,2.109,124,2.109,125,2.109,126,2.109,127,2.72,128,2.109,129,2.109,130,1.77,131,1.916,132,1.916,133,2.109,134,1.77,135,2.109,136,2.109,137,2.109,138,2.109,139,1.916,140,2.109,141,1.77,142,2.109,143,2.109,144,1.77,145,2.109,146,1.136,147,2.72,148,3.24,149,2.109,150,1.77,151,2.109,152,2.109,153,2.109,154,2.109,155,2.109,156,2.109,157,1.547,158,2.109,159,2.109]],["title/injectables/AppService.html",[22,1.629,160,1.099]],["body/injectables/AppService.html",[3,0.281,4,0.316,5,0.281,7,0.353,8,1.596,9,3.8,10,3.8,12,0.03,14,0.92,16,1.596,19,0.667,21,0.834,22,2.031,30,0.353,31,0.081,32,1.439,33,1.908,39,1.37,45,0.018,46,0.018,113,1.439,139,1.724,160,1.37,161,1.57,162,2.138,163,2.354,164,1.869,165,2.138,166,2.009,167,2.916,168,1.047,169,0.971,170,0.431,171,0.9,172,2.166,173,2.916,174,1.908,175,2.916,176,3.018,177,1.478,178,1.724,179,3.121,180,4.003,181,3.454,182,2.138,183,2.447,184,2.447,185,2.138,186,2.693,187,2.447,188,2.138,189,3.454,190,2.217,191,1.439,192,2.447,193,2.447,194,2.447,195,2.447,196,2.447,197,2.447,198,2.138,199,2.693,200,3.454,201,2.138,202,3.454,203,2.447,204,2.447,205,2.447,206,2.138]],["title/controllers/AuthController.html",[0,1.629,207,1.951]],["body/controllers/AuthController.html",[0,1.159,2,1.067,3,0.226,4,0.255,5,0.226,7,0.284,8,1.363,11,1.894,12,0.03,14,0.678,16,1.363,19,0.813,21,0.672,30,0.284,31,0.046,32,1.159,37,1.722,39,0.782,42,2.579,45,0.015,46,0.015,68,1.265,113,2.691,127,2.951,132,2.962,134,3.537,157,1.722,163,2.08,168,1.263,169,1.17,170,0.52,171,1.085,191,1.159,207,2.079,208,1.971,209,1.971,210,1.971,211,2.491,212,2.079,213,1.722,214,2.936,215,3.062,216,2.349,217,2.349,218,2.962,219,1.722,220,3.516,221,2.349,222,1.971,223,2.349,224,2.349,225,2.349,226,2.08,227,1.722,228,1.159,229,2.301,230,2.349,231,1.537,232,1.537,233,2.349,234,2.349,235,2.349,236,2.349,237,2.349,238,1.736,239,1.971,240,2.349,241,2.349,242,1.971,243,3.537,244,3.516,245,3.675,246,2.349,247,1.971,248,1.971,249,3.516,250,3.516,251,1.971,252,3.516,253,2.349,254,2.349,255,2.349,256,2.349,257,3.516,258,2.349,259,2.349,260,2.349,261,1.971,262,3.516,263,2.349,264,2.349,265,2.349,266,3.516,267,1.971,268,2.349,269,2.349,270,3.516,271,2.349,272,1.722,273,2.349,274,2.349,275,2.349,276,2.349,277,2.349,278,2.349,279,2.349,280,2.349,281,1.971,282,2.349]],["title/classes/AuthDto.html",[31,0.065,214,1.778]],["body/classes/AuthDto.html",[3,0.392,4,0.441,5,0.392,7,0.492,11,2.768,12,0.029,14,0.991,19,0.659,30,0.492,31,0.102,45,0.023,46,0.023,170,0.76,177,2.127,214,2.768,283,1.352,284,3.409,285,1.586,286,2.56,287,3.036,288,4.062,289,4.062,290,4.062,291,4.062,292,4.313,293,5.637,294,5.139,295,2.979]],["title/classes/AuthInput.html",[31,0.065,296,1.629]],["body/classes/AuthInput.html",[3,0.346,4,0.39,5,0.346,7,0.435,12,0.029,14,0.915,30,0.712,31,0.112,45,0.021,46,0.021,146,2.862,170,0.836,177,2.168,283,1.195,285,1.465,286,2.568,287,2.862,296,2.791,297,1.773,298,3.592,299,3.592,300,2.556,301,2.123,302,2.556,303,1.773,304,1.29,305,2.123,306,2.123,307,3.477,308,1.934,309,2.35,310,3.105,311,2.35,312,2.123,313,2.123,314,1.773]],["title/modules/AuthModule.html",[47,1.28,59,1.778]],["body/modules/AuthModule.html",[2,2.097,3,0.332,4,0.374,5,0.332,12,0.029,19,0.968,21,0.986,30,0.417,31,0.068,45,0.02,46,0.02,47,2.018,49,1.565,50,1.7,51,2.037,52,2.037,53,1.7,54,3.077,55,2.037,59,3.414,60,2.946,62,2.729,63,2.037,64,1.856,66,3.385,91,2.527,207,3.077,226,2.946,227,2.527,315,2.891,316,3.445,317,2.891,318,3.528,319,3.445,320,2.891,321,3.445,322,2.527,323,2.891,324,3.445]],["title/classes/AuthPayload.html",[31,0.065,300,1.778]],["body/classes/AuthPayload.html",[3,0.356,4,0.401,5,0.356,7,0.447,12,0.029,14,0.712,30,0.718,31,0.113,45,0.021,46,0.021,146,2.901,170,0.797,177,2.13,283,1.229,285,1.491,286,2.195,287,1.988,296,2.659,297,1.822,300,2.901,301,3.184,302,2.602,303,1.822,304,1.326,305,2.182,306,2.182,307,3.524,308,1.988,309,2.415,310,3.161,311,2.415,312,2.182,313,2.182,314,1.822,325,3.691]],["title/classes/AuthResolver.html",[31,0.065,326,2.421]],["body/classes/AuthResolver.html",[3,0.291,4,0.328,5,0.291,7,0.366,8,1.635,11,2.272,12,0.029,14,0.938,16,1.635,19,0.93,30,0.366,31,0.06,33,2.76,39,1.404,45,0.019,46,0.019,73,1.976,79,1.976,88,2.597,89,2.535,109,2.535,130,3.54,164,1.916,168,1.745,169,1.618,170,0.719,171,1.5,207,3.48,211,2.494,212,2.494,213,2.215,214,3.17,218,3.39,219,2.215,226,2.831,227,2.215,231,2.76,283,1.005,296,2.399,320,2.535,326,3.093,327,2.535,328,3.02,329,3.02,330,4.08,331,4.218,332,3.02,333,4.218,334,3.02,335,1.785,336,3.02,337,3.02,338,3.02,339,3.02,340,3.02,341,3.02,342,3.02,343,3.02,344,3.02]],["title/injectables/AuthService.html",[160,1.099,226,1.629]],["body/injectables/AuthService.html",[3,0.197,4,0.221,5,0.197,7,0.247,8,1.224,12,0.03,14,0.839,16,1.498,19,0.842,21,0.584,30,0.247,31,0.04,39,1.286,45,0.014,46,0.014,68,1.099,113,2.147,160,1.051,161,1.099,163,2.718,164,1.434,165,1.496,166,1.687,168,1.562,169,1.448,170,0.643,171,1.343,172,1.434,174,2.528,177,1.388,178,1.206,190,2.081,191,2.323,198,1.496,211,1.867,212,1.867,213,2.316,214,2.796,218,2.284,219,2.316,226,1.559,229,2.847,231,2.528,232,2.528,238,2.457,242,2.65,243,1.712,281,1.712,286,2.358,301,1.206,303,1.007,304,1.388,305,1.206,306,1.206,322,1.496,345,1.712,346,3.158,347,2.528,348,4.351,349,2.04,350,2.04,351,3.158,352,2.04,353,2.066,354,2.04,355,2.04,356,2.04,357,1.712,358,3.158,359,3.158,360,2.04,361,3.864,362,2.04,363,2.04,364,1.687,365,2.04,366,1.206,367,2.04,368,1.712,369,1.712,370,2.04,371,2.04,372,2.847,373,2.04,374,3.158,375,2.04,376,2.04,377,4.351,378,2.04,379,2.04,380,1.712,381,2.04,382,3.158,383,3.158,384,2.04,385,2.04,386,2.04,387,2.04,388,2.04,389,1.712,390,1.712,391,3.864,392,2.04,393,2.04,394,2.04]],["title/classes/EditUserDto.html",[31,0.065,395,1.951]],["body/classes/EditUserDto.html",[3,0.357,4,0.402,5,0.357,7,0.449,11,2.907,12,0.028,14,1.041,19,0.601,30,0.449,31,0.096,45,0.021,46,0.021,170,0.798,171,1.88,177,2.187,283,1.234,285,1.495,286,2.451,292,4.066,295,2.718,395,2.864,396,4.803,397,3.11,398,5.397,399,5.397,400,3.706,401,3.706,402,4.844,403,3.706,404,3.706,405,5.723,406,5.397]],["title/interfaces/Flags.html",[407,1.629,408,2.16]],["body/interfaces/Flags.html",[3,0.266,4,0.299,5,0.266,7,0.334,12,0.03,19,0.642,31,0.055,37,2.024,39,0.919,45,0.017,46,0.017,73,1.806,113,1.953,144,2.316,157,2.903,169,0.919,170,0.585,171,1.56,182,4.084,190,1.487,238,2.831,248,3.883,272,2.903,285,1.221,297,1.362,314,1.953,335,2.34,407,1.362,408,3.909,409,2.024,410,1.806,411,1.806,412,5.351,413,4.674,414,3.322,415,2.76,416,2.76,417,2.76,418,2.76,419,2.903,420,5.351,421,3.958,422,3.958,423,2.76,424,4.627,425,3.958,426,2.76,427,2.76,428,2.76,429,2.76,430,2.76,431,2.76,432,2.76,433,2.76,434,2.024,435,2.76,436,2.76,437,2.316,438,2.76,439,2.024,440,2.76,441,2.76,442,2.76,443,2.76,444,2.76,445,2.76]],["title/classes/GraphqlContext.html",[31,0.065,88,1.629]],["body/classes/GraphqlContext.html",[3,0.387,4,0.435,5,0.387,7,0.486,12,0.029,14,0.983,19,0.65,30,0.617,31,0.101,45,0.022,46,0.022,88,2.516,131,3.312,132,3.312,170,0.754,215,3.666,228,1.979,283,1.335,285,1.573,304,1.44,364,2.172,407,1.979,446,2.624,447,3.312,448,4.01,449,4.01,450,2.745,451,2.941,452,2.16]],["title/classes/IMutation.html",[31,0.065,308,1.778]],["body/classes/IMutation.html",[3,0.315,4,0.354,5,0.315,7,0.395,8,1.725,12,0.029,14,0.859,16,1.725,30,0.689,31,0.108,45,0.02,46,0.02,146,2.727,168,1.598,169,1.481,170,0.804,171,1.373,177,1.953,211,2.631,212,2.631,283,1.086,286,2.021,287,1.758,296,2.967,297,1.611,300,2.727,301,1.929,302,2.727,303,1.611,304,1.172,305,1.929,306,1.929,307,3.933,308,2.397,309,2.912,310,3.559,311,2.912,312,1.929,313,1.929,314,1.611,366,2.631,453,3.264,454,3.264]],["title/classes/JwtGuard.html",[31,0.065,455,2.16]],["body/classes/JwtGuard.html",[3,0.437,4,0.492,5,0.437,12,0.029,14,0.876,19,0.736,30,0.55,31,0.09,45,0.024,46,0.024,164,2.691,283,1.511,452,2.444,455,3.601,456,3.809,457,4.538,458,4.538,459,3.328,460,4.538,461,3.328]],["title/injectables/JwtStrategy.html",[160,1.099,318,1.951]],["body/injectables/JwtStrategy.html",[3,0.224,4,0.252,5,0.224,7,0.282,8,1.353,12,0.03,14,0.898,16,1.353,19,0.85,21,0.665,30,0.282,31,0.046,32,1.148,39,1.55,45,0.015,46,0.015,68,1.252,92,2.477,98,1.705,106,2.559,131,1.375,160,1.162,161,1.252,164,1.056,166,1.805,168,1.504,169,1.394,170,0.775,171,1.293,172,1.903,177,1.672,178,1.375,228,1.148,229,3.046,231,3.555,232,2.283,238,2.068,239,1.951,245,1.705,267,2.929,285,1.077,286,1.903,303,1.148,304,1.253,314,2.298,318,2.063,323,1.951,347,2.283,353,2.283,364,1.353,372,1.521,380,1.951,389,1.951,390,1.951,450,1.252,452,1.252,459,1.705,461,1.705,462,1.951,463,4.189,464,4.189,465,3.49,466,3.49,467,1.951,468,3.49,469,3.49,470,4.656,471,2.325,472,3.49,473,3.49,474,2.325,475,2.325,476,2.325,477,1.951,478,2.325,479,1.951,480,2.325,481,2.325,482,2.325,483,2.325,484,2.325,485,2.325,486,2.325,487,3.49,488,2.325,489,2.325,490,2.325,491,2.325,492,2.325,493,2.325,494,2.325,495,3.49,496,2.325,497,2.325,498,1.951,499,2.325,500,2.325]],["title/modules/PrismaModule.html",[47,1.28,60,1.629]],["body/modules/PrismaModule.html",[3,0.382,4,0.43,5,0.382,12,0.027,19,0.82,21,1.133,30,0.479,31,0.078,45,0.022,46,0.022,47,2.159,49,1.798,50,1.954,51,2.34,52,2.34,53,1.954,54,3.292,55,3.292,60,3.11,62,2.988,63,2.34,64,2.132,166,2.548,501,3.322,502,3.322,503,3.322,504,3.959,505,5.055,506,3.959]],["title/injectables/PrismaService.html",[160,1.099,166,1.28]],["body/injectables/PrismaService.html",[3,0.303,4,0.22,5,0.195,7,0.245,8,1.218,12,0.03,14,0.836,16,1.492,19,0.761,21,0.58,30,0.245,31,0.04,39,1.281,45,0.014,46,0.014,68,1.091,83,1.486,106,1.486,113,1.551,139,1.198,150,1.701,160,1.046,161,1.091,163,2.642,164,0.92,166,1.218,168,1.128,169,1.046,170,0.465,171,0.97,172,0.92,186,1.326,191,2.14,199,1.326,206,1.486,229,2.837,232,1.326,238,2.316,368,1.701,372,1.326,452,1.692,461,1.486,467,2.637,479,1.701,507,1.486,508,3.848,509,4.336,510,3.142,511,4.964,512,2.026,513,2.026,514,3.142,515,4.336,516,2.026,517,2.026,518,1.701,519,2.637,520,2.026,521,1.701,522,1.701,523,2.304,524,1.701,525,3.639,526,1.326,527,3.639,528,2.637,529,3.23,530,1.701,531,2.822,532,2.026,533,2.026,534,1.701,535,2.026,536,2.026,537,2.026,538,3.142,539,2.026,540,2.026,541,2.026,542,2.026,543,2.026,544,2.026,545,2.026,546,2.026,547,2.026,548,2.637,549,3.142,550,2.026,551,2.026,552,2.026,553,2.026,554,2.026,555,2.026,556,2.026,557,2.026,558,2.026,559,2.026,560,2.026,561,2.026,562,2.026,563,2.026,564,1.701,565,2.026,566,2.637,567,2.026,568,2.026,569,2.026,570,2.026,571,2.026,572,2.026,573,2.026,574,2.026,575,2.026,576,2.026,577,2.026,578,2.026,579,2.026,580,1.701,581,2.026,582,2.026,583,2.026,584,2.026,585,2.026,586,2.026,587,2.026,588,2.026,589,2.026,590,1.701,591,2.026]],["title/classes/RequestWithUser.html",[31,0.065,447,1.951]],["body/classes/RequestWithUser.html",[3,0.395,4,0.445,5,0.395,7,0.496,12,0.029,14,0.791,19,0.665,30,0.626,31,0.102,45,0.023,46,0.023,88,2.023,131,2.423,132,2.423,170,0.606,215,3.381,228,2.023,283,1.364,285,1.595,304,1.472,364,2.425,407,2.023,446,2.681,447,3.346,450,3.048,451,3.006,452,2.783,592,4.098]],["title/classes/ServiceStatus.html",[31,0.065,179,2.16]],["body/classes/ServiceStatus.html",[3,0.262,4,0.295,5,0.262,7,0.329,9,1.995,10,1.995,12,0.03,14,0.968,19,0.635,21,0.778,22,1.342,30,0.329,31,0.078,32,1.342,33,1.779,36,3.003,39,1.303,45,0.017,46,0.017,113,1.933,139,1.608,160,1.303,162,1.995,163,1.342,164,1.779,166,1.518,168,0.977,169,0.905,170,0.742,171,0.839,172,1.779,176,1.995,177,1.803,178,1.608,179,3.285,180,4.996,181,4.65,182,3.682,183,4.465,184,4.465,185,2.872,186,2.562,187,2.282,188,1.995,189,3.287,190,2.109,191,1.342,192,2.282,193,2.282,194,2.282,195,2.282,196,2.282,197,2.282,198,1.995,199,2.562,200,3.287,201,1.995,202,3.287,203,2.282,204,2.282,205,2.282,206,1.995,283,0.905,285,1.209,434,3.365,593,2.72,594,2.72,595,2.72,596,2.72,597,2.72]],["title/classes/SignUpPayload.html",[31,0.065,302,1.778]],["body/classes/SignUpPayload.html",[3,0.328,4,0.37,5,0.328,7,0.413,12,0.029,14,1.068,30,0.699,31,0.11,45,0.02,46,0.02,146,3.111,170,0.88,177,2.074,283,1.134,285,1.414,286,2.514,287,1.835,296,2.555,297,1.682,300,2.468,301,2.014,302,2.788,303,2.555,304,1.645,305,3.06,306,3.06,307,3.387,308,1.835,309,2.229,310,2.998,311,2.229,312,2.014,313,2.014,314,1.682,598,3.407,599,3.407,600,3.407,601,3.407]],["title/interfaces/User.html",[364,1.28,407,1.629]],["body/interfaces/User.html",[3,0.399,4,0.449,5,0.399,7,0.501,12,0.029,19,0.671,30,0.629,31,0.103,45,0.023,46,0.023,88,2.041,131,2.444,132,2.444,170,0.611,215,3.4,228,2.041,285,1.604,304,2.041,364,2.311,407,2.041,409,3.032,446,2.705,447,3.072,450,2.799,451,4.372,452,2.227]],["title/controllers/UserController.html",[0,1.629,602,2.16]],["body/controllers/UserController.html",[0,1.387,2,1.276,3,0.271,4,0.305,5,0.271,7,0.34,8,1.554,11,2.517,12,0.029,14,0.902,16,1.812,19,0.909,21,0.804,30,0.34,31,0.056,32,1.387,39,1.556,45,0.018,46,0.018,163,2.307,168,1.678,169,1.556,170,0.691,171,1.442,174,1.839,176,2.061,191,1.387,201,2.061,209,2.358,218,3.185,222,3.365,304,2.012,353,3.334,364,2.36,395,3.013,450,1.514,455,1.839,518,2.358,602,2.623,603,2.358,604,2.358,605,3.365,606,3.365,607,4.009,608,2.358,609,2.81,610,2.81,611,2.358,612,2.81,613,2.81,614,2.81,615,2.81,616,2.81,617,3.365,618,4.009,619,2.81,620,2.81,621,2.061,622,2.81,623,2.517,624,2.358,625,2.81,626,4.673,627,2.81,628,2.81,629,2.81,630,2.81,631,2.81,632,2.81,633,2.358,634,2.81,635,2.81,636,2.81,637,2.81,638,2.81]],["title/modules/UserModule.html",[47,1.28,61,1.951]],["body/modules/UserModule.html",[2,2.183,3,0.353,4,0.397,5,0.353,12,0.027,19,0.96,21,1.048,30,0.443,31,0.073,45,0.021,46,0.021,47,2.08,49,1.663,50,1.808,51,2.165,52,2.165,53,1.808,54,3.172,55,2.165,59,3.27,60,2.997,61,3.789,62,2.842,63,2.165,64,1.973,66,3.525,69,3.074,91,2.686,602,3.511,623,3.27,624,3.074,639,3.074,640,3.662,641,3.074,642,3.662,643,3.662]],["title/injectables/UserService.html",[160,1.099,623,1.778]],["body/injectables/UserService.html",[3,0.292,4,0.329,5,0.292,7,0.367,8,1.639,12,0.029,14,0.939,16,1.639,19,0.79,21,0.867,30,0.367,31,0.06,32,1.495,39,1.407,45,0.019,46,0.019,160,1.407,161,1.632,163,2.833,164,1.376,165,2.222,166,2.043,168,1.748,169,1.621,170,0.72,171,1.503,172,1.92,174,2.766,178,1.791,191,2.087,218,3.394,238,2.087,303,2.087,304,2.061,353,3.626,364,2.043,366,1.791,395,3.115,605,3.548,606,3.548,608,3.548,611,3.548,617,3.548,623,2.277,644,2.543,645,3.03,646,3.03,647,3.03,648,3.03,649,3.03,650,4.228,651,3.03]],["title/coverage.html",[652,3.289]],["body/coverage.html",[0,2.128,1,1.597,5,0.235,6,2.049,12,0.029,22,1.205,31,0.118,45,0.016,46,0.016,53,1.205,65,2.654,88,1.205,92,1.443,94,1.79,160,1.695,162,2.654,166,0.946,170,0.361,179,1.597,190,1.315,207,1.443,208,2.049,214,1.315,226,1.205,272,2.654,284,2.049,296,1.205,297,2.354,300,1.315,302,1.315,308,1.315,318,1.443,326,1.79,327,2.049,335,1.443,345,2.049,364,0.946,395,1.443,396,2.049,397,2.049,407,1.786,408,2.368,410,3.332,411,3.332,439,1.79,446,2.822,447,1.443,455,1.597,456,2.049,462,2.049,498,5.535,507,3.163,523,1.79,531,1.79,602,1.597,603,2.049,621,1.79,623,1.315,644,2.049,652,1.79,653,1.79,654,2.441,655,2.441,656,5.521,657,4.769,658,5.67,659,5.893,660,5.093,661,5.093,662,2.049,663,2.049,664,2.049,665,2.049,666,2.441,667,2.441]],["title/dependencies.html",[50,1.957,668,2.322]],["body/dependencies.html",[12,0.03,21,0.918,27,2.352,28,3.225,31,0.087,45,0.019,46,0.019,50,1.583,68,1.728,70,2.692,73,2.099,75,2.692,79,3.701,82,2.692,83,2.352,86,2.692,114,2.692,147,2.692,172,1.457,228,1.583,245,2.352,295,2.352,322,2.352,347,2.099,357,2.692,459,2.352,477,3.691,519,2.692,521,2.692,522,2.692,548,2.692,669,3.207,670,3.207,671,3.207,672,5.018,673,3.207,674,3.207,675,3.207,676,3.207,677,3.207,678,3.207,679,3.207,680,3.207,681,3.207,682,3.207,683,3.207,684,3.207,685,3.207,686,3.207,687,3.207,688,3.207,689,3.207,690,3.207,691,3.207,692,3.207,693,3.207,694,3.207,695,3.207,696,3.207,697,3.207,698,3.207,699,3.207,700,3.207,701,3.207,702,2.692,703,3.207,704,3.207,705,3.207,706,3.207,707,3.207,708,3.207,709,3.207,710,3.207,711,3.207]],["title/miscellaneous/functions.html",[712,1.49,713,3.327]],["body/miscellaneous/functions.html",[7,0.566,12,0.026,45,0.025,46,0.025,53,2.962,168,1.679,169,1.556,171,1.443,335,2.764,410,3.059,411,3.666,419,3.429,664,4.703,665,3.924,712,2.518,713,3.924,714,4.675,715,3.924]],["title/index.html",[7,0.335,716,2.322,717,2.322]],["body/index.html",[2,1.663,12,0.028,45,0.016,46,0.016,47,0.962,49,1.663,79,1.623,92,2.573,95,3.525,98,3.192,101,2.082,103,2.082,104,2.082,107,3.073,141,2.082,172,1.977,186,2.396,188,1.819,210,2.082,211,1.466,212,1.466,247,2.082,251,2.082,261,2.082,287,1.336,347,1.623,364,0.962,366,2.165,413,2.082,526,1.623,534,3.073,564,3.073,580,2.082,590,3.073,604,3.073,633,3.653,652,1.819,653,3.192,702,3.653,718,2.48,719,2.082,720,2.48,721,3.662,722,5.55,723,3.662,724,2.48,725,2.48,726,2.48,727,2.48,728,2.48,729,2.48,730,2.48,731,2.48,732,2.48,733,3.662,734,2.48,735,2.48,736,2.48,737,3.662,738,2.48,739,2.48,740,2.48,741,2.48,742,3.662,743,4.353,744,2.48,745,2.48,746,2.48,747,2.48,748,2.48,749,2.48,750,3.662,751,2.48,752,2.48,753,2.48,754,2.48,755,2.48,756,2.48,757,2.48,758,2.48,759,2.48,760,2.48,761,2.48,762,2.082,763,2.48,764,2.48,765,2.48,766,2.48,767,2.48,768,2.48,769,2.48,770,2.48,771,3.662,772,4.353,773,2.48,774,2.48,775,2.48,776,2.48,777,2.48,778,2.48,779,2.48,780,2.48,781,2.48,782,2.48,783,2.48,784,2.48,785,2.48,786,2.48,787,2.48,788,2.48,789,2.48,790,2.48,791,5.696,792,2.48,793,2.48,794,2.48,795,2.082,796,2.48,797,2.48,798,2.48,799,5.365,800,2.48,801,2.48,802,2.48,803,2.48,804,2.48,805,2.48,806,1.819,807,2.48]],["title/license.html",[716,2.322,717,2.322,808,2.029]],["body/license.html",[12,0.02,45,0.02,46,0.02,64,1.849,199,2.246,228,1.694,369,3.864,526,2.246,653,2.517,762,2.881,795,3.864,806,2.517,808,2.517,809,5.196,810,3.432,811,3.432,812,3.432,813,4.604,814,3.432,815,3.432,816,3.432,817,3.432,818,3.432,819,3.432,820,6.269,821,3.432,822,3.432,823,5.196,824,3.432,825,4.604,826,3.432,827,3.432,828,3.432,829,3.432,830,3.432,831,3.432,832,3.432,833,3.432,834,3.432,835,4.604,836,3.432,837,3.432,838,3.432,839,3.432,840,3.432,841,3.432,842,3.432,843,4.604,844,4.604,845,3.432,846,3.432,847,3.432,848,3.432,849,3.432,850,3.432,851,3.432,852,3.432,853,3.432,854,3.432,855,3.432,856,3.432,857,3.432,858,3.432,859,3.432,860,3.432,861,3.432,862,3.432,863,3.432,864,3.432,865,3.432,866,3.432,867,3.432,868,3.432,869,3.432,870,3.432,871,3.432]],["title/modules.html",[49,2.037]],["body/modules.html",[12,0.025,45,0.025,46,0.025,48,3.044,49,2.113,59,2.505,60,2.296,61,2.75,872,6.211,873,6.211,874,6.211,875,6.211]],["title/overview.html",[876,3.764]],["body/overview.html",[2,1.514,12,0.029,22,2.527,45,0.02,46,0.02,47,1.293,48,4.122,49,1.514,50,1.646,51,1.971,52,1.971,53,1.646,54,1.971,55,1.971,56,2.798,57,2.798,58,2.798,59,3.393,60,3.035,61,3.684,62,2.669,63,1.971,64,1.796,161,1.796,166,2.343,226,2.527,283,1.11,315,2.798,317,2.798,318,3.027,409,2.445,501,2.798,502,2.798,503,2.798,566,2.798,623,2.757,639,2.798,641,2.798,876,2.798,877,3.334,878,3.334,879,3.334,880,3.334]],["title/properties.html",[285,1.224,668,2.322]],["body/properties.html",[12,0.029,45,0.024,46,0.024,285,1.414,719,3.846,806,3.361,808,3.361,881,4.583,882,4.583,883,4.583,884,4.583,885,4.583,886,4.583,887,5.537,888,4.583,889,4.583,890,4.583,891,4.583,892,4.583]],["title/miscellaneous/typealiases.html",[712,1.49,893,3.964]],["body/miscellaneous/typealiases.html",[7,0.584,12,0.027,45,0.025,46,0.025,146,3.074,170,0.713,297,2.379,312,3.374,313,2.85,314,2.379,712,2.596,894,4.821,895,5.707]],["title/miscellaneous/variables.html",[712,1.49,896,3.327]],["body/miscellaneous/variables.html",[3,0.297,7,0.373,12,0.029,36,3.948,39,1.423,45,0.019,46,0.019,65,2.259,92,2.528,93,2.585,94,3.136,95,2.259,139,1.821,170,0.726,177,1.536,185,2.259,190,1.659,238,1.52,330,2.585,335,2.528,366,2.528,372,2.015,408,3.214,410,2.015,411,3.472,414,2.585,419,2.259,434,4.425,437,2.585,439,3.136,450,1.659,507,2.259,523,3.136,524,2.585,525,4.454,526,2.015,527,4.454,528,2.585,529,4.123,530,2.585,531,3.136,621,3.136,662,2.585,663,3.589,712,1.659,715,4.123,896,2.585,897,4.276,898,4.276,899,3.08,900,3.08,901,3.08,902,3.08,903,3.08,904,3.08]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":498,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["0.1.13",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":882,"title":{},"body":{"properties.html":{}}}],["0.30.3",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["1.4.6",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["1.78.0",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["11",{"_index":880,"title":{},"body":{"overview.html":{}}}],["12.0.7",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["12.0.8",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["16.7.1",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["17.9.2",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["18.0.2",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":566,"title":{},"body":{"injectables/PrismaService.html":{},"overview.html":{}}}],["2.0.0",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":811,"title":{},"body":{"license.html":{}}}],["3",{"_index":878,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["3600000",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["4",{"_index":877,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":489,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5",{"_index":879,"title":{},"body":{"overview.html":{}}}],["5.2.3",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["7.8.1",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":842,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":307,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["access_token",{"_index":301,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["accessible",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":866,"title":{},"body":{"license.html":{}}}],["actual",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["aliases",{"_index":894,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":729,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":833,"title":{},"body":{"license.html":{}}}],["angular",{"_index":778,"title":{},"body":{"index.html":{}}}],["api",{"_index":633,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["api.bookstore.nas",{"_index":718,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["apollodriver",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagegraphqlplayground",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":186,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["app.close",{"_index":586,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["app.dto",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appended",{"_index":493,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apply(cookieparser",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":741,"title":{},"body":{"index.html":{}}}],["arg",{"_index":421,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice",{"_index":433,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(1).split",{"_index":430,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(2",{"_index":426,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.startswith",{"_index":422,"title":{},"body":{"interfaces/Flags.html":{}}}],["argon",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(dto.password",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.verify(user.hash",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["args",{"_index":335,"title":{},"body":{"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":417,"title":{},"body":{"interfaces/Flags.html":{}}}],["arising",{"_index":870,"title":{},"body":{"license.html":{}}}],["array",{"_index":418,"title":{},"body":{"interfaces/Flags.html":{}}}],["asia/kolkata",{"_index":584,"title":{},"body":{"injectables/PrismaService.html":{}}}],["associated",{"_index":821,"title":{},"body":{"license.html":{}}}],["async",{"_index":163,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth.service",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth/auth.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/decorator",{"_index":622,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/guard",{"_index":620,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":207,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authdto",{"_index":214,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authenticated",{"_index":730,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":764,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":458,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authguard('jwt",{"_index":460,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authinput",{"_index":296,"title":{"classes/AuthInput.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":891,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":765,"title":{},"body":{"index.html":{}}}],["authors",{"_index":859,"title":{},"body":{"license.html":{}}}],["authpayload",{"_index":300,"title":{"classes/AuthPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["authresolver",{"_index":326,"title":{"classes/AuthResolver.html":{}},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":226,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":884,"title":{},"body":{"properties.html":{}}}],["between",{"_index":758,"title":{},"body":{"index.html":{}}}],["body",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["bookstore.nas",{"_index":885,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":182,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":875,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":872,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":888,"title":{},"body":{"properties.html":{}}}],["built",{"_index":721,"title":{},"body":{"index.html":{}}}],["business",{"_index":742,"title":{},"body":{"index.html":{}}}],["c",{"_index":810,"title":{},"body":{"license.html":{}}}],["cache",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('home",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["cachemodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(5",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(number.max_safe_integer",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(undefined)@get('health",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["case",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["catch",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch((err",{"_index":197,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["chalk",{"_index":552,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.cyan(json.stringify(e.params",{"_index":557,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.green(e.query",{"_index":555,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.magenta(`${e.duration}ms",{"_index":559,"title":{},"body":{"injectables/PrismaService.html":{}}}],["charge",{"_index":817,"title":{},"body":{"license.html":{}}}],["claim",{"_index":862,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":283,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"overview.html":{}}}],["cleandb",{"_index":509,"title":{},"body":{"injectables/PrismaService.html":{}}}],["clear",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":501,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":502,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":503,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":639,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":640,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":641,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["compodoc",{"_index":775,"title":{},"body":{"index.html":{}}}],["compression",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["concerns",{"_index":746,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":841,"title":{},"body":{"license.html":{}}}],["config",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":545,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":486,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mode",{"_index":479,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":763,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configuration",{"_index":760,"title":{},"body":{"index.html":{}}}],["configure(consumer",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connected",{"_index":195,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connecting",{"_index":579,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":199,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"license.html":{}}}],["connectors/postgresql#configuring",{"_index":541,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.count('db",{"_index":194,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["console.debug",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["console.debug(req.cookies",{"_index":496,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.debug({dto",{"_index":340,"title":{},"body":{"classes/AuthResolver.html":{}}}],["console.error",{"_index":198,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ServiceStatus.html":{}}}],["console.info(new",{"_index":578,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('extracted",{"_index":499,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('flags",{"_index":438,"title":{},"body":{"interfaces/Flags.html":{}}}],["console.log(chalk.yellow('duration",{"_index":558,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('params",{"_index":556,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('query",{"_index":554,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('duration",{"_index":576,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('params",{"_index":574,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('query",{"_index":572,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":328,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(config",{"_index":467,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(ok",{"_index":593,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["constructor(prisma",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["consumer",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["contract",{"_index":867,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":625,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["cookie",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["cookiename",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["cookies",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["copies",{"_index":835,"title":{},"body":{"license.html":{}}}],["copy",{"_index":795,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":809,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":652,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":731,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":305,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["createparamdecorator",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":734,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":330,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["ctx.res",{"_index":344,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentflag",{"_index":420,"title":{},"body":{"interfaces/Flags.html":{}}}],["damages",{"_index":863,"title":{},"body":{"license.html":{}}}],["data",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":580,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["database_url",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["datasources",{"_index":543,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["datetime",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["db",{"_index":206,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["db_connected",{"_index":531,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbstatus",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.debug",{"_index":205,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.ok",{"_index":203,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.status",{"_index":204,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["deal",{"_index":822,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":871,"title":{},"body":{"license.html":{}}}],["debug",{"_index":184,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"classes/EditUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["definitionsfactory",{"_index":439,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["definitionsfactory.generate",{"_index":440,"title":{},"body":{"interfaces/Flags.html":{}}}],["delete",{"_index":617,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":637,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":605,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@getuser('userid",{"_index":636,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":608,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":719,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["dev/test/prod",{"_index":794,"title":{},"body":{"index.html":{}}}],["development",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["distribute",{"_index":831,"title":{},"body":{"license.html":{}}}],["docs",{"_index":783,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":653,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":532,"title":{},"body":{"injectables/PrismaService.html":{}}}],["domain",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["domain.com",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["down",{"_index":589,"title":{},"body":{"injectables/PrismaService.html":{}}}],["driver",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.password",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["due",{"_index":201,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["e",{"_index":551,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.g",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["e.params",{"_index":571,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.query",{"_index":560,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e2e",{"_index":534,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["edituser",{"_index":606,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituser(@getuser('userid",{"_index":629,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(userid",{"_index":611,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituserdto",{"_index":395,"title":{"classes/EditUserDto.html":{}},"body":{"classes/EditUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["em",{"_index":785,"title":{},"body":{"index.html":{}}}],["email",{"_index":286,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{}}}],["emit",{"_index":525,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":510,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":514,"title":{},"body":{"injectables/PrismaService.html":{}}}],["env",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":796,"title":{},"body":{"index.html":{}}}],["env.local",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["env.prod",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["envfile",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":202,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["error",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["error.code",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["event",{"_index":526,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":537,"title":{},"body":{"injectables/PrismaService.html":{}}}],["executioncontext",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiration",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":452,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["extract",{"_index":416,"title":{},"body":{"interfaces/Flags.html":{}}}],["extractflags",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractflags(args",{"_index":419,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":476,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":483,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":481,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie",{"_index":465,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie(req",{"_index":469,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":200,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["false",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["fieldresolverenhancers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":762,"title":{},"body":{"index.html":{},"license.html":{}}}],["fill",{"_index":797,"title":{},"body":{"index.html":{}}}],["find",{"_index":784,"title":{},"body":{"index.html":{}}}],["first",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firstname",{"_index":398,"title":{},"body":{"classes/EditUserDto.html":{}}}],["fitness",{"_index":855,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["fixme:unsure",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["flag",{"_index":424,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys",{"_index":429,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys.foreach((key",{"_index":431,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagname",{"_index":425,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags",{"_index":408,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["flags.w",{"_index":445,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags.watch",{"_index":444,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[currentflag",{"_index":436,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[flagname",{"_index":427,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[key",{"_index":432,"title":{},"body":{"interfaces/Flags.html":{}}}],["followed",{"_index":739,"title":{},"body":{"index.html":{}}}],["following",{"_index":840,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('credentials",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('incorrect",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":520,"title":{},"body":{"injectables/PrismaService.html":{}}}],["format(query",{"_index":562,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formattedquery",{"_index":561,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formatter",{"_index":522,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["forroutes",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["free",{"_index":816,"title":{},"body":{"license.html":{}}}],["function",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{},"coverage.html":{}}}],["functional",{"_index":727,"title":{},"body":{"index.html":{}}}],["functions",{"_index":713,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":838,"title":{},"body":{"license.html":{}}}],["g",{"_index":790,"title":{},"body":{"index.html":{}}}],["generate",{"_index":779,"title":{},"body":{"index.html":{}}}],["generated",{"_index":782,"title":{},"body":{"index.html":{}}}],["get('health",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":627,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@cachekey('home')@cachettl(number.max_safe_integer",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["gethealth",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["getme",{"_index":607,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(@getuser",{"_index":628,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(user",{"_index":614,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":716,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":621,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":505,"title":{},"body":{"modules/PrismaModule.html":{}}}],["granted",{"_index":815,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"dependencies.html":{},"index.html":{}}}],["graphql:schema",{"_index":726,"title":{},"body":{"index.html":{}}}],["graphqlcontext",{"_index":88,"title":{"classes/GraphqlContext.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["graphqldatetime",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqldefinitionsfactory",{"_index":414,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["handled",{"_index":743,"title":{},"body":{"index.html":{}}}],["hash",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashing",{"_index":769,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":776,"title":{},"body":{"index.html":{}}}],["here",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":814,"title":{},"body":{"license.html":{}}}],["hiro",{"_index":812,"title":{},"body":{"license.html":{}}}],["holders",{"_index":860,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":886,"title":{},"body":{"properties.html":{}}}],["hour",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["http",{"_index":747,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('signin",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["httponly",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["https",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com/fundamentals/lifecycle",{"_index":536,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://github.com/jsfame/api.bookstore.nas",{"_index":887,"title":{},"body":{"properties.html":{}}}],["https://github.com/jsfame/api.bookstore.nas/issues",{"_index":889,"title":{},"body":{"properties.html":{}}}],["https://jsfame.github.io/api.bookstore.nas",{"_index":786,"title":{},"body":{"index.html":{}}}],["https://www.prisma.io/docs/concepts/database",{"_index":540,"title":{},"body":{"injectables/PrismaService.html":{}}}],["httpstatus",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":303,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":549,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ignoreexpiration",{"_index":484,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implemented",{"_index":749,"title":{},"body":{"index.html":{}}}],["implements",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{}}}],["implied",{"_index":851,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["import('chalk",{"_index":553,"title":{},"body":{"injectables/PrismaService.html":{}}}],["imports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["imutation",{"_index":308,"title":{"classes/IMutation.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["included",{"_index":845,"title":{},"body":{"license.html":{}}}],["including",{"_index":825,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":515,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":160,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":161,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inspect",{"_index":735,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":777,"title":{},"body":{"index.html":{}}}],["install",{"_index":789,"title":{},"body":{"index.html":{}}}],["installation",{"_index":787,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":792,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["interactions",{"_index":751,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":407,"title":{"interfaces/Flags.html":{},"interfaces/User.html":{}},"body":{"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":409,"title":{},"body":{"interfaces/Flags.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isemail",{"_index":292,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{}}}],["isemail()@isnotempty",{"_index":288,"title":{},"body":{"classes/AuthDto.html":{}}}],["isemail()@isoptional",{"_index":400,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isglobal",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":293,"title":{},"body":{"classes/AuthDto.html":{}}}],["iso",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["isoptional",{"_index":405,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring",{"_index":406,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring()@isoptional",{"_index":402,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstrongpassword",{"_index":294,"title":{},"body":{"classes/AuthDto.html":{}}}],["isstrongpassword()@isnotempty",{"_index":290,"title":{},"body":{"classes/AuthDto.html":{}}}],["items",{"_index":736,"title":{},"body":{"index.html":{}}}],["jest",{"_index":773,"title":{},"body":{"index.html":{}}}],["john",{"_index":435,"title":{},"body":{"interfaces/Flags.html":{}}}],["joi",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(2",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('hiro@jwt#token",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().valid('dev",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":415,"title":{},"body":{"interfaces/Flags.html":{}}}],["join(process.cwd",{"_index":442,"title":{},"body":{"interfaces/Flags.html":{}}}],["jwt",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt_max_age",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt_secret",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtconstants",{"_index":463,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":480,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":455,"title":{"classes/JwtGuard.html":{}},"body":{"classes/JwtGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":324,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":318,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtstrategy.extractjwtfromcookie",{"_index":482,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["keywordcase",{"_index":567,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kind",{"_index":850,"title":{},"body":{"license.html":{}}}],["kleur",{"_index":519,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["kleur.cyan(json.stringify(e.params",{"_index":575,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.green(formattedquery",{"_index":573,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.magenta(`${e.duration}ms",{"_index":577,"title":{},"body":{"injectables/PrismaService.html":{}}}],["laciferin@gmail.com",{"_index":892,"title":{},"body":{"properties.html":{}}}],["landing",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["language",{"_index":563,"title":{},"body":{"injectables/PrismaService.html":{}}}],["lastname",{"_index":399,"title":{},"body":{"classes/EditUserDto.html":{}}}],["layers",{"_index":759,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":527,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":864,"title":{},"body":{"license.html":{}}}],["liable",{"_index":861,"title":{},"body":{"license.html":{}}}],["license",{"_index":808,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":807,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":826,"title":{},"body":{"license.html":{}}}],["limited",{"_index":852,"title":{},"body":{"license.html":{}}}],["linesbetweenqueries",{"_index":569,"title":{},"body":{"injectables/PrismaService.html":{}}}],["literal",{"_index":473,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["log",{"_index":546,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logevents",{"_index":523,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":590,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["long",{"_index":423,"title":{},"body":{"interfaces/Flags.html":{}}}],["manage",{"_index":732,"title":{},"body":{"index.html":{}}}],["management",{"_index":761,"title":{},"body":{"index.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["merchantability",{"_index":854,"title":{},"body":{"license.html":{}}}],["merge",{"_index":829,"title":{},"body":{"license.html":{}}}],["message",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["methodologies",{"_index":738,"title":{},"body":{"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["middlewareconsumer",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["milliseconds",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":712,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":806,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":828,"title":{},"body":{"license.html":{}}}],["modular",{"_index":740,"title":{},"body":{"index.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["morph",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["mutation",{"_index":336,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signin",{"_index":331,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signup",{"_index":333,"title":{},"body":{"classes/AuthResolver.html":{}}}],["name",{"_index":169,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["needs",{"_index":630,"title":{},"body":{"controllers/UserController.html":{}}}],["nest/swagger",{"_index":748,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":702,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":459,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["nestmodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":190,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":858,"title":{},"body":{"license.html":{}}}],["notice",{"_index":843,"title":{},"body":{"license.html":{}}}],["npm",{"_index":788,"title":{},"body":{"index.html":{}}}],["null",{"_index":314,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":312,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":304,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object(dto",{"_index":755,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":819,"title":{},"body":{"license.html":{}}}],["ok",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["onmoduledestroy",{"_index":535,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":511,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["orders",{"_index":733,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":869,"title":{},"body":{"license.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outputas",{"_index":443,"title":{},"body":{"interfaces/Flags.html":{}}}],["over",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["overview",{"_index":876,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":766,"title":{},"body":{"index.html":{}}}],["p2002",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":668,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["parameters",{"_index":168,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":570,"title":{},"body":{"injectables/PrismaService.html":{}}}],["parser",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":856,"title":{},"body":{"license.html":{}}}],["passport",{"_index":477,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passport.js",{"_index":725,"title":{},"body":{"index.html":{}}}],["passportjs",{"_index":767,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":475,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":478,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":287,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"index.html":{}}}],["patch",{"_index":618,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["pattern",{"_index":756,"title":{},"body":{"index.html":{}}}],["payload",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":490,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":487,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":813,"title":{},"body":{"license.html":{}}}],["permit",{"_index":836,"title":{},"body":{"license.html":{}}}],["person",{"_index":818,"title":{},"body":{"license.html":{}}}],["persons",{"_index":837,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":753,"title":{},"body":{"index.html":{}}}],["playground",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["pnpm",{"_index":791,"title":{},"body":{"index.html":{}}}],["port",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":847,"title":{},"body":{"license.html":{}}}],["post",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signin",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":564,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prefix",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["prerequisite",{"_index":793,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.logdefinition",{"_index":524,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":506,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":518,"title":{},"body":{"injectables/PrismaService.html":{},"controllers/UserController.html":{}}}],["prisma/client/runtime/library",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["prisma/prisma.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":178,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":508,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientknownrequesterror",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismaclientunknownrequesterror",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismamodule",{"_index":60,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":166,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["process.argv.slice(2",{"_index":437,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["process.env.force_color",{"_index":547,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.mode",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["prod",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["production",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project",{"_index":780,"title":{},"body":{"index.html":{}}}],["promise",{"_index":310,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["properties",{"_index":285,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provided",{"_index":848,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["publish",{"_index":830,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":857,"title":{},"body":{"license.html":{}}}],["pwmatches",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":528,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"classes/ServiceStatus.html":{}}}],["reflect",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["replace",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["repo",{"_index":805,"title":{},"body":{"index.html":{}}}],["repository",{"_index":890,"title":{},"body":{"properties.html":{}}}],["req",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["req.cookies",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.cookies.token",{"_index":500,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies[tokenfield].length",{"_index":497,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":494,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request",{"_index":450,"title":{},"body":{"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod.all",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["requests",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["requesttype",{"_index":470,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestwithuser",{"_index":447,"title":{"classes/RequestWithUser.html":{}},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["required",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["res.clearcookie('token",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie(cookiename",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('token",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('user",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send(token",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolver",{"_index":337,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('auth",{"_index":338,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolvers",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["restriction",{"_index":824,"title":{},"body":{"license.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":492,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":827,"title":{},"body":{"license.html":{}}}],["run",{"_index":799,"title":{},"body":{"index.html":{}}}],["running",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["rxjs",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["salts",{"_index":770,"title":{},"body":{"index.html":{}}}],["schema",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["sec",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["secret",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":485,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["select",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["sell",{"_index":834,"title":{},"body":{"license.html":{}}}],["sent",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["separate",{"_index":744,"title":{},"body":{"index.html":{}}}],["separating",{"_index":745,"title":{},"body":{"index.html":{}}}],["server",{"_index":720,"title":{},"body":{"index.html":{}}}],["service",{"_index":631,"title":{},"body":{"controllers/UserController.html":{}}}],["services",{"_index":750,"title":{},"body":{"index.html":{}}}],["servicestatus",{"_index":179,"title":{"classes/ServiceStatus.html":{}},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["set",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["shall",{"_index":844,"title":{},"body":{"license.html":{}}}],["short",{"_index":428,"title":{},"body":{"interfaces/Flags.html":{}}}],["signed",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signin(@args('data",{"_index":342,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signin(@body",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(data",{"_index":311,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["signin(dto",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signtoken",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(userid",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signup(@args('data",{"_index":339,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signup(@body",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(data",{"_index":309,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["signup(dto",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signuppayload",{"_index":302,"title":{"classes/SignUpPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["software",{"_index":820,"title":{},"body":{"license.html":{}}}],["solana/web3.js",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["something",{"_index":632,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specs",{"_index":728,"title":{},"body":{"index.html":{}}}],["sql",{"_index":521,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["src/**/*.graphql",{"_index":441,"title":{},"body":{"interfaces/Flags.html":{}}}],["src/.../app.module.ts",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generate",{"_index":715,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":895,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":714,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.service.ts",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.dto.ts",{"_index":446,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app.dto.ts:11",{"_index":448,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:12",{"_index":449,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:8",{"_index":592,"title":{},"body":{"classes/RequestWithUser.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":175,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":173,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:4",{"_index":594,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:6",{"_index":596,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:7",{"_index":597,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:8",{"_index":595,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/auth/auth.controller.ts",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":327,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:16",{"_index":334,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:23",{"_index":332,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:9",{"_index":329,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.service.ts",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/get",{"_index":662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":284,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":291,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":289,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/guard/jwt.guard.ts",{"_index":456,"title":{},"body":{"classes/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guard/jwt.guard.ts:3",{"_index":457,"title":{},"body":{"classes/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":462,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":468,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:24",{"_index":474,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:35",{"_index":471,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/generate",{"_index":410,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/graphql.ts",{"_index":297,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/graphql.ts:12",{"_index":298,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:13",{"_index":299,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:17",{"_index":325,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/graphql.ts:21",{"_index":600,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:22",{"_index":599,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:23",{"_index":598,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:24",{"_index":601,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:28",{"_index":454,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:30",{"_index":453,"title":{},"body":{"classes/IMutation.html":{}}}],["src/main.ts",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":504,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":507,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.service.ts:29",{"_index":512,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:71",{"_index":517,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:81",{"_index":516,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:88",{"_index":513,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/user/dto/edit",{"_index":396,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":603,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:14",{"_index":616,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:20",{"_index":613,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:28",{"_index":610,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":642,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":644,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:24",{"_index":646,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":645,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":542,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert",{"_index":538,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert=root.crt",{"_index":539,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":800,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":801,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":802,"title":{},"body":{"index.html":{}}}],["started",{"_index":717,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":464,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["status",{"_index":183,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["stdout",{"_index":529,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":781,"title":{},"body":{"index.html":{}}}],["sub",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":839,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":832,"title":{},"body":{"license.html":{}}}],["subscriptions",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["substantial",{"_index":846,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["super",{"_index":461,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["supertest",{"_index":774,"title":{},"body":{"index.html":{}}}],["support",{"_index":873,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":874,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":313,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["tabwidth",{"_index":565,"title":{},"body":{"injectables/PrismaService.html":{}}}],["taken",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["tear",{"_index":588,"title":{},"body":{"injectables/PrismaService.html":{}}}],["technical",{"_index":737,"title":{},"body":{"index.html":{}}}],["test",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["test').default('dev",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["test:covlicense",{"_index":804,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":803,"title":{},"body":{"index.html":{}}}],["testing",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["tests",{"_index":772,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":581,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$executerawunsafe(\"set",{"_index":582,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":585,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('query",{"_index":550,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction",{"_index":587,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethealth",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authcontroller.signin(dto",{"_index":343,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authcontroller.signup(dto",{"_index":341,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.signin(dto",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get('jwt_secret",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.jwt.signasync(payload",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["this.prisma.user.create",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.delete",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.prisma.user.update",{"_index":649,"title":{},"body":{"injectables/UserService.html":{}}}],["this.signtoken(user.id",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.deletemany",{"_index":591,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.userservice.deleteuser(userid",{"_index":638,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituser(userid",{"_index":635,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["throws",{"_index":488,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["time",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["timezone",{"_index":583,"title":{},"body":{"injectables/PrismaService.html":{}}}],["todo",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["token.access_token",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenfield",{"_index":495,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":768,"title":{},"body":{"index.html":{}}}],["tools",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":724,"title":{},"body":{"index.html":{}}}],["tort",{"_index":868,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":754,"title":{},"body":{"index.html":{}}}],["transferring",{"_index":757,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["transformers",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["transport",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["try",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":548,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["type",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":893,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typepaths",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Flags.html":{}}}],["types",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":723,"title":{},"body":{"index.html":{}}}],["typings.ts",{"_index":411,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":771,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["up",{"_index":187,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["updatedat",{"_index":306,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["upper",{"_index":568,"title":{},"body":{"injectables/PrismaService.html":{}}}],["url",{"_index":544,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["useguards",{"_index":619,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":626,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete",{"_index":609,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get('me",{"_index":615,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@patch",{"_index":612,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":364,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user.controller",{"_index":643,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":397,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":403,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:14",{"_index":404,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:6",{"_index":401,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.email",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.hash",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":624,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":602,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":61,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":604,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":623,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":722,"title":{},"body":{"index.html":{}}}],["utility",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":466,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":472,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":752,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":295,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":434,"title":{},"body":{"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":896,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":798,"title":{},"body":{"index.html":{}}}],["version",{"_index":881,"title":{},"body":{"properties.html":{}}}],["w",{"_index":412,"title":{},"body":{"interfaces/Flags.html":{}}}],["walletid",{"_index":451,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["ware",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["warn",{"_index":530,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":853,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":849,"title":{},"body":{"license.html":{}}}],["watch",{"_index":413,"title":{},"body":{"interfaces/Flags.html":{},"index.html":{}}}],["web2",{"_index":883,"title":{},"body":{"properties.html":{}}}],["whatever",{"_index":491,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whether",{"_index":865,"title":{},"body":{"license.html":{}}}],["whitelist:true",{"_index":634,"title":{},"body":{"controllers/UserController.html":{}}}],["without",{"_index":823,"title":{},"body":{"license.html":{}}}],["work",{"_index":533,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ws",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHealth\n                            \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheTTL(undefined)@Get('health')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@CacheKey('home')@CacheTTL(Number.MAX_SAFE_INTEGER)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { CacheInterceptor, CacheKey, CacheTTL } from '@nestjs/cache-manager'\n\n@Controller()\n@UseInterceptors(CacheInterceptor)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @CacheKey('home')\n  @CacheTTL(Number.MAX_SAFE_INTEGER) //default is just 1 sec\n  getHello() {\n    return this.appService.getHello()\n  }\n\n  @CacheTTL(5 * 1000)\n  @Get('health')\n  getHealth() {\n    return this.appService.getHealth()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common'\nimport {AppService} from './app.service'\nimport {ConfigModule} from '@nestjs/config'\nimport {AuthModule} from './auth/auth.module'\nimport Joi from 'joi'\nimport {CacheModule} from '@nestjs/cache-manager'\nimport {GraphQLModule} from '@nestjs/graphql'\nimport {ApolloServerPluginLandingPageGraphQLPlayground} from '@apollo/server-plugin-landing-page-graphql-playground'\nimport {GraphQLDateTime} from 'graphql-iso-date'\nimport {ApolloDriver, ApolloDriverConfig} from '@nestjs/apollo'\nimport {AppController} from './app.controller'\nimport {GraphqlContext} from './app.dto'\nimport {UserModule} from \"./user/user.module\";\nimport {PrismaModule} from \"./prisma/prisma.module\";\n\nlet mode = process.env.MODE\nlet envFile = '.env'\n\nswitch (mode) {\n  case 'test':\n    envFile = '.env.test'\n    process.env.NODE_ENV = 'testing'\n    break\n  case 'prod':\n    process.env.NODE_ENV = 'production'\n    envFile = '.env.prod'\n    break\n  default:\n    mode = 'dev'\n    process.env.NODE_ENV = 'development'\n    envFile = '.env.local'\n}\n\nconsole.debug({ mode, envFile })\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [envFile, '.env'],\n      isGlobal: true,\n      cache: true,\n      validationSchema: Joi.object({\n        MODE: Joi.string().valid('dev', 'prod', 'test').default('dev'),\n        PORT: Joi.number().default(3000),\n        DATABASE_URL: Joi.string(),\n        JWT_SECRET: Joi.string().default('Hiro@JWT#TOKEN$'),\n        JWT_MAX_AGE: Joi.number().default(2 * 60 * 60 * 1000),\n      }),\n    }),\n    CacheModule.register({ isGlobal: true }),\n    GraphQLModule.forRoot({\n      context: ({ req, res }: GraphqlContext) => ({ req, res }), //required for cookies\n\n      fieldResolverEnhancers: ['interceptors'], //FIXME:unsure\n\n      autoSchemaFile: false, // schema-first\n      playground: false,\n      driver: ApolloDriver,\n      plugins: [ApolloServerPluginLandingPageGraphQLPlayground()],\n      typePaths: ['./**/*.graphql'],\n      resolvers: { DateTime: GraphQLDateTime },\n      subscriptions: {\n        'graphql-ws': true,\n        'subscriptions-transport-ws': true,\n      },\n    }),\n    PrismaModule,\n    AuthModule,\n    UserModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n/*export class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(cookieParser())\n      .forRoutes({ path: '/graphql', method: RequestMethod.ALL })\n  }\n}*/\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHealth\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Res } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { AuthDto } from './dto'\nimport { Response } from 'express'\nimport { ConfigService } from '@nestjs/config'\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService, private config: ConfigService) {}\n\n  @Post('signup')\n  signup(@Body() dto: AuthDto) {\n    return this.authService.signup(dto)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signin(@Body() dto: AuthDto, @Res() res: Response) {\n    const token = await this.authService.signin(dto)\n\n    /*    res.cookie('user', dto.email, { //TODO:\n      // Set cookie options here (e.g., expiration, domain, path, etc.)\n      maxAge: 3600000, // Cookie expiration time in milliseconds (1 hour)\n      httpOnly: true, // Cookie accessible only through HTTP(S) requests\n      secure: true, // Cookie sent only over HTTPS if true\n      signed: true,\n    })*/\n    // const cookies = req.cookies; //TODO: middle ware to clear the cookies when signin\n    // TODO: utility function to clear and set cookie\n    // for (let cookieName in cookies) {\n    //   res.clearCookie(cookieName); // Replace '.your-domain.com' with your actual domain\n    // }\n    res.clearCookie('token')\n    res.cookie('token', token.access_token, {\n      maxAge: this.config.get('JWT_SECRET') * 1000 || 60 * 60 * 1000,\n      secure: true,\n      httpOnly: true,\n      // signed: true,\n    })\n\n    res.send(token)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsStrongPassword } from 'class-validator'\n\nexport class AuthDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string\n\n  @IsStrongPassword()\n  @IsNotEmpty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInput.html":{"url":"classes/AuthInput.html","title":"class - AuthInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PrismaModule } from '../prisma/prisma.module'\nimport { JwtStrategy } from './strategy'\n\n@Module({\n  imports: [JwtModule.register({}), PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPayload.html":{"url":"classes/AuthPayload.html","title":"class - AuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authController: AuthController)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authController\n                                                  \n                                                        \n                                                                        AuthController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(dto: AuthDto, ctx: GraphqlContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signIn')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n                                    \n                                                GraphqlContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signUp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Args, Context, Mutation, Resolver} from '@nestjs/graphql'\nimport {AuthService} from './auth.service'\nimport {AuthController} from './auth.controller'\nimport {GraphqlContext} from '../app.dto'\nimport {AuthDto} from './dto'\nimport {AuthInput} from '../graphql'\n\n@Resolver('Auth')\nexport class AuthResolver {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authController: AuthController,\n  ) {}\n\n  @Mutation('signUp')\n  signUp(@Args('data') dto: AuthDto) {\n    console.debug({dto})\n\n    return this.authController.signup(dto as AuthInput)\n  }\n\n  @Mutation('signIn')\n  signIn(@Args('data') dto: AuthDto, @Context() ctx: GraphqlContext) {\n    console.debug({ dto })\n\n    return this.authController.signin(dto as AuthInput, ctx.res)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userId: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { AuthDto } from './dto'\n\nimport argon from 'argon2'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwt: JwtService,\n    private config: ConfigService,\n  ) {}\n\n  async signup(dto: AuthDto) {\n    const hash = await argon.hash(dto.password)\n\n    try {\n      const user = await this.prisma.user.create({\n        data: {\n          email: dto.email,\n          hash: hash,\n        },\n        select: {\n          //FIXME: use transformers\n          id: true,\n          email: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      return user\n    } catch (error) {\n      console.error({\n        code: error.code,\n        error,\n      })\n      if (\n        error instanceof PrismaClientKnownRequestError ||\n        PrismaClientUnknownRequestError\n      ) {\n        if (error.code == 'P2002') {\n          throw new ForbiddenException('credentials taken')\n        }\n      }\n      throw error\n    }\n  }\n\n  async signin(dto: AuthDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email: dto.email,\n      },\n    })\n\n    if (!user) throw new ForbiddenException('incorrect credentials')\n\n    const pwMatches = await argon.verify(user.hash, dto.password)\n\n    if (!pwMatches) throw new ForbiddenException('invalid credentials')\n\n    return this.signToken(user.id, user.email)\n  }\n\n  async signToken(userId: number, email: string) {\n    const payload = {\n      sub: userId,\n      email,\n    }\n    const secret = this.config.get('JWT_SECRET')\n\n    return {\n      access_token: await this.jwt.signAsync(payload, {\n        expiresIn: '1hr', //TODO:\n        secret: secret,\n      }),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserDto.html":{"url":"classes/EditUserDto.html","title":"class - EditUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/edit-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsEmail, IsOptional, IsString} from 'class-validator'\n\nexport class EditUserDto {\n  @IsEmail()\n  @IsOptional()\n  email?: string\n\n  @IsString()\n  @IsOptional()\n  firstName?: string\n\n  @IsString()\n  @IsOptional()\n  lastName?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Flags.html":{"url":"interfaces/Flags.html","title":"interface - Flags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Flags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generate-typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            w\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        w\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        w:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDefinitionsFactory } from '@nestjs/graphql'\nimport { join } from 'path'\n\ninterface Flags {\n  watch?: boolean\n  w?: boolean\n}\n\n// Function to extract flags from the arguments array\nfunction extractFlags(args) {\n  const flags: Flags = {}\n  let currentFlag = null\n\n  for (const arg of args) {\n    if (arg.startsWith('--')) {\n      // Long flag (e.g., --watch)\n      const flagName = arg.slice(2)\n      flags[flagName] = true\n      currentFlag = flagName\n    } else if (arg.startsWith('-')) {\n      // Short flag (e.g., -w)\n      const flagKeys = arg.slice(1).split('')\n      flagKeys.forEach((key) => {\n        flags[key] = true\n      })\n      currentFlag = arg.slice(-1)\n    } else if (currentFlag) {\n      // Flag value (e.g., --name John)\n      flags[currentFlag] = arg\n      currentFlag = null\n    }\n  }\n\n  return flags\n}\n\nconst args = process.argv.slice(2)\nconst flags: Flags = extractFlags(args)\n\nconsole.log('Flags:', flags)\n\nconst definitionsFactory = new GraphQLDefinitionsFactory()\ndefinitionsFactory.generate({\n  typePaths: ['./src/**/*.graphql'],\n  path: join(process.cwd(), 'src/graphql.ts'),\n  outputAs: 'class',\n  watch: flags.watch || flags.w,\n})\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphqlContext.html":{"url":"classes/GraphqlContext.html","title":"class - GraphqlContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphqlContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                req\n                            \n                            \n                                res\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        req\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RequestWithUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Response\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IMutation.html":{"url":"classes/IMutation.html","title":"class - IMutation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IMutation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SignUpPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtGuard.html":{"url":"classes/JwtGuard.html","title":"class - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport'\n\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtConstants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                extractJWTFromCookie\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        extractJWTFromCookie\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractJWTFromCookie(req: RequestType)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            RequestType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { userId: number; email: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { ConfigService } from '@nestjs/config'\nimport { PrismaService } from '../../prisma/prisma.service'\nimport { Request as RequestType } from 'express'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  private jwtConstants: any\n\n  constructor(private config: ConfigService, private prisma: PrismaService) {\n    const mode = config.get('MODE') || 'dev'\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        JwtStrategy.extractJWTFromCookie,\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ]),\n      ignoreExpiration: mode == 'dev' || mode == 'test',\n      secretOrKey: config.get('JWT_SECRET'),\n    })\n  }\n\n  validate(payload: { sub: number; email: string }) {\n    const user = this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    })\n    if (!user) return null //throws the 401 error\n\n    return { userId: payload.sub, email: payload.email }\n    // whatever is returned is appended to req.user\n  }\n  private static extractJWTFromCookie(req: RequestType): string | null {\n    const tokenField = 'token'\n    console.debug(req.cookies)\n    if (req.cookies && tokenField in req.cookies && req.cookies[tokenField].length > 0) {\n      console.log('extracted cookie')\n      return req.cookies.token\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Global, Module} from '@nestjs/common'\nimport {PrismaService} from './prisma.service'\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDb\n                            \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDb\n                        \n                    \n                \n            \n            \n                \ncleanDb()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common'\nimport { Prisma, PrismaClient } from '@prisma/client'\nimport { ConfigService } from '@nestjs/config'\nimport kleur from 'kleur'\nimport { format } from 'sql-formatter'\n\nconst logEvents: Prisma.LogDefinition[] = [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n\nlet DB_CONNECTED = false\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  // FIXME doesn't work for e2e OnModuleDestroy{\n  // https://docs.nestjs.com/fundamentals/lifecycle-events\n\n  constructor(config: ConfigService) {\n    const sslcert = '?sslcert=root.crt'\n    //https://www.prisma.io/docs/concepts/database-connectors/postgresql#configuring-an-ssl-connection\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL') + sslcert,\n        },\n      },\n      log: logEvents,\n    })\n\n    process.env.FORCE_COLOR = 'true'\n\n    // @ts-ignore\n    this.$on('query', async (e: any) => {\n      if (config.get('MODE') != 'dev') {\n        return\n      }\n\n      // const chalk = await import('chalk')\n      // console.log(chalk.yellow('Query: ') + chalk.green(e.query))\n      // console.log(chalk.yellow('Params: ') + chalk.cyan(JSON.stringify(e.params)))\n      // console.log(chalk.yellow('Duration: ') + chalk.magenta(`${e.duration}ms`))\n      const query = e.query\n\n      const formattedQuery = format(query, {\n        language: 'postgresql',\n        tabWidth: 2,\n        keywordCase: 'upper',\n        linesBetweenQueries: 2,\n        params: e.params || [],\n      })\n      console.log(kleur.yellow('Query: ') + kleur.green(formattedQuery))\n      console.log(kleur.yellow('Params: ') + kleur.cyan(JSON.stringify(e.params)))\n      console.log(kleur.yellow('Duration: ') + kleur.magenta(`${e.duration}ms`))\n    })\n  }\n  async onModuleInit() {\n    if (DB_CONNECTED) return\n\n    console.info(new Date(), 'connecting to the database')\n    await this.$connect()\n    await this.$executeRawUnsafe(\"SET timezone = 'Asia/Kolkata'\")\n\n    DB_CONNECTED = true\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    // @ts-ignore\n    this.$on('beforeExit', async () => {\n      await app.close()\n    })\n  }\n\n  cleanDb() {\n    return this.$transaction([\n      //tear down logic\n      this.user.deleteMany(),\n    ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestWithUser.html":{"url":"classes/RequestWithUser.html","title":"class - RequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceStatus.html":{"url":"classes/ServiceStatus.html","title":"class - ServiceStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ok: boolean, status: string, debug: any)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ok\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        debug\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OK'\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpPayload.html":{"url":"classes/SignUpPayload.html","title":"class - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            walletId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        walletId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                editUser\n                            \n                            \n                                    \n                                    \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Patch()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Delete, Get, Patch, UseGuards} from '@nestjs/common'\nimport {JwtGuard} from '../auth/guard'\nimport {GetUser} from '../auth/decorator'\nimport {User} from '@prisma/client'\nimport {EditUserDto} from './dto'\nimport {UserService} from './user.service'\n\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtGuard)\n  @Get('me')\n  getMe(@GetUser() user: User) {\n    return user\n  }\n\n  @UseGuards(JwtGuard)\n  @Patch()\n  editUser(@GetUser('userId') userId: number, @Body() dto: EditUserDto) {\n    //needs service\n    // we will get something in api request due to whitelist:true\n    return this.userService.editUser(userId, dto)\n  }\n\n  @UseGuards(JwtGuard)\n  @Delete()\n  async deleteUser(@GetUser('userId') userId: number) {\n    return {\n      message: 'user deleted',\n      user: await this.userService.deleteUser(userId),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common'\nimport {UserController} from './user.controller'\nimport {UserService} from './user.service'\nimport {AuthModule} from '../auth/auth.module'\nimport {PrismaModule} from '../prisma/prisma.module'\n\n@Module({\n  imports: [AuthModule, PrismaModule],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@nestjs/common'\nimport {PrismaService} from '../prisma/prisma.service'\nimport {EditUserDto} from './dto'\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  async editUser(userId: number, dto: EditUserDto) {\n    console.log({ userId, dto })\n    const user = await this.prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: {\n        ...dto,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n\n  async deleteUser(userId: number) {\n    const user = await this.prisma.user.delete({\n      where: {\n        id: userId,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            GraphqlContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            RequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            class\n            ServiceStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            class\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            interface\n            Flags\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            function\n            extractFlags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            args\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            definitionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            flags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IMutation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            SignUpPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            DB_CONNECTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            logEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/edit-user.dto.ts\n            \n            class\n            EditUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.7.5\n        \n            @nestjs/apollo : ^12.0.7\n        \n            @nestjs/cache-manager : ^2.0.1\n        \n            @nestjs/common : ^10.0.5\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.5\n        \n            @nestjs/graphql : ^12.0.8\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.5\n        \n            @solana/web3.js : ^1.78.0\n        \n            argon2 : ^0.30.3\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            graphql : 16.7.1\n        \n            graphql-iso-date : ^3.6.1\n        \n            graphql-subscriptions : 2.0.0\n        \n            graphql-tools : ^9.0.0\n        \n            joi : ^17.9.2\n        \n            kleur : ^4.1.5\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-nestjs-graphql : ^18.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : 7.8.1\n        \n            sql-formatter : ^12.2.3\n        \n            ts-morph : ^19.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            extractFlags   (src/.../generate-typings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractFlags\n                        \n                    \n                \n            \n            \n                \nextractFlags(args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\napi.bookstore.nas\nDescription\nAPI Server built using  , TypeScript, Prisma, Graphql and PostgreSQL.\nBuilt with ❤️on top of\n\n Typescript\n NestJS\n Prisma\n Passport.js\n Graphql:Schema First\n PostgreSQL\n\nFunctional specs\nAPI allows authenticated to users to create and manage orders\n\nUser SignUp & SignIn\nCRUD Orders\nInspect Items\n\nTechnical methodologies followed\n\nModular architecture: Business Logic & Auth handled in separate modules, separating concerns.\nHTTP requests are handled by Controllers\n API documentation using nest/swagger module \nBusiness logic is implemented in Services\nDatabase interactions are handled  using Prisma\nValidation using NestJS Pipes\nData Transfer Object(DTO) pattern for transferring data between layers\nConfiguration management using .env files for development, test & prod configs\nAuthentication / Authorization, Event ownership by users\nPassportJS, JWT tokens, Password hashing, salts\nUnit tests using Jest\nSupertest for E2E testing\n\nTechnical documentation using Compodoc\nAs NestJS is heavily inspired by Angular, we can generate the documentation about project structure modules, controllers, services etc. I\nhave generated the docs.\nFind 'em here - https://jsFame.github.io/api.bookstore.nas/\nInstallation\nnpm install -g pnpm\npnpm installRunning the app\nPrerequisite for running the app in any mode - dev/test/prod\n\nCopy .env.example with .env\nFill in the env vars in .env\n\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covLicense\nThis repo is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Hiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : Web2 backend of bookstore.nas\n        \n            Homepage : https://github.com/jsFame/api.bookstore.nas\n        \n            Bugs : https://github.com/jsFame/api.bookstore.nas/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/jsFame/api.bookstore.nas\n        \n            Author : laciferin@gmail.com\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateTime   (src/.../graphql.ts)\n                        \n                        \n                            Nullable   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            args   (src/.../generate-typings.ts)\n                        \n                        \n                            DB_CONNECTED   (src/.../prisma.service.ts)\n                        \n                        \n                            definitionsFactory   (src/.../generate-typings.ts)\n                        \n                        \n                            envFile   (src/.../app.module.ts)\n                        \n                        \n                            flags   (src/.../generate-typings.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            logEvents   (src/.../prisma.service.ts)\n                        \n                        \n                            mode   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        args\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.argv.slice(2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        definitionsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLDefinitionsFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Flags\n\n                    \n                \n                \n                    \n                        Default value : extractFlags(args)\n                    \n                \n\n\n        \n    \n\n    src/prisma/prisma.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.LogDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.env'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MODE\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest()\n\n    if (data) return request.user[data]\n\n    return request.user\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
