var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.491,1,2.456]],["body/controllers/AppController.html",[0,2.187,1,3.603,2,1.569,3,0.247,4,0.277,5,0.247,6,3.417,7,0.471,8,1.737,9,4.724,10,4.724,11,2.187,12,0.022,13,4.003,14,0.872,15,4.003,16,1.737,17,4.003,18,4.003,19,0.692,20,4.003,21,0.946,22,3.163,23,3.417,24,4.003,25,4.003,26,4.003,27,3.03,28,3.03,29,4.003,30,0.307,31,0.173,32,1.769,33,2.011,34,4.003,35,4.003,36,2.511,37,2.742,38,4.003,39,1.642,40,4.003,41,4.003,42,3.03,43,4.003,44,4.003,45,0.015,46,0.015]],["title/modules/AppModule.html",[47,1.252,48,2.456]],["body/modules/AppModule.html",[1,2.875,2,1.341,3,0.136,4,0.152,5,0.136,12,0.022,19,0.782,21,0.521,22,2.921,23,1.88,27,1.668,28,1.668,30,0.169,31,0.095,36,1.382,42,1.668,45,0.01,46,0.01,47,1.466,48,4.548,49,0.973,50,1.037,51,1.186,52,1.186,53,1.037,54,2.26,55,1.186,56,1.88,57,1.88,58,1.88,59,3.144,60,3.404,61,3.404,62,2.921,63,3.404,64,1.843,65,1.186,66,1.107,67,1.668,68,2.591,69,2.203,70,1.277,71,1.88,72,2.921,73,2.203,74,2.203,75,1.382,76,3.423,77,1.88,78,2.203,79,2.203,80,2.203,81,3.242,82,3.423,83,3.423,84,1.88,85,1.668,86,3.423,87,2.203,88,1.88,89,2.203,90,1.72,91,1.88,92,2.203,93,1.668,94,2.203,95,2.203,96,3.216,97,1.88,98,4.107,99,2.591,100,1.88,101,2.921,102,1.668,103,2.203,104,4.198,105,1.88,106,2.921,107,2.921,108,1.88,109,2.203,110,1.668,111,1.88,112,2.203,113,1.668,114,2.203,115,2.203,116,3.423,117,2.76,118,1.88,119,2.203,120,2.203,121,2.203,122,2.203,123,2.203,124,2.203,125,2.203,126,2.203,127,2.203,128,2.203,129,2.203,130,2.203,131,2.921,132,2.203,133,2.203,134,1.668,135,2.147,136,2.147,137,1.88,138,1.88,139,2.203,140,2.203,141,2.203,142,2.203,143,2.147,144,2.203,145,1.88,146,2.203,147,2.203,148,1.88,149,2.203,150,1.277,151,2.921,152,3.423,153,2.203]],["title/injectables/AppService.html",[22,1.931,154,1.059]],["body/injectables/AppService.html",[3,0.201,4,0.225,5,0.201,7,0.383,8,1.508,9,4.334,10,4.334,12,0.022,14,0.875,16,1.508,19,0.538,21,0.769,22,2.459,30,0.25,31,0.197,32,1.437,33,1.634,39,1.426,45,0.013,46,0.013,117,1.751,143,2.04,154,1.349,155,1.634,156,2.462,157,2.484,158,2.018,159,2.04,160,2.244,161,3.253,162,1.015,163,0.961,164,0.442,165,0.813,166,2.195,167,3.253,168,1.885,169,3.253,170,3.129,171,1.79,172,1.751,173,3.616,174,4.506,175,3.899,176,2.462,177,2.462,178,2.776,179,2.462,180,3.129,181,2.776,182,2.462,183,3.899,184,2.459,185,1.634,186,2.776,187,2.776,188,2.776,189,2.776,190,2.776,191,2.776,192,2.462,193,3.129,194,3.458,195,2.462,196,3.899,197,2.776,198,2.776,199,2.776,200,2.462]],["title/controllers/AuthController.html",[0,1.491,201,2.25]],["body/controllers/AuthController.html",[0,1.094,2,1.031,3,0.163,4,0.182,5,0.163,7,0.31,8,1.293,11,1.629,12,0.022,14,0.649,16,1.293,19,0.653,21,0.621,30,0.202,31,0.114,32,1.162,37,1.801,39,0.821,42,2.965,45,0.012,46,0.012,70,1.524,117,3.242,131,3.343,136,3.479,138,3.995,157,2.202,162,1.223,163,1.157,164,0.533,165,0.979,185,1.322,201,2.457,202,2.245,203,1.801,204,2.245,205,2.936,206,2.457,207,1.991,208,3.489,209,3.253,210,2.63,211,2.63,212,3.479,213,1.991,214,3.917,215,2.63,216,1.801,217,2.63,218,2.245,219,1.991,220,2.52,221,1.991,222,1.322,223,2.683,224,2.63,225,1.65,226,1.801,227,2.63,228,2.63,229,2.63,230,2.63,231,2.63,232,1.843,233,2.245,234,2.63,235,2.63,236,2.245,237,3.995,238,3.917,239,4.197,240,2.63,241,2.245,242,2.245,243,3.917,244,3.917,245,2.245,246,2.245,247,3.917,248,2.63,249,2.63,250,2.63,251,2.63,252,3.917,253,2.63,254,2.63,255,2.63,256,2.245,257,3.917,258,2.63,259,2.63,260,2.63,261,3.917,262,2.245,263,2.63,264,2.63,265,3.917,266,2.63,267,1.991,268,2.63,269,2.63,270,2.63,271,2.63,272,2.63,273,2.63,274,2.63,275,2.63,276,2.245,277,2.63]],["title/classes/AuthDto.html",[31,0.155,208,2.078]],["body/classes/AuthDto.html",[3,0.278,4,0.311,5,0.278,7,0.53,11,2.357,12,0.021,14,0.939,19,0.53,30,0.345,31,0.245,45,0.017,46,0.017,164,0.771,171,2.555,208,3.285,278,1.188,279,3.838,280,1.77,281,3.12,282,3.598,283,4.496,284,4.496,285,4.496,286,4.496,287,4.839,288,4.7,289,5.669,290,2.605]],["title/classes/AuthInput.html",[31,0.155,291,1.931]],["body/classes/AuthInput.html",[3,0.247,4,0.276,5,0.247,7,0.47,12,0.021,14,0.869,30,0.497,31,0.269,45,0.015,46,0.015,150,3.398,164,0.847,171,2.605,278,1.054,280,1.638,281,3.131,282,3.398,291,3.355,292,2.147,293,3.988,294,3.988,295,3.04,296,2.502,297,3.04,298,1.658,299,1.114,300,2.502,301,2.502,302,4.017,303,2.311,304,2.731,305,3.594,306,2.731,307,2.502,308,2.502,309,2.147]],["title/modules/AuthModule.html",[47,1.252,59,2.078]],["body/modules/AuthModule.html",[2,1.968,3,0.231,4,0.258,5,0.231,12,0.021,19,0.785,21,0.882,30,0.287,31,0.161,45,0.015,46,0.015,47,1.983,49,1.65,50,1.757,51,2.011,52,2.011,53,1.757,54,3.056,55,2.011,59,4.02,62,3.512,64,2.704,65,2.011,66,1.877,68,3.803,93,2.827,201,3.808,220,3.512,221,2.827,310,3.187,311,3.187,312,3.735,313,4.093,314,3.735,315,3.187,316,3.735,317,2.827,318,3.187,319,3.44,320,3.735,321,3.735]],["title/classes/AuthPayload.html",[31,0.155,295,2.078]],["body/classes/AuthPayload.html",[3,0.253,4,0.283,5,0.253,7,0.482,12,0.021,14,0.679,30,0.501,31,0.272,45,0.016,46,0.016,150,3.443,164,0.808,171,2.559,278,1.083,280,1.667,281,2.683,282,2.373,291,3.199,292,2.205,295,3.443,296,3.727,297,3.094,298,1.703,299,1.144,300,2.57,301,2.57,302,4.069,303,2.373,304,2.805,305,3.657,306,2.805,307,2.57,308,2.57,309,2.205,322,4.096]],["title/classes/AuthResolver.html",[31,0.155,319,2.456]],["body/classes/AuthResolver.html",[3,0.199,4,0.223,5,0.199,7,0.38,8,1.498,11,1.887,12,0.022,14,0.87,16,1.498,19,0.734,30,0.247,31,0.139,33,2.281,39,1.417,45,0.013,46,0.013,75,2.022,81,2.207,90,2.865,91,2.751,113,3.436,134,3.436,158,2.005,162,1.64,163,1.552,164,0.714,165,1.313,201,4.019,205,2.847,206,2.847,207,2.44,208,3.712,212,4.019,213,2.44,220,3.357,221,2.44,225,2.847,278,0.852,291,2.828,315,2.751,319,3.108,323,2.751,324,3.223,325,3.223,326,3.977,327,4.539,328,3.223,329,4.539,330,3.223,331,2.022,332,3.223,333,3.223,334,3.223,335,3.223,336,3.223,337,3.223,338,3.223,339,3.223]],["title/injectables/AuthService.html",[154,1.059,220,1.931]],["body/injectables/AuthService.html",[3,0.141,4,0.158,5,0.141,7,0.27,8,1.164,12,0.022,14,0.8,16,1.42,19,0.676,21,0.541,30,0.176,31,0.099,39,1.343,45,0.01,46,0.01,70,1.326,117,2.601,154,1.041,155,1.15,157,2.862,158,1.558,159,1.436,160,1.893,162,1.508,163,1.427,164,0.657,165,1.207,166,1.466,168,2.492,171,1.685,172,1.232,184,2.315,185,2.621,192,1.733,205,2.212,206,2.212,207,2.669,208,3.327,212,2.698,213,2.669,220,1.898,223,3.309,225,2.698,226,2.945,232,2.593,236,3.009,237,1.954,276,1.954,281,2.885,296,1.436,298,0.952,299,1.201,300,1.436,301,1.436,317,1.733,340,1.954,341,3.526,342,2.945,343,4.831,344,2.289,345,2.289,346,3.526,347,2.289,348,2.212,349,2.289,350,1.954,351,2.289,352,1.954,353,3.009,354,3.009,355,1.954,356,4.3,357,2.289,358,2.289,359,1.893,360,2.289,361,1.232,362,2.289,363,1.733,364,1.954,365,2.289,366,1.954,367,3.03,368,1.954,369,3.526,370,2.289,371,1.954,372,4.123,373,2.289,374,2.289,375,1.733,376,2.289,377,3.526,378,3.526,379,2.289,380,2.289,381,2.289,382,2.289,383,2.289,384,1.733,385,1.954,386,4.3,387,2.289,388,2.289,389,2.289]],["title/classes/Book.html",[31,0.155,390,2.456]],["body/classes/Book.html",[3,0.335,4,0.375,5,0.335,12,0.02,30,0.416,31,0.234,45,0.019,46,0.019,278,1.432,390,4.349,391,4.623]],["title/controllers/BookController.html",[0,1.491,392,2.456]],["body/controllers/BookController.html",[0,1.221,2,1.151,3,0.182,4,0.203,5,0.182,7,0.346,8,1.402,11,2.412,12,0.022,14,0.961,16,1.915,19,0.644,21,0.694,30,0.225,31,0.127,32,1.298,33,1.476,39,1.811,45,0.012,46,0.012,162,1.707,163,1.615,164,0.743,165,1.366,203,2.011,216,2.909,219,3.777,298,2.514,299,1.817,392,2.909,393,2.506,394,2.937,395,2.287,396,3.744,397,2.664,398,2.909,399,2.909,400,2.506,401,3.503,402,2.937,403,2.937,404,2.011,405,3.625,406,2.937,407,2.011,408,3.625,409,2.937,410,2.011,411,4.005,412,3.625,413,2.937,414,2.011,415,2.506,416,2.223,417,2.507,418,2.506,419,2.506,420,3.625,421,2.506,422,2.937,423,2.937,424,2.937,425,2.937,426,2.506,427,2.937,428,2.506,429,2.937,430,2.506,431,2.937]],["title/modules/BookModule.html",[47,1.252,60,2.25]],["body/modules/BookModule.html",[2,2.186,3,0.271,4,0.303,5,0.271,12,0.021,19,0.723,21,1.036,30,0.336,31,0.189,45,0.016,46,0.016,47,2.143,49,1.937,50,2.063,51,2.36,52,2.36,53,2.063,54,3.304,55,2.36,60,4.277,64,3.004,65,2.36,66,2.203,392,4.203,417,3.426,418,3.742,432,3.742,433,3.742,434,4.385,435,4.385]],["title/injectables/BookService.html",[154,1.059,417,1.802]],["body/injectables/BookService.html",[3,0.185,4,0.207,5,0.185,7,0.353,8,1.422,12,0.022,14,1.008,16,1.93,19,0.594,21,0.708,30,0.23,31,0.129,32,1.323,33,1.505,39,1.825,45,0.013,46,0.013,154,1.272,155,1.505,158,1.323,159,1.879,160,2.162,162,1.825,163,1.726,164,0.795,165,1.461,166,2.097,172,1.612,298,2.53,299,1.826,361,2.319,395,2.319,396,3.778,397,2.702,398,2.95,399,2.95,400,3.677,401,2.496,404,2.95,407,2.95,410,2.95,411,3.461,417,2.164,436,2.556,437,2.995,438,5.045,439,2.995,440,2.995,441,2.995,442,2.995,443,5.045,444,2.995,445,1.879,446,2.995,447,2.995,448,2.995,449,2.995,450,2.995]],["title/classes/CreateBookDto.html",[31,0.155,401,2.078]],["body/classes/CreateBookDto.html",[3,0.228,4,0.255,5,0.228,7,0.434,11,2.621,12,0.021,14,1.045,19,0.434,30,0.283,31,0.215,45,0.015,46,0.015,164,0.857,165,1.244,171,2.647,278,0.973,280,1.554,288,4.773,290,2.134,299,1.39,401,2.883,451,5.545,452,2.788,453,5.636,454,4.81,455,5.636,456,5.636,457,5.636,458,5.636,459,3.683,460,3.143,461,3.683,462,3.683,463,3.683,464,3.683,465,3.683,466,4.976,467,3.767,468,3.767,469,5.152]],["title/classes/CreateOrderDto.html",[31,0.155,470,2.078]],["body/classes/CreateOrderDto.html",[3,0.294,4,0.329,5,0.294,7,0.56,11,1.979,12,0.021,14,0.789,19,0.56,30,0.365,31,0.254,45,0.017,46,0.017,164,0.647,278,1.258,280,1.834,288,4.446,290,2.757,299,1.641,460,4.062,467,4.446,470,3.403,471,5.013,472,3.603,473,5.438,474,4.759]],["title/classes/EditUserDto.html",[31,0.155,475,2.25]],["body/classes/EditUserDto.html",[3,0.252,4,0.282,5,0.252,7,0.481,11,2.466,12,0.021,14,0.983,19,0.481,30,0.313,31,0.23,45,0.016,46,0.016,164,0.806,165,1.672,171,2.621,278,1.078,280,1.663,281,2.98,287,4.546,290,2.364,468,4.759,469,5.062,475,3.342,476,5.366,477,3.482,478,5.931,479,5.931,480,4.08,481,4.08,482,5.327,483,4.08,484,4.08]],["title/interfaces/Flags.html",[485,1.931,486,2.456]],["body/interfaces/Flags.html",[3,0.191,4,0.213,5,0.191,7,0.363,12,0.022,19,0.518,31,0.133,37,2.111,39,0.962,45,0.013,46,0.013,75,1.933,117,2.367,148,2.631,163,0.91,164,0.598,165,1.397,176,4.652,184,1.659,232,2.976,242,4.375,245,3.753,267,3.329,280,1.373,292,1.659,309,2.367,331,2.759,485,1.659,486,4.508,487,2.333,488,2.111,489,2.111,490,5.91,491,5.245,492,3.753,493,3.082,494,3.082,495,3.082,496,3.082,497,3.329,498,5.91,499,4.397,500,4.397,501,3.082,502,5.126,503,4.397,504,3.082,505,3.082,506,3.082,507,3.082,508,3.082,509,3.082,510,3.082,511,3.082,512,2.333,513,3.082,514,3.082,515,2.631,516,3.082,517,2.333,518,3.082,519,3.082,520,3.082,521,3.082,522,3.082,523,3.082]],["title/classes/GraphqlContext.html",[31,0.155,90,1.802]],["body/classes/GraphqlContext.html",[3,0.274,4,0.307,5,0.274,7,0.523,12,0.021,14,0.932,19,0.523,30,0.431,31,0.243,45,0.017,46,0.017,90,2.826,135,3.872,136,3.872,164,0.765,209,3.872,222,2.231,278,1.173,280,1.756,299,1.24,359,2.419,485,2.39,524,3.041,525,3.872,526,4.44,527,4.44,528,3.259,529,3.361,530,2.089]],["title/classes/IMutation.html",[31,0.155,303,2.078]],["body/classes/IMutation.html",[3,0.225,4,0.251,5,0.225,7,0.428,8,1.628,12,0.021,14,0.817,16,1.628,30,0.481,31,0.259,45,0.015,46,0.015,150,3.243,162,1.539,163,1.456,164,0.816,165,1.232,171,2.352,205,3.093,206,3.093,278,0.96,281,2.477,282,2.105,291,3.563,292,1.955,295,3.243,296,2.279,297,3.243,298,1.51,299,1.015,300,2.279,301,2.279,302,4.533,303,2.856,304,3.376,305,4.111,306,3.376,307,2.279,308,2.279,309,1.955,361,2.654,531,3.632,532,3.632]],["title/classes/JwtGuard.html",[31,0.155,533,2.25]],["body/classes/JwtGuard.html",[3,0.31,4,0.346,5,0.31,12,0.021,14,0.83,19,0.59,30,0.384,31,0.216,45,0.018,46,0.018,158,2.879,278,1.323,530,2.356,533,3.801,534,4.273,535,5.007,536,5.007,537,3.79,538,5.007,539,3.79]],["title/injectables/JwtStrategy.html",[154,1.059,313,2.25]],["body/injectables/JwtStrategy.html",[3,0.161,4,0.18,5,0.161,7,0.307,8,1.284,12,0.022,14,0.855,16,1.284,19,0.682,21,0.615,30,0.2,31,0.112,32,1.151,39,1.611,45,0.011,46,0.011,70,1.509,96,2.919,102,1.971,110,2.943,135,1.634,154,1.148,155,1.309,158,1.151,160,2.022,162,1.453,163,1.374,164,0.788,165,1.163,166,1.935,171,2.022,172,1.402,222,1.309,223,3.534,225,3.765,226,2.663,232,2.19,233,2.223,239,1.971,262,3.319,280,1.214,281,2.338,298,1.083,299,1.086,309,2.778,313,2.439,318,2.223,342,2.663,348,2.439,359,1.524,367,1.634,375,1.971,384,1.971,385,2.223,528,1.509,530,1.225,537,1.971,539,1.971,540,2.223,541,4.653,542,4.653,543,3.888,544,3.888,545,2.223,546,3.888,547,3.888,548,5.161,549,2.604,550,3.888,551,3.888,552,2.604,553,2.604,554,2.604,555,2.223,556,2.604,557,2.223,558,2.604,559,2.604,560,2.604,561,2.604,562,2.604,563,2.604,564,2.604,565,3.888,566,2.604,567,2.604,568,2.604,569,2.604,570,2.604,571,2.604,572,2.604,573,3.888,574,2.604,575,2.604,576,2.223,577,2.604,578,2.604]],["title/classes/Order.html",[31,0.155,579,2.715]],["body/classes/Order.html",[3,0.335,4,0.375,5,0.335,12,0.02,30,0.416,31,0.234,45,0.019,46,0.019,278,1.432,579,4.806,580,4.623]],["title/controllers/OrderController.html",[0,1.491,581,2.456]],["body/controllers/OrderController.html",[0,1.13,2,1.065,3,0.168,4,0.188,5,0.168,7,0.32,8,1.325,11,2.337,12,0.022,14,0.931,16,1.856,19,0.693,21,0.642,30,0.209,31,0.117,32,1.201,33,1.366,39,1.755,45,0.012,46,0.012,157,2.245,162,1.645,163,1.556,164,0.717,165,1.317,168,1.575,203,1.862,216,3.268,219,3.612,298,2.446,299,1.86,348,2.994,395,2.569,396,3.609,397,2.518,398,2.749,399,2.749,404,1.862,405,3.426,407,1.862,408,3.426,410,1.862,412,3.426,414,1.862,415,2.32,416,2.057,419,2.32,421,2.32,426,2.32,428,2.32,430,2.32,470,3.62,533,1.705,581,2.749,582,2.32,583,2.32,584,2.718,585,2.718,586,2.718,587,2.718,588,2.718,589,3.919,590,2.718,591,2.32,592,3.426,593,2.765,594,2.32,595,1.862,596,2.32,597,2.32,598,2.32,599,2.718,600,2.718,601,2.718,602,2.718,603,2.718,604,2.718,605,2.718,606,2.718]],["title/modules/OrderModule.html",[47,1.252,61,2.25]],["body/modules/OrderModule.html",[2,2.046,3,0.245,4,0.274,5,0.245,12,0.021,19,0.761,21,0.935,30,0.304,31,0.171,45,0.015,46,0.015,47,2.041,49,1.749,50,1.863,51,2.131,52,2.131,53,1.863,54,3.146,55,2.131,61,4.399,64,2.811,65,2.131,66,1.989,417,3.333,581,4.002,593,3.843,594,3.378,607,3.378,608,3.378,609,3.333,610,3.958,611,3.958,612,3.378,613,3.378]],["title/injectables/OrderService.html",[154,1.059,593,2.078]],["body/injectables/OrderService.html",[3,0.144,4,0.161,5,0.144,7,0.275,8,1.182,12,0.022,14,0.92,16,1.738,19,0.62,21,0.552,30,0.179,31,0.101,33,2.187,37,1.599,39,1.643,45,0.011,46,0.011,113,1.767,154,1.057,155,1.173,157,2.048,158,1.582,159,1.464,160,1.913,162,1.643,163,1.555,164,0.716,165,1.316,166,1.81,168,1.353,172,1.257,184,2.344,185,2.187,225,2.731,232,2.297,298,2.404,299,1.709,350,1.992,359,1.403,361,2.344,372,3.715,390,2.451,395,1.927,396,3.343,397,2.245,398,2.451,399,2.451,404,2.451,407,2.451,410,2.451,417,2.905,445,1.464,454,3.055,470,2.074,589,3.062,593,2.074,609,2.905,612,1.992,613,1.992,614,1.992,615,2.334,616,3.579,617,4.353,618,2.334,619,2.334,620,2.334,621,2.334,622,4.353,623,2.334,624,2.334,625,2.334,626,3.579,627,3.715,628,3.579,629,2.334,630,2.334,631,4.353,632,4.353,633,2.334,634,4.353,635,2.334,636,2.334,637,2.334,638,2.334,639,1.992,640,2.334,641,2.334,642,2.334,643,2.334,644,2.334,645,2.334,646,2.334]],["title/classes/PrismaClientExceptionFilter.html",[31,0.155,647,2.715]],["body/classes/PrismaClientExceptionFilter.html",[3,0.167,4,0.187,5,0.167,7,0.318,8,1.32,12,0.022,14,0.448,16,0.893,19,0.692,21,0.639,30,0.207,31,0.117,36,2.508,45,0.012,46,0.012,75,1.696,100,2.308,101,2.308,106,3.413,137,2.308,162,0.844,163,0.799,164,0.368,165,0.676,166,1.662,170,4.272,177,2.047,194,2.047,209,2.508,218,2.308,222,1.359,232,2.763,278,0.715,326,2.047,353,4.788,354,2.308,355,2.308,363,2.047,366,4.486,367,3.996,368,2.308,371,3.413,384,2.047,445,1.696,530,1.882,647,3.027,648,3.413,649,4.486,650,3.413,651,2.308,652,4.758,653,3.413,654,4.758,655,2.704,656,4.758,657,5.257,658,5.257,659,5.257,660,2.704,661,3.999,662,2.704,663,2.308,664,2.704,665,2.704,666,2.704,667,2.704,668,2.704,669,2.704,670,3.999,671,2.704,672,2.704,673,2.704,674,2.704,675,2.704,676,2.704,677,3.999,678,2.704,679,2.704,680,2.704,681,2.704,682,3.999,683,3.999,684,3.413,685,2.704,686,2.704,687,2.704,688,2.704,689,2.704,690,2.704,691,2.704,692,2.047,693,2.704,694,2.704,695,2.704]],["title/modules/PrismaModule.html",[47,1.252,62,1.931]],["body/modules/PrismaModule.html",[3,0.267,4,0.298,5,0.267,12,0.021,19,0.65,21,1.019,30,0.331,31,0.186,45,0.016,46,0.016,47,2.127,49,1.906,50,2.03,51,2.322,52,2.322,53,2.03,54,3.279,55,3.279,62,3.716,64,2.972,65,2.322,66,2.167,160,2.822,696,3.681,697,3.681,698,3.681,699,4.313,700,5.521,701,4.313]],["title/injectables/PrismaService.html",[154,1.059,160,1.405]],["body/injectables/PrismaService.html",[3,0.216,4,0.157,5,0.14,7,0.267,8,1.154,12,0.022,14,0.796,16,1.41,19,0.611,21,0.535,30,0.174,31,0.098,39,1.334,45,0.01,46,0.01,70,1.312,85,1.714,110,1.714,117,1.882,143,1.421,154,1.033,155,1.138,157,2.78,158,1.001,160,1.37,162,1.092,163,1.033,164,0.475,165,0.874,166,0.941,180,1.551,185,2.414,193,1.551,200,1.714,223,3.29,226,1.551,232,2.443,363,1.714,367,1.421,445,1.421,530,1.645,539,1.714,545,2.984,557,1.933,627,1.933,653,1.933,692,1.714,702,1.714,703,4.271,704,4.803,705,3.497,706,5.487,707,2.264,708,2.264,709,3.497,710,4.803,711,2.264,712,2.264,713,2.984,714,2.264,715,1.933,716,1.933,717,2.647,718,1.933,719,4.1,720,1.551,721,4.1,722,2.984,723,3.645,724,1.933,725,3.233,726,2.264,727,1.933,728,2.264,729,2.264,730,2.264,731,3.497,732,2.264,733,2.264,734,2.264,735,2.264,736,2.264,737,2.264,738,2.264,739,2.264,740,2.264,741,2.984,742,3.497,743,2.264,744,2.264,745,2.264,746,2.264,747,2.264,748,2.264,749,2.264,750,2.264,751,2.264,752,2.264,753,2.264,754,2.264,755,2.264,756,2.264,757,1.933,758,2.264,759,2.984,760,2.264,761,2.264,762,2.264,763,2.264,764,2.264,765,2.264,766,2.264,767,2.264,768,2.264,769,2.264,770,2.264,771,2.264,772,2.264,773,2.264,774,2.264,775,2.264,776,2.264,777,2.264,778,2.264,779,2.264,780,2.264,781,2.264,782,1.933,783,2.264,784,2.264,785,2.264]],["title/classes/RequestWithUser.html",[31,0.155,525,2.25]],["body/classes/RequestWithUser.html",[3,0.28,4,0.314,5,0.28,7,0.534,12,0.021,14,0.751,19,0.534,30,0.437,31,0.246,45,0.017,46,0.017,90,2.279,135,2.845,136,2.845,164,0.617,209,3.576,222,2.279,278,1.199,280,1.779,299,1.267,359,2.695,485,2.441,524,3.106,525,3.91,528,3.612,529,3.433,530,2.682,786,4.535]],["title/classes/ServiceStatus.html",[31,0.155,173,2.456]],["body/classes/ServiceStatus.html",[3,0.188,4,0.21,5,0.188,7,0.358,9,2.3,10,2.3,12,0.022,14,0.92,19,0.513,21,0.718,22,1.635,30,0.233,31,0.188,32,1.342,33,1.526,36,3.19,39,1.359,45,0.013,46,0.013,117,2.343,143,1.906,154,1.285,156,2.3,157,1.43,158,1.923,160,1.705,162,0.948,163,0.897,164,0.755,165,0.759,166,1.809,170,2.081,171,2.176,172,1.635,173,3.803,174,5.598,175,5.22,176,4.204,177,4.449,178,5.016,179,3.294,180,2.981,181,2.593,182,2.3,183,3.714,184,2.343,185,1.526,186,2.593,187,2.593,188,2.593,189,2.593,190,2.593,191,2.593,192,2.3,193,2.981,194,3.294,195,2.3,196,3.714,197,2.593,198,2.593,199,2.593,200,2.3,278,0.803,280,1.359,512,3.849,787,3.038,788,3.038,789,3.038,790,3.038,791,3.038]],["title/classes/SignUpPayload.html",[31,0.155,297,2.078]],["body/classes/SignUpPayload.html",[3,0.234,4,0.262,5,0.234,7,0.446,12,0.021,14,1.012,30,0.488,31,0.264,45,0.015,46,0.015,150,3.688,164,0.891,171,2.494,278,1.001,280,1.583,281,3.068,282,2.195,291,3.078,292,2.039,295,2.938,296,2.376,297,3.313,298,2.377,299,1.417,300,3.587,301,3.587,302,3.916,303,2.195,304,2.594,305,3.473,306,2.594,307,2.376,308,2.376,309,2.039,792,3.788,793,3.788,794,3.788,795,3.788]],["title/classes/UpdateBookDto.html",[31,0.155,411,2.25]],["body/classes/UpdateBookDto.html",[3,0.311,4,0.348,5,0.311,12,0.021,19,0.716,30,0.386,31,0.217,45,0.018,46,0.018,278,1.33,395,2.708,401,2.915,411,3.812,420,4.294,452,3.808,530,2.367,796,4.294,797,4.294,798,3.808,799,3.808,800,5.031]],["title/classes/UpdateOrderDto.html",[31,0.155,589,2.25]],["body/classes/UpdateOrderDto.html",[3,0.274,4,0.307,5,0.274,7,0.523,11,1.846,12,0.021,14,0.736,19,0.727,30,0.341,31,0.243,45,0.017,46,0.017,164,0.604,165,1.406,278,1.173,280,1.756,290,2.572,299,1.571,395,2.39,467,4.257,468,4.257,470,2.572,472,3.361,473,5.268,530,2.089,589,3.528,592,3.789,797,3.789,798,3.361,799,3.361,801,4.8,802,4.44,803,4.44,804,4.44]],["title/interfaces/User.html",[359,1.405,485,1.931]],["body/interfaces/User.html",[3,0.283,4,0.316,5,0.283,7,0.539,12,0.021,19,0.539,30,0.44,31,0.247,45,0.017,46,0.017,90,2.298,135,2.869,136,2.869,164,0.622,209,3.595,222,2.298,280,1.789,299,1.748,359,2.57,485,2.462,487,3.462,524,3.133,525,3.595,528,3.32,529,4.966,530,2.152]],["title/controllers/UserController.html",[0,1.491,805,2.25]],["body/controllers/UserController.html",[0,1.256,2,1.184,3,0.187,4,0.209,5,0.187,7,0.356,8,1.431,11,2.108,12,0.022,14,0.84,16,1.674,19,0.719,21,0.714,30,0.232,31,0.13,32,1.335,39,1.583,45,0.013,46,0.013,154,1.28,157,2.385,162,1.583,163,1.497,164,0.689,165,1.267,168,1.75,170,2.069,185,1.518,195,2.286,203,2.069,212,3.679,216,2.968,299,1.705,348,3.475,359,2.52,414,2.968,416,3.281,445,1.895,475,3.475,528,1.75,533,1.895,591,2.578,595,2.069,596,2.578,597,2.578,598,4.326,609,2.547,684,2.578,805,2.719,806,2.578,807,2.578,808,3.699,809,3.699,810,4.334,811,2.578,812,3.021,813,3.021,814,2.578,815,3.021,816,3.021,817,3.021,818,3.021,819,3.021,820,2.578,821,3.021,822,3.021,823,3.021,824,3.021,825,3.021,826,3.021,827,3.021,828,2.578,829,3.021,830,3.021,831,3.021,832,3.021,833,3.021]],["title/modules/UserModule.html",[47,1.252,63,2.25]],["body/modules/UserModule.html",[2,1.992,3,0.235,4,0.263,5,0.235,12,0.021,19,0.751,21,0.898,30,0.292,31,0.164,45,0.015,46,0.015,47,2,49,1.68,50,1.789,51,2.047,52,2.047,53,1.789,54,3.083,55,2.047,59,3.8,62,3.531,63,4.435,64,2.737,65,2.047,66,1.91,68,3.848,71,3.245,93,2.878,609,3.295,805,4.269,820,3.245,834,3.245,835,3.802,836,3.245,837,3.802,838,3.802]],["title/injectables/UserService.html",[154,1.059,609,1.802]],["body/injectables/UserService.html",[3,0.189,4,0.212,5,0.189,7,0.361,8,1.446,12,0.022,14,0.924,16,1.687,19,0.602,21,0.724,30,0.235,31,0.132,32,1.354,39,1.595,45,0.013,46,0.013,154,1.293,155,1.54,157,2.886,158,1.354,159,1.922,160,2.185,162,1.741,163,1.646,164,0.758,165,1.393,166,1.821,168,2.537,172,1.65,185,2.2,212,3.848,232,2.061,298,2.124,299,1.836,348,3.961,359,2.185,361,1.65,375,2.32,397,2.747,414,2.999,475,3.497,609,2.2,639,2.615,808,3.737,809,3.737,811,3.737,814,3.737,839,2.615,840,3.064,841,3.064,842,3.064,843,4.379,844,3.064,845,3.064,846,4.379,847,3.064]],["title/coverage.html",[848,3.699]],["body/coverage.html",[0,2.144,1,1.528,5,0.138,6,1.904,12,0.021,22,1.201,31,0.292,45,0.01,46,0.01,53,1.05,67,2.617,90,1.121,96,1.4,98,1.689,154,1.736,156,2.617,160,0.874,164,0.303,173,1.528,184,1.201,201,1.4,202,1.904,208,1.293,220,1.201,267,2.617,279,1.904,291,1.201,292,2.566,295,1.293,297,1.293,303,1.293,313,1.4,319,1.528,323,1.904,331,1.4,340,1.904,359,0.874,390,1.528,391,1.904,392,1.528,393,1.904,401,1.293,411,1.4,417,1.121,436,1.904,451,1.904,452,2.617,470,1.293,471,1.904,472,2.617,475,1.4,476,1.904,477,1.904,485,1.861,486,2.367,488,3.531,489,3.531,517,1.689,524,2.898,525,1.4,533,1.4,534,1.904,540,1.904,576,6.203,579,1.689,580,1.904,581,1.528,582,1.904,589,1.4,593,1.293,595,1.528,609,1.121,614,1.904,647,1.689,648,1.904,649,2.95,650,1.904,651,1.904,702,3.203,717,1.689,725,1.689,796,1.904,801,1.904,805,2.168,806,2.95,839,1.904,848,1.689,849,1.689,850,2.231,851,2.231,852,5.689,853,5.689,854,6.035,855,6.532,856,5.689,857,4.766,858,2.95,859,2.95,860,1.904,861,4.231,862,3.457,863,1.904,864,1.904,865,2.231,866,2.231]],["title/dependencies.html",[50,2.029,867,2.559]],["body/dependencies.html",[12,0.022,21,0.844,27,2.703,28,3.689,31,0.21,45,0.014,46,0.014,50,1.68,70,2.069,72,3.048,75,2.24,77,3.048,81,4.272,84,3.048,85,2.703,88,3.048,118,3.048,151,3.048,166,1.485,222,1.794,239,2.703,290,2.069,317,2.703,342,2.446,352,3.048,537,2.703,555,4.159,663,3.048,713,3.048,715,3.048,716,3.048,741,3.048,798,2.703,799,2.703,868,3.571,869,3.571,870,3.571,871,5.547,872,3.571,873,3.571,874,3.571,875,3.571,876,3.571,877,3.571,878,3.571,879,3.571,880,3.571,881,3.571,882,3.571,883,3.571,884,3.571,885,3.571,886,3.571,887,3.571,888,3.571,889,3.571,890,3.571,891,3.571,892,3.571,893,3.571,894,3.571,895,3.571,896,3.571,897,3.571,898,3.048,899,3.571,900,3.571,901,3.571,902,3.571,903,3.571,904,3.571,905,3.571,906,3.571,907,3.571]],["title/miscellaneous/functions.html",[908,1.737,909,3.679]],["body/miscellaneous/functions.html",[7,0.607,12,0.019,45,0.018,46,0.018,53,3.104,162,1.609,163,1.522,165,1.288,331,3.233,488,3.529,489,4.222,497,3.901,863,5.261,864,4.398,908,2.986,909,4.398,910,5.153,911,4.398]],["title/index.html",[7,0.353,912,2.559,913,2.559]],["body/index.html",[2,1.597,12,0.021,45,0.012,46,0.012,47,0.969,49,1.801,81,1.901,96,3.03,99,4.029,102,3.656,105,2.368,107,2.368,108,2.368,111,3.478,145,2.368,166,2.008,180,2.791,182,2.101,204,2.368,205,1.741,206,1.741,241,2.368,246,2.368,256,2.368,282,1.608,342,1.901,359,1.087,361,2.194,395,1.494,491,2.368,583,3.478,692,2.101,720,1.901,727,3.478,757,3.478,782,3.478,807,3.478,828,4.122,848,2.101,849,3.656,898,4.122,914,2.775,915,2.368,916,2.775,917,4.076,918,6.126,919,4.076,920,2.775,921,2.775,922,2.775,923,2.775,924,2.775,925,2.775,926,2.775,927,2.775,928,2.775,929,2.775,930,2.775,931,4.076,932,2.775,933,2.775,934,2.775,935,2.775,936,4.076,937,4.83,938,2.775,939,2.775,940,2.775,941,2.775,942,2.775,943,2.775,944,4.076,945,2.775,946,2.775,947,2.775,948,2.775,949,2.775,950,2.775,951,2.775,952,2.775,953,2.775,954,2.775,955,2.775,956,2.368,957,2.775,958,2.775,959,2.775,960,2.775,961,2.775,962,2.775,963,2.775,964,2.775,965,4.076,966,4.83,967,2.775,968,2.775,969,2.775,970,2.775,971,2.775,972,2.775,973,2.775,974,2.775,975,2.775,976,2.775,977,2.775,978,2.775,979,2.775,980,2.775,981,2.775,982,2.775,983,2.775,984,2.775,985,6.284,986,2.775,987,2.775,988,2.775,989,2.368,990,2.775,991,2.775,992,2.775,993,5.927,994,2.775,995,2.775,996,2.775,997,2.775,998,2.775,999,2.775,1000,2.101,1001,2.775]],["title/license.html",[912,2.559,913,2.559,1002,2.269]],["body/license.html",[12,0.015,45,0.015,46,0.015,66,1.917,193,2.613,222,1.917,364,4.349,720,2.613,849,2.888,956,3.256,989,4.349,1000,2.888,1002,2.888,1003,5.738,1004,3.816,1005,3.816,1006,3.816,1007,5.096,1008,3.816,1009,3.816,1010,3.816,1011,3.816,1012,3.816,1013,3.816,1014,6.896,1015,3.816,1016,3.816,1017,5.738,1018,3.816,1019,5.096,1020,3.816,1021,3.816,1022,3.816,1023,3.816,1024,3.816,1025,3.816,1026,3.816,1027,3.816,1028,3.816,1029,5.096,1030,3.816,1031,3.816,1032,3.816,1033,3.816,1034,3.816,1035,3.816,1036,3.816,1037,5.096,1038,5.096,1039,3.816,1040,3.816,1041,3.816,1042,3.816,1043,3.816,1044,3.816,1045,3.816,1046,3.816,1047,3.816,1048,3.816,1049,3.816,1050,3.816,1051,3.816,1052,3.816,1053,3.816,1054,3.816,1055,3.816,1056,3.816,1057,3.816,1058,3.816,1059,3.816,1060,3.816,1061,3.816,1062,3.816,1063,3.816,1064,3.816,1065,3.816]],["title/modules.html",[49,2.159]],["body/modules.html",[12,0.018,45,0.018,46,0.018,48,3.35,49,2.161,59,2.834,60,3.068,61,3.068,62,2.633,63,3.068,1066,7.007,1067,7.007,1068,7.007,1069,7.007]],["title/overview.html",[1070,4.171]],["body/overview.html",[2,1.267,12,0.021,22,2.833,45,0.013,46,0.013,47,1.129,48,4.784,49,1.428,50,1.521,51,1.74,52,1.74,53,1.521,54,1.74,55,1.74,56,2.759,57,2.759,58,2.759,59,3.908,60,3.775,61,4.175,62,3.525,63,4.278,64,2.449,65,1.74,66,1.624,155,1.624,160,2.513,220,2.833,278,0.854,310,2.759,311,2.759,313,3.301,417,2.869,432,2.759,433,2.759,487,2.447,593,3.049,607,2.759,608,2.759,609,2.869,696,2.759,697,2.759,698,2.759,759,2.759,805,3.301,834,2.759,836,2.759,1070,2.759,1071,3.233,1072,3.233,1073,3.233,1074,3.233]],["title/properties.html",[280,1.346,867,2.559]],["body/properties.html",[12,0.021,45,0.018,46,0.018,280,1.578,915,4.314,1000,3.826,1002,3.826,1075,5.055,1076,5.055,1077,5.055,1078,5.055,1079,5.055,1080,5.055,1081,6.094,1082,5.055,1083,5.055,1084,5.055,1085,5.055,1086,5.055]],["title/miscellaneous/typealiases.html",[908,1.737,1087,4.311]],["body/miscellaneous/typealiases.html",[7,0.625,12,0.02,45,0.018,46,0.018,150,3.635,164,0.722,292,2.858,307,3.936,308,3.33,309,2.858,908,3.076,1088,5.308,1089,6.274]],["title/miscellaneous/variables.html",[908,1.737,1090,3.679]],["body/miscellaneous/variables.html",[3,0.191,7,0.364,12,0.022,36,4.132,39,1.747,45,0.013,46,0.013,67,2.34,90,1.553,96,2.764,97,2.638,98,3.336,99,2.34,134,2.34,143,1.939,164,0.698,171,2.012,179,3.336,184,1.664,232,2.416,326,3.336,331,2.764,359,1.727,361,3.013,367,1.939,486,3.517,488,2.117,489,3.833,492,2.638,497,2.34,512,4.985,515,2.638,517,3.336,528,1.791,595,3.018,702,2.34,717,3.336,718,2.638,719,4.777,720,2.117,721,4.777,722,2.638,723,4.382,724,2.638,725,3.336,858,2.638,859,4.382,860,3.761,908,1.791,911,4.382,1090,2.638,1091,4.406,1092,4.406,1093,4.406,1094,4.406,1095,4.406,1096,3.091,1097,3.091,1098,3.091,1099,3.091,1100,3.091,1101,3.091]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":576,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["0.1.13",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1076,"title":{},"body":{"properties.html":{}}}],["0.30.3",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/Flags.html":{},"injectables/OrderService.html":{}}}],["1.4.6",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["1.78.0",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["12.0.7",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["12.0.8",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["12.2.3",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["16.7.1",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["17.9.2",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1074,"title":{},"body":{"overview.html":{}}}],["18.0.2",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["1hr",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":759,"title":{},"body":{"injectables/PrismaService.html":{},"overview.html":{}}}],["2.0.0",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1005,"title":{},"body":{"license.html":{}}}],["3.0.0",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["3600000",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["4.0.1",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5",{"_index":1072,"title":{},"body":{"overview.html":{}}}],["5.2.3",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":687,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["6",{"_index":1071,"title":{},"body":{"overview.html":{}}}],["60",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["7.8.1",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["7d056s1koop2",{"_index":695,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["8",{"_index":1073,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1036,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":302,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["access_token",{"_index":296,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["accessible",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":1060,"title":{},"body":{"license.html":{}}}],["actual",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["aliases",{"_index":1088,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":925,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1027,"title":{},"body":{"license.html":{}}}],["angular",{"_index":972,"title":{},"body":{"index.html":{}}}],["api",{"_index":828,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["api.bookstore.nas",{"_index":914,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["apollodriver",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagegraphqlplayground",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["app.close",{"_index":778,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["app.dto",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appended",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":935,"title":{},"body":{"index.html":{}}}],["arg",{"_index":499,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice",{"_index":511,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(1).split",{"_index":508,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.slice(2",{"_index":504,"title":{},"body":{"interfaces/Flags.html":{}}}],["arg.startswith",{"_index":500,"title":{},"body":{"interfaces/Flags.html":{}}}],["argon",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(dto.password",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.verify(user.hash",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["args",{"_index":331,"title":{},"body":{"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":495,"title":{},"body":{"interfaces/Flags.html":{}}}],["argumentshost",{"_index":658,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["arising",{"_index":1064,"title":{},"body":{"license.html":{}}}],["array",{"_index":496,"title":{},"body":{"interfaces/Flags.html":{}}}],["asia/kolkata",{"_index":776,"title":{},"body":{"injectables/PrismaService.html":{}}}],["associated",{"_index":1015,"title":{},"body":{"license.html":{}}}],["async",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth.resolver",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth/auth.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/decorator",{"_index":596,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["auth/guard",{"_index":597,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["authcontroller",{"_index":201,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authdto",{"_index":208,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authenticated",{"_index":926,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":958,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":536,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authguard('jwt",{"_index":538,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authinput",{"_index":291,"title":{"classes/AuthInput.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1085,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":959,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1053,"title":{},"body":{"license.html":{}}}],["authpayload",{"_index":295,"title":{"classes/AuthPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["authresolver",{"_index":319,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":220,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":1078,"title":{},"body":{"properties.html":{}}}],["based",{"_index":683,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["baseexceptionfilter",{"_index":652,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["between",{"_index":952,"title":{},"body":{"index.html":{}}}],["body",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["book",{"_index":390,"title":{"classes/Book.html":{}},"body":{"classes/Book.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["book.controller",{"_index":435,"title":{},"body":{"modules/BookModule.html":{}}}],["book.dto",{"_index":420,"title":{},"body":{"controllers/BookController.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts",{"_index":452,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.dto.ts:10",{"_index":465,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:14",{"_index":459,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:18",{"_index":461,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:22",{"_index":463,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:6",{"_index":464,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.point",{"_index":631,"title":{},"body":{"injectables/OrderService.html":{}}}],["book.service",{"_index":418,"title":{},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{}}}],["book/book.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["book/book.service",{"_index":613,"title":{},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{}}}],["bookcontroller",{"_index":392,"title":{"controllers/BookController.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"coverage.html":{}}}],["bookid",{"_index":473,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["bookmodule",{"_index":60,"title":{"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["bookpoint",{"_index":636,"title":{},"body":{"injectables/OrderService.html":{}}}],["books",{"_index":394,"title":{},"body":{"controllers/BookController.html":{}}}],["bookservice",{"_index":417,"title":{"injectables/BookService.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["bookstore.nas",{"_index":1079,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Flags.html":{},"classes/ServiceStatus.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["browse",{"_index":1069,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1066,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1082,"title":{},"body":{"properties.html":{}}}],["built",{"_index":917,"title":{},"body":{"index.html":{}}}],["business",{"_index":936,"title":{},"body":{"index.html":{}}}],["c",{"_index":1004,"title":{},"body":{"license.html":{}}}],["cache",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('home",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["cachemodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(5",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(number.max_safe_integer",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(undefined)@get('health",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["case",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["catch",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["catch((err",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["catch(exception",{"_index":655,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["catch(prismaclientunknownrequesterror",{"_index":664,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["chalk",{"_index":745,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.cyan(json.stringify(e.params",{"_index":750,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.green(e.query",{"_index":748,"title":{},"body":{"injectables/PrismaService.html":{}}}],["chalk.magenta(`${e.duration}ms",{"_index":752,"title":{},"body":{"injectables/PrismaService.html":{}}}],["charge",{"_index":1011,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1056,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"classes/Order.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":278,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"classes/Order.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"overview.html":{}}}],["cleandb",{"_index":704,"title":{},"body":{"injectables/PrismaService.html":{}}}],["clear",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["client",{"_index":649,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bookmodule",{"_index":432,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_providers",{"_index":433,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":607,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_providers",{"_index":608,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":696,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":697,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":698,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":834,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":835,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":836,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["compodoc",{"_index":969,"title":{},"body":{"index.html":{}}}],["compression",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["concerns",{"_index":940,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1035,"title":{},"body":{"license.html":{}}}],["config",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":738,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mode",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":957,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["configuration",{"_index":954,"title":{},"body":{"index.html":{}}}],["connect",{"_index":187,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connected",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["connecting",{"_index":772,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"license.html":{}}}],["connectors/postgresql#configuring",{"_index":734,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.count('db",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["console.debug",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/OrderService.html":{}}}],["console.debug(req.cookies",{"_index":574,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.error",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ServiceStatus.html":{}}}],["console.error('db",{"_index":689,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.error('db:caught",{"_index":685,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.error(exception.message",{"_index":665,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.info(new",{"_index":771,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":845,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('extracted",{"_index":577,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('flags",{"_index":516,"title":{},"body":{"interfaces/Flags.html":{}}}],["console.log(chalk.yellow('duration",{"_index":751,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('params",{"_index":749,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(chalk.yellow('query",{"_index":747,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('duration",{"_index":769,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('params",{"_index":767,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log(kleur.yellow('query",{"_index":765,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":675,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["constructor",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":324,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(config",{"_index":545,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(ok",{"_index":787,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["constructor(prisma",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["context",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1061,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('books",{"_index":422,"title":{},"body":{"controllers/BookController.html":{}}}],["controller('orders",{"_index":599,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('users",{"_index":821,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["cookie",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["cookiename",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["cookies",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["copies",{"_index":1029,"title":{},"body":{"license.html":{}}}],["copy",{"_index":989,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1003,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":848,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coverimage",{"_index":453,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["create",{"_index":395,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"index.html":{}}}],["create(@body",{"_index":423,"title":{},"body":{"controllers/BookController.html":{}}}],["create(createbookdto",{"_index":400,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["create(createorderdto",{"_index":616,"title":{},"body":{"injectables/OrderService.html":{}}}],["create(userid",{"_index":584,"title":{},"body":{"controllers/OrderController.html":{}}}],["createbookdto",{"_index":401,"title":{"classes/CreateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["createdat",{"_index":300,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["createorderdto",{"_index":470,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":928,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":326,"title":{},"body":{"classes/AuthResolver.html":{},"classes/PrismaClientExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":667,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["ctx.req",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.res",{"_index":339,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentflag",{"_index":498,"title":{},"body":{"interfaces/Flags.html":{}}}],["customerid",{"_index":602,"title":{},"body":{"controllers/OrderController.html":{}}}],["customize",{"_index":682,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["damages",{"_index":1057,"title":{},"body":{"license.html":{}}}],["data",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":692,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["database_url",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["datasources",{"_index":736,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["datetime",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["db",{"_index":200,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["db_connected",{"_index":725,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_error:unique",{"_index":679,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["dbstatus",{"_index":183,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.debug",{"_index":199,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.ok",{"_index":197,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["dbstatus.status",{"_index":198,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["deal",{"_index":1016,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1065,"title":{},"body":{"license.html":{}}}],["debug",{"_index":178,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthResolver.html":{},"controllers/BookController.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"controllers/OrderController.html":{},"classes/UpdateOrderDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["definitionsfactory",{"_index":517,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["definitionsfactory.generate",{"_index":518,"title":{},"body":{"interfaces/Flags.html":{}}}],["delete",{"_index":414,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":408,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["deleted",{"_index":832,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":808,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@getuser('userid",{"_index":831,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":811,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":915,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["dev/test/prod",{"_index":988,"title":{},"body":{"index.html":{}}}],["development",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["distribute",{"_index":1025,"title":{},"body":{"license.html":{}}}],["docs",{"_index":977,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":849,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":627,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{}}}],["domain",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["domain.com",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["down",{"_index":781,"title":{},"body":{"injectables/PrismaService.html":{}}}],["driver",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.password",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/create",{"_index":419,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["dto/update",{"_index":421,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["due",{"_index":195,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["e",{"_index":744,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.g",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["e.params",{"_index":764,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e.query",{"_index":753,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e2e",{"_index":727,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["edituser",{"_index":809,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituser(@getuser('userid",{"_index":825,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(userid",{"_index":814,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituserdto",{"_index":475,"title":{"classes/EditUserDto.html":{}},"body":{"classes/EditUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["em",{"_index":979,"title":{},"body":{"index.html":{}}}],["email",{"_index":281,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{}}}],["emit",{"_index":719,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":705,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":709,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enough",{"_index":633,"title":{},"body":{"injectables/OrderService.html":{}}}],["env",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":990,"title":{},"body":{"index.html":{}}}],["env.local",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["env.prod",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["env.test",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["envfile",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["error",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["error.code",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["event",{"_index":720,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":730,"title":{},"body":{"injectables/PrismaService.html":{}}}],["exception",{"_index":661,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.code",{"_index":670,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":651,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:16",{"_index":660,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.message",{"_index":669,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.message.replace(/\\n/g",{"_index":668,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception/prisma",{"_index":650,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["executioncontext",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":628,"title":{},"body":{"injectables/OrderService.html":{}}}],["expiration",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":530,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{}}}],["extract",{"_index":494,"title":{},"body":{"interfaces/Flags.html":{}}}],["extractflags",{"_index":863,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractflags(args",{"_index":497,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie",{"_index":543,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwtfromcookie(req",{"_index":547,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":194,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{}}}],["false",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["fieldresolverenhancers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["fields",{"_index":681,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":956,"title":{},"body":{"index.html":{},"license.html":{}}}],["fill",{"_index":991,"title":{},"body":{"index.html":{}}}],["find",{"_index":978,"title":{},"body":{"index.html":{}}}],["findall",{"_index":396,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findone",{"_index":397,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":426,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["findone(id",{"_index":404,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findone(userid",{"_index":843,"title":{},"body":{"injectables/UserService.html":{}}}],["first",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firstname",{"_index":478,"title":{},"body":{"classes/EditUserDto.html":{}}}],["fitness",{"_index":1049,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{}}}],["fixme:unsure",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["flag",{"_index":502,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys",{"_index":507,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagkeys.foreach((key",{"_index":509,"title":{},"body":{"interfaces/Flags.html":{}}}],["flagname",{"_index":503,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags",{"_index":486,"title":{"interfaces/Flags.html":{}},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["flags.w",{"_index":523,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags.watch",{"_index":522,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[currentflag",{"_index":514,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[flagname",{"_index":505,"title":{},"body":{"interfaces/Flags.html":{}}}],["flags[key",{"_index":510,"title":{},"body":{"interfaces/Flags.html":{}}}],["followed",{"_index":933,"title":{},"body":{"index.html":{}}}],["following",{"_index":1034,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{}}}],["forbiddenexception(\"user",{"_index":626,"title":{},"body":{"injectables/OrderService.html":{}}}],["forbiddenexception('credentials",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('incorrect",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":714,"title":{},"body":{"injectables/PrismaService.html":{}}}],["format(query",{"_index":755,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formattedquery",{"_index":754,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formatter",{"_index":716,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["free",{"_index":1010,"title":{},"body":{"license.html":{}}}],["function",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{},"coverage.html":{}}}],["functional",{"_index":923,"title":{},"body":{"index.html":{}}}],["functions",{"_index":909,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1032,"title":{},"body":{"license.html":{}}}],["g",{"_index":984,"title":{},"body":{"index.html":{}}}],["generate",{"_index":973,"title":{},"body":{"index.html":{}}}],["generated",{"_index":976,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":405,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["get('health",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":822,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@cachekey('home')@cachettl(number.max_safe_integer",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["gethealth",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["getme",{"_index":810,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(@getuser('userid",{"_index":823,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(user",{"_index":817,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":912,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":595,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser('userid",{"_index":600,"title":{},"body":{"controllers/OrderController.html":{}}}],["getusergraphql",{"_index":860,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":700,"title":{},"body":{"modules/PrismaModule.html":{}}}],["gqlexceptionfilter",{"_index":654,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1009,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"dependencies.html":{},"index.html":{}}}],["graphql:schema",{"_index":922,"title":{},"body":{"index.html":{}}}],["graphqlargumentshost",{"_index":659,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["graphqlcontext",{"_index":90,"title":{"classes/GraphqlContext.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqldatetime",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqldefinitionsfactory",{"_index":492,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["handled",{"_index":937,"title":{},"body":{"index.html":{}}}],["handling",{"_index":694,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["hash",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashing",{"_index":963,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":970,"title":{},"body":{"index.html":{}}}],["here",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1008,"title":{},"body":{"license.html":{}}}],["hiro",{"_index":1006,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1054,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1080,"title":{},"body":{"properties.html":{}}}],["host",{"_index":657,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":666,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["hour",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["http",{"_index":941,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('signin",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["httponly",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["https",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com/fundamentals/lifecycle",{"_index":729,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://github.com/jsfame/api.bookstore.nas",{"_index":1081,"title":{},"body":{"properties.html":{}}}],["https://github.com/jsfame/api.bookstore.nas/issues",{"_index":1083,"title":{},"body":{"properties.html":{}}}],["https://jsfame.github.io/api.bookstore.nas",{"_index":980,"title":{},"body":{"index.html":{}}}],["https://www.prisma.io/blog/nestjs",{"_index":693,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["https://www.prisma.io/docs/concepts/database",{"_index":733,"title":{},"body":{"injectables/PrismaService.html":{}}}],["https://www.prisma.io/docs/reference/api",{"_index":671,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.bad_request",{"_index":678,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.conflict",{"_index":676,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":691,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["id",{"_index":298,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/SignUpPayload.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":742,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ignoreexpiration",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implemented",{"_index":943,"title":{},"body":{"index.html":{}}}],["implements",{"_index":653,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{}}}],["implied",{"_index":1045,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["import('chalk",{"_index":746,"title":{},"body":{"injectables/PrismaService.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["imutation",{"_index":303,"title":{"classes/IMutation.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["included",{"_index":1039,"title":{},"body":{"license.html":{}}}],["including",{"_index":1019,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":710,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":154,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":680,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["inspect",{"_index":929,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":971,"title":{},"body":{"index.html":{}}}],["install",{"_index":983,"title":{},"body":{"index.html":{}}}],["installation",{"_index":981,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":986,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["interactions",{"_index":945,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":485,"title":{"interfaces/Flags.html":{},"interfaces/User.html":{}},"body":{"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":487,"title":{},"body":{"interfaces/Flags.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isarray",{"_index":466,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["isemail",{"_index":287,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{}}}],["isemail()@isnotempty",{"_index":283,"title":{},"body":{"classes/AuthDto.html":{}}}],["isemail()@isoptional",{"_index":480,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isglobal",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":467,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isnotempty",{"_index":288,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{}}}],["isnotempty()@isint",{"_index":460,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{}}}],["isnotempty()@isstring",{"_index":458,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["iso",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["isoptional",{"_index":468,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isoptional()@isarray",{"_index":462,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["isoptional()@isint",{"_index":802,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["isstring",{"_index":469,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{}}}],["isstring()@isoptional",{"_index":482,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstrongpassword",{"_index":289,"title":{},"body":{"classes/AuthDto.html":{}}}],["isstrongpassword()@isnotempty",{"_index":285,"title":{},"body":{"classes/AuthDto.html":{}}}],["items",{"_index":930,"title":{},"body":{"index.html":{}}}],["jest",{"_index":967,"title":{},"body":{"index.html":{}}}],["john",{"_index":513,"title":{},"body":{"interfaces/Flags.html":{}}}],["joi",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(2",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('hiro@jwt#token",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().valid('dev",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":493,"title":{},"body":{"interfaces/Flags.html":{}}}],["join(process.cwd",{"_index":520,"title":{},"body":{"interfaces/Flags.html":{}}}],["jwt",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt_max_age",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt_secret",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtconstants",{"_index":541,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":533,"title":{"classes/JwtGuard.html":{}},"body":{"classes/JwtGuard.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":313,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtstrategy.extractjwtfromcookie",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["keywordcase",{"_index":760,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kind",{"_index":1044,"title":{},"body":{"license.html":{}}}],["kleur",{"_index":713,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["kleur.cyan(json.stringify(e.params",{"_index":768,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.green(formattedquery",{"_index":766,"title":{},"body":{"injectables/PrismaService.html":{}}}],["kleur.magenta(`${e.duration}ms",{"_index":770,"title":{},"body":{"injectables/PrismaService.html":{}}}],["laciferin@gmail.com",{"_index":1086,"title":{},"body":{"properties.html":{}}}],["landing",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["language",{"_index":756,"title":{},"body":{"injectables/PrismaService.html":{}}}],["lastname",{"_index":479,"title":{},"body":{"classes/EditUserDto.html":{}}}],["layers",{"_index":953,"title":{},"body":{"index.html":{}}}],["legend",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":721,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":1058,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1055,"title":{},"body":{"license.html":{}}}],["license",{"_index":1002,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":1001,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1020,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1046,"title":{},"body":{"license.html":{}}}],["linesbetweenqueries",{"_index":762,"title":{},"body":{"injectables/PrismaService.html":{}}}],["literal",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["log",{"_index":739,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logevents",{"_index":717,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":782,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["long",{"_index":501,"title":{},"body":{"interfaces/Flags.html":{}}}],["manage",{"_index":927,"title":{},"body":{"index.html":{}}}],["management",{"_index":955,"title":{},"body":{"index.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["merchantability",{"_index":1048,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1023,"title":{},"body":{"license.html":{}}}],["message",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["methodologies",{"_index":932,"title":{},"body":{"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["milliseconds",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":908,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1000,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1022,"title":{},"body":{"license.html":{}}}],["modular",{"_index":934,"title":{},"body":{"index.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["morph",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["mutation",{"_index":332,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signin",{"_index":327,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('signup",{"_index":329,"title":{},"body":{"classes/AuthResolver.html":{}}}],["name",{"_index":163,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["needs",{"_index":684,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"controllers/UserController.html":{}}}],["nest/swagger",{"_index":942,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":898,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":663,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"interfaces/Flags.html":{},"classes/PrismaClientExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":798,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":537,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["netpoint",{"_index":634,"title":{},"body":{"injectables/OrderService.html":{}}}],["new",{"_index":184,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1052,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":624,"title":{},"body":{"injectables/OrderService.html":{}}}],["notfoundexception(\"book",{"_index":630,"title":{},"body":{"injectables/OrderService.html":{}}}],["notice",{"_index":1037,"title":{},"body":{"license.html":{}}}],["npm",{"_index":982,"title":{},"body":{"index.html":{}}}],["null",{"_index":309,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":307,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":299,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/RequestWithUser.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object(dto",{"_index":949,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":1013,"title":{},"body":{"license.html":{}}}],["ok",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["onmoduledestroy",{"_index":728,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":706,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"classes/UpdateOrderDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["order",{"_index":579,"title":{"classes/Order.html":{}},"body":{"classes/Order.html":{},"coverage.html":{}}}],["order.controller",{"_index":611,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":592,"title":{},"body":{"controllers/OrderController.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts",{"_index":472,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:6",{"_index":474,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:8",{"_index":803,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["order.service",{"_index":594,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":581,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":61,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orders",{"_index":583,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["orderservice",{"_index":593,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["otherwise",{"_index":1063,"title":{},"body":{"license.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outputas",{"_index":521,"title":{},"body":{"interfaces/Flags.html":{}}}],["over",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["overview",{"_index":1070,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":960,"title":{},"body":{"index.html":{}}}],["p2002",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["package",{"_index":867,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":415,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["parameters",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":763,"title":{},"body":{"injectables/PrismaService.html":{}}}],["parser",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":797,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{}}}],["partialtype(createbookdto",{"_index":800,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["partialtype(createorderdto",{"_index":804,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["particular",{"_index":1050,"title":{},"body":{"license.html":{}}}],["passport",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passport.js",{"_index":921,"title":{},"body":{"index.html":{}}}],["passportjs",{"_index":961,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":282,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"index.html":{}}}],["patch",{"_index":416,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":412,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["path",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Flags.html":{}}}],["pattern",{"_index":950,"title":{},"body":{"index.html":{}}}],["payload",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["payload.email",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":1007,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1030,"title":{},"body":{"license.html":{}}}],["person",{"_index":1012,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1031,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":947,"title":{},"body":{"index.html":{}}}],["playground",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["pnpm",{"_index":985,"title":{},"body":{"index.html":{}}}],["point",{"_index":454,"title":{},"body":{"classes/CreateBookDto.html":{},"injectables/OrderService.html":{}}}],["port",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1041,"title":{},"body":{"license.html":{}}}],["post",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["post('signin",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":757,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["prefix",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["prerequisite",{"_index":987,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.bookcreateinput",{"_index":438,"title":{},"body":{"injectables/BookService.html":{}}}],["prisma.bookupdateinput",{"_index":443,"title":{},"body":{"injectables/BookService.html":{}}}],["prisma.logdefinition",{"_index":718,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prisma.orderuncheckedcreateinput",{"_index":617,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.orderuncheckedupdateinput",{"_index":622,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":656,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["prisma.service",{"_index":701,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":445,"title":{},"body":{"injectables/BookService.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{}}}],["prisma/client/runtime/library",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prisma/prisma.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":703,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientexceptionfilter",{"_index":647,"title":{"classes/PrismaClientExceptionFilter.html":{}},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["prismaclientknownrequesterror",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prismaclientunknownrequesterror",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["prismamodule",{"_index":62,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":160,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{}}}],["process.argv.slice(2",{"_index":515,"title":{},"body":{"interfaces/Flags.html":{},"miscellaneous/variables.html":{}}}],["process.env.force_color",{"_index":740,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.mode",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["prod",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["production",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project",{"_index":974,"title":{},"body":{"index.html":{}}}],["promise",{"_index":305,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["properties",{"_index":280,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provided",{"_index":1042,"title":{},"body":{"license.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["publish",{"_index":1024,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1051,"title":{},"body":{"license.html":{}}}],["pwmatches",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":722,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/ServiceStatus.html":{}}}],["reference",{"_index":673,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["reference/error",{"_index":672,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["reflect",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":398,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["remove(@param('id",{"_index":430,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["remove(id",{"_index":407,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["replace",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["repo",{"_index":999,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1084,"title":{},"body":{"properties.html":{}}}],["req",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["req.cookies",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.cookies.token",{"_index":578,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies[tokenfield].length",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request",{"_index":528,"title":{},"body":{"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["requesttype",{"_index":548,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestwithuser",{"_index":525,"title":{"classes/RequestWithUser.html":{}},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["required",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["res",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["res.clearcookie('token",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie(cookiename",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('token",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('user",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send(token",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolver",{"_index":333,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('auth",{"_index":334,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolvers",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlContext.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["response.status(httpstatus.conflict).json(payload",{"_index":686,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["response.status(httpstatus.internal_server_error).json",{"_index":690,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["restriction",{"_index":1018,"title":{},"body":{"license.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"interfaces/Flags.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":1021,"title":{},"body":{"license.html":{}}}],["run",{"_index":993,"title":{},"body":{"index.html":{}}}],["running",{"_index":182,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"index.html":{}}}],["rxjs",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["salts",{"_index":964,"title":{},"body":{"index.html":{}}}],["schema",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["sec",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["secret",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["select",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["sell",{"_index":1028,"title":{},"body":{"license.html":{}}}],["sent",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["separate",{"_index":938,"title":{},"body":{"index.html":{}}}],["separating",{"_index":939,"title":{},"body":{"index.html":{}}}],["server",{"_index":916,"title":{},"body":{"index.html":{}}}],["service",{"_index":826,"title":{},"body":{"controllers/UserController.html":{}}}],["services",{"_index":944,"title":{},"body":{"index.html":{}}}],["servicestatus",{"_index":173,"title":{"classes/ServiceStatus.html":{}},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["set",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["shall",{"_index":1038,"title":{},"body":{"license.html":{}}}],["short",{"_index":506,"title":{},"body":{"interfaces/Flags.html":{}}}],["signed",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signin(@args('data",{"_index":337,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signin(@body",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(data",{"_index":306,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["signin(dto",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signtoken",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(userid",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"index.html":{}}}],["signup(@args('data",{"_index":335,"title":{},"body":{"classes/AuthResolver.html":{}}}],["signup(@body",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(data",{"_index":304,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["signup(dto",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signuppayload",{"_index":297,"title":{"classes/SignUpPayload.html":{}},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{}}}],["software",{"_index":1014,"title":{},"body":{"license.html":{}}}],["solana/web3.js",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["something",{"_index":827,"title":{},"body":{"controllers/UserController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"modules/AuthModule.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specs",{"_index":924,"title":{},"body":{"index.html":{}}}],["sql",{"_index":715,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["src/**/*.graphql",{"_index":519,"title":{},"body":{"interfaces/Flags.html":{}}}],["src/.../app.module.ts",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generate",{"_index":911,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":1089,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":910,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.service.ts",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.dto.ts",{"_index":524,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app.dto.ts:11",{"_index":526,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:12",{"_index":527,"title":{},"body":{"classes/GraphqlContext.html":{}}}],["src/app.dto.ts:8",{"_index":786,"title":{},"body":{"classes/RequestWithUser.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":156,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":161,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":169,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:19",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:4",{"_index":788,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:6",{"_index":790,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:7",{"_index":791,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/app.service.ts:8",{"_index":789,"title":{},"body":{"classes/ServiceStatus.html":{}}}],["src/auth/auth.controller.ts",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":323,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:16",{"_index":330,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:23",{"_index":328,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:9",{"_index":325,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.service.ts",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/get",{"_index":858,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":279,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":286,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":284,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/guard/jwt.guard.ts",{"_index":534,"title":{},"body":{"classes/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guard/jwt.guard.ts:3",{"_index":535,"title":{},"body":{"classes/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":540,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":546,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:24",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:35",{"_index":549,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/book/book.controller.ts",{"_index":393,"title":{},"body":{"controllers/BookController.html":{},"coverage.html":{}}}],["src/book/book.controller.ts:11",{"_index":402,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:16",{"_index":403,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:21",{"_index":406,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:26",{"_index":413,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:31",{"_index":409,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.module.ts",{"_index":434,"title":{},"body":{"modules/BookModule.html":{}}}],["src/book/book.service.ts",{"_index":436,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{}}}],["src/book/book.service.ts:13",{"_index":440,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:19",{"_index":441,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:27",{"_index":444,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:34",{"_index":442,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:6",{"_index":437,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:9",{"_index":439,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/dto/create",{"_index":451,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{}}}],["src/book/dto/update",{"_index":796,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/book/entities/book.entity.ts",{"_index":391,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/generate",{"_index":488,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/graphql.ts",{"_index":292,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"interfaces/Flags.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/graphql.ts:12",{"_index":293,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:13",{"_index":294,"title":{},"body":{"classes/AuthInput.html":{}}}],["src/graphql.ts:17",{"_index":322,"title":{},"body":{"classes/AuthPayload.html":{}}}],["src/graphql.ts:21",{"_index":794,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:22",{"_index":793,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:23",{"_index":792,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:24",{"_index":795,"title":{},"body":{"classes/SignUpPayload.html":{}}}],["src/graphql.ts:28",{"_index":532,"title":{},"body":{"classes/IMutation.html":{}}}],["src/graphql.ts:30",{"_index":531,"title":{},"body":{"classes/IMutation.html":{}}}],["src/main.ts",{"_index":864,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":471,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/order/dto/update",{"_index":801,"title":{},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":580,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/order.controller.ts",{"_index":582,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:23",{"_index":585,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:34",{"_index":586,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:39",{"_index":587,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:44",{"_index":590,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:49",{"_index":588,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":610,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":614,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:15",{"_index":618,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:48",{"_index":619,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:54",{"_index":620,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:62",{"_index":623,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:69",{"_index":621,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":615,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma",{"_index":648,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["src/prisma/prisma.module.ts",{"_index":699,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":702,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.service.ts:29",{"_index":707,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:71",{"_index":712,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:81",{"_index":711,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:88",{"_index":708,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/user/dto/edit",{"_index":476,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":806,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:23",{"_index":819,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:29",{"_index":816,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":813,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":837,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":839,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:17",{"_index":842,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:32",{"_index":841,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":840,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":844,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":735,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert",{"_index":731,"title":{},"body":{"injectables/PrismaService.html":{}}}],["sslcert=root.crt",{"_index":732,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":994,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":995,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":996,"title":{},"body":{"index.html":{}}}],["started",{"_index":913,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":542,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["status",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ServiceStatus.html":{}}}],["statuscode",{"_index":677,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["stdout",{"_index":723,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":171,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/CreateBookDto.html":{},"classes/EditUserDto.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":975,"title":{},"body":{"index.html":{}}}],["sub",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":1033,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1026,"title":{},"body":{"license.html":{}}}],["subscriptions",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["substantial",{"_index":1040,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":190,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["super",{"_index":539,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["super.catch(exception",{"_index":688,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["supertest",{"_index":968,"title":{},"body":{"index.html":{}}}],["support",{"_index":1067,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1068,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["t",{"_index":308,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["tabwidth",{"_index":758,"title":{},"body":{"injectables/PrismaService.html":{}}}],["tags",{"_index":455,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["taken",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["tear",{"_index":780,"title":{},"body":{"injectables/PrismaService.html":{}}}],["technical",{"_index":931,"title":{},"body":{"index.html":{}}}],["test",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["test').default('dev",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["test:covlicense",{"_index":998,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":997,"title":{},"body":{"index.html":{}}}],["testing",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["tests",{"_index":966,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":773,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$executerawunsafe(\"set",{"_index":774,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":777,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('query",{"_index":743,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction",{"_index":779,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethealth",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authcontroller.signin(dto",{"_index":338,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authcontroller.signup(dto",{"_index":336,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.signin(dto",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.book.deletemany",{"_index":784,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.bookservice.create(createbookdto",{"_index":424,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findall",{"_index":425,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findone(createorderdto.bookid",{"_index":629,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.bookservice.findone(id",{"_index":427,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.remove(+id",{"_index":431,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.update(+id",{"_index":429,"title":{},"body":{"controllers/BookController.html":{}}}],["this.config.get('jwt_secret",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.jwt.signasync(payload",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.order.deletemany",{"_index":785,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.orderservice.create",{"_index":601,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":603,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":604,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.remove(+id",{"_index":606,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.update(+id",{"_index":605,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma",{"_index":186,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["this.prisma.$transaction",{"_index":638,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.book.create",{"_index":446,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.delete",{"_index":450,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.findmany",{"_index":447,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.findunique",{"_index":448,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.book.update",{"_index":449,"title":{},"body":{"injectables/BookService.html":{}}}],["this.prisma.order.create",{"_index":641,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.delete",{"_index":646,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":643,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":644,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.update",{"_index":645,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.user.create",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.delete",{"_index":847,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":639,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["this.signtoken(user.id",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.deletemany",{"_index":783,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.userservice.deleteuser(userid",{"_index":833,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituser(userid",{"_index":830,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(createorderdto.customerid",{"_index":625,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.userservice.findone(user.id",{"_index":824,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{}}}],["throws",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["time",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["timezone",{"_index":775,"title":{},"body":{"injectables/PrismaService.html":{}}}],["title",{"_index":456,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["todo",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["token.access_token",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenfield",{"_index":573,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":962,"title":{},"body":{"index.html":{}}}],["tools",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":920,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1062,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":637,"title":{},"body":{"injectables/OrderService.html":{}}}],["transaction.at",{"_index":642,"title":{},"body":{"injectables/OrderService.html":{}}}],["transfer",{"_index":948,"title":{},"body":{"index.html":{}}}],["transferring",{"_index":951,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["transformers",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["transport",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Flags.html":{},"injectables/PrismaService.html":{},"classes/ServiceStatus.html":{}}}],["try",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":741,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["type",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"interfaces/Flags.html":{},"classes/GraphqlContext.html":{},"classes/IMutation.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/RequestWithUser.html":{},"classes/ServiceStatus.html":{},"classes/SignUpPayload.html":{},"classes/UpdateOrderDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1087,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typepaths",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Flags.html":{}}}],["types",{"_index":799,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":919,"title":{},"body":{"index.html":{}}}],["typings.ts",{"_index":489,"title":{},"body":{"interfaces/Flags.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":674,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["unit",{"_index":965,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":168,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["up",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"classes/ServiceStatus.html":{}}}],["update",{"_index":399,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["update(@param('id",{"_index":428,"title":{},"body":{"controllers/BookController.html":{},"controllers/OrderController.html":{}}}],["update(id",{"_index":410,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["updatebookdto",{"_index":411,"title":{"classes/UpdateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":301,"title":{},"body":{"classes/AuthInput.html":{},"classes/AuthPayload.html":{},"injectables/AuthService.html":{},"classes/IMutation.html":{},"classes/SignUpPayload.html":{}}}],["updateorderdto",{"_index":589,"title":{"classes/UpdateOrderDto.html":{}},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["upper",{"_index":761,"title":{},"body":{"injectables/PrismaService.html":{}}}],["url",{"_index":737,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["useguards",{"_index":591,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":598,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete",{"_index":812,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get('me",{"_index":818,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@patch",{"_index":815,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":359,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/GraphqlContext.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":838,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":859,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":477,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":483,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:14",{"_index":484,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:6",{"_index":481,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.email",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.hash",{"_index":846,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":640,"title":{},"body":{"injectables/OrderService.html":{}}}],["user.point",{"_index":632,"title":{},"body":{"injectables/OrderService.html":{}}}],["user.service",{"_index":820,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.service",{"_index":612,"title":{},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{}}}],["user[data",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":805,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":63,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userpoint",{"_index":635,"title":{},"body":{"injectables/OrderService.html":{}}}],["users",{"_index":807,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":609,"title":{"injectables/UserService.html":{}},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":918,"title":{},"body":{"index.html":{}}}],["utility",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":544,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":550,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":946,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":290,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateOrderDto.html":{},"classes/EditUserDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["value",{"_index":512,"title":{},"body":{"interfaces/Flags.html":{},"classes/ServiceStatus.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1090,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":992,"title":{},"body":{"index.html":{}}}],["version",{"_index":1075,"title":{},"body":{"properties.html":{}}}],["void",{"_index":662,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["w",{"_index":490,"title":{},"body":{"interfaces/Flags.html":{}}}],["walletid",{"_index":529,"title":{},"body":{"classes/GraphqlContext.html":{},"classes/RequestWithUser.html":{},"interfaces/User.html":{}}}],["ware",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["warn",{"_index":724,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":1047,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1043,"title":{},"body":{"license.html":{}}}],["watch",{"_index":491,"title":{},"body":{"interfaces/Flags.html":{},"index.html":{}}}],["web2",{"_index":1077,"title":{},"body":{"properties.html":{}}}],["whatever",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whether",{"_index":1059,"title":{},"body":{"license.html":{}}}],["whitelist:true",{"_index":829,"title":{},"body":{"controllers/UserController.html":{}}}],["without",{"_index":1017,"title":{},"body":{"license.html":{}}}],["work",{"_index":726,"title":{},"body":{"injectables/PrismaService.html":{}}}],["writer",{"_index":457,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["ws",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHealth\n                            \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheTTL(undefined)@Get('health')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@CacheKey('home')@CacheTTL(Number.MAX_SAFE_INTEGER)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { CacheInterceptor, CacheKey, CacheTTL } from '@nestjs/cache-manager'\n\n@Controller()\n@UseInterceptors(CacheInterceptor)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @CacheKey('home')\n  @CacheTTL(Number.MAX_SAFE_INTEGER) //default is just 1 sec\n  getHello() {\n    return this.appService.getHello()\n  }\n\n  @CacheTTL(5 * 1000)\n  @Get('health')\n  getHealth() {\n    return this.appService.getHealth()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BookModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppService } from './app.service'\nimport { ConfigModule } from '@nestjs/config'\nimport { AuthModule } from './auth/auth.module'\nimport Joi from 'joi'\nimport { CacheModule } from '@nestjs/cache-manager'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { ApolloServerPluginLandingPageGraphQLPlayground } from '@apollo/server-plugin-landing-page-graphql-playground'\nimport { GraphQLDateTime } from 'graphql-iso-date'\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'\nimport { AppController } from './app.controller'\nimport { GraphqlContext } from './app.dto'\nimport { UserModule } from './user/user.module'\nimport { PrismaModule } from './prisma/prisma.module'\nimport { BookModule } from './book/book.module'\nimport { OrderModule } from './order/order.module'\n\nlet mode = process.env.MODE\nlet envFile = '.env'\n\nswitch (mode) {\n  case 'test':\n    envFile = '.env.test'\n    process.env.NODE_ENV = 'testing'\n    break\n  case 'prod':\n    process.env.NODE_ENV = 'production'\n    envFile = '.env.prod'\n    break\n  default:\n    mode = 'dev'\n    process.env.NODE_ENV = 'development'\n    envFile = '.env.local'\n}\n\nconsole.debug({ mode, envFile })\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [envFile, '.env'],\n      isGlobal: true,\n      cache: true,\n      validationSchema: Joi.object({\n        MODE: Joi.string().valid('dev', 'prod', 'test').default('dev'),\n        PORT: Joi.number().default(3000),\n        DATABASE_URL: Joi.string(),\n        JWT_SECRET: Joi.string().default('Hiro@JWT#TOKEN$'),\n        JWT_MAX_AGE: Joi.number().default(2 * 60 * 60 * 1000),\n      }),\n    }),\n    CacheModule.register({ isGlobal: true }),\n    GraphQLModule.forRoot({\n      context: ({ req, res }: GraphqlContext) => ({ req, res }), //required for cookies\n\n      fieldResolverEnhancers: ['interceptors'], //FIXME:unsure\n\n      autoSchemaFile: false, // schema-first\n      playground: false,\n      driver: ApolloDriver,\n      plugins: [ApolloServerPluginLandingPageGraphQLPlayground()],\n      typePaths: ['./**/*.graphql'],\n      resolvers: { DateTime: GraphQLDateTime },\n      subscriptions: {\n        'graphql-ws': true,\n        'subscriptions-transport-ws': true,\n      },\n    }),\n    PrismaModule,\n    AuthModule,\n    UserModule,\n    BookModule,\n    OrderModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHealth\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Res } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { AuthDto } from './dto'\nimport { Response } from 'express'\nimport { ConfigService } from '@nestjs/config'\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService, private config: ConfigService) {}\n\n  @Post('signup')\n  signup(@Body() dto: AuthDto) {\n    return this.authService.signup(dto)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signin(@Body() dto: AuthDto, @Res() res: Response) {\n    const token = await this.authService.signin(dto)\n\n    /*    res.cookie('user', dto.email, { //TODO:\n      // Set cookie options here (e.g., expiration, domain, path, etc.)\n      maxAge: 3600000, // Cookie expiration time in milliseconds (1 hour)\n      httpOnly: true, // Cookie accessible only through HTTP(S) requests\n      secure: true, // Cookie sent only over HTTPS if true\n      signed: true,\n    })*/\n    // const cookies = req.cookies; //TODO: middle ware to clear the cookies when signin\n    // TODO: utility function to clear and set cookie\n    // for (let cookieName in cookies) {\n    //   res.clearCookie(cookieName); // Replace '.your-domain.com' with your actual domain\n    // }\n    res.clearCookie('token')\n    res.cookie('token', token.access_token, {\n      maxAge: this.config.get('JWT_SECRET') * 1000 || 60 * 60 * 1000,\n      secure: true,\n      httpOnly: true,\n      // signed: true,\n    })\n\n    res.send(token)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsStrongPassword } from 'class-validator'\n\nexport class AuthDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string\n\n  @IsStrongPassword()\n  @IsNotEmpty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInput.html":{"url":"classes/AuthInput.html","title":"class - AuthInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PrismaModule } from '../prisma/prisma.module'\nimport { JwtStrategy } from './strategy'\nimport { AuthResolver } from './auth.resolver'\n\n@Module({\n  imports: [JwtModule.register({}), PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, AuthResolver, AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPayload.html":{"url":"classes/AuthPayload.html","title":"class - AuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authController: AuthController)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authController\n                                                  \n                                                        \n                                                                        AuthController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(dto: AuthDto, ctx: GraphqlContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signIn')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ctx\n                                    \n                                                GraphqlContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('signUp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql'\nimport { AuthService } from './auth.service'\nimport { AuthController } from './auth.controller'\nimport { GraphqlContext } from '../app.dto'\nimport { AuthDto } from './dto'\nimport { AuthInput } from '../graphql'\n\n@Resolver('Auth')\nexport class AuthResolver {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authController: AuthController,\n  ) {}\n\n  @Mutation('signUp')\n  signUp(@Args('data') dto: AuthDto) {\n    console.debug({ dto })\n\n    return this.authController.signup(dto as AuthInput)\n  }\n\n  @Mutation('signIn')\n  signIn(@Args('data') dto: AuthDto, @Context() ctx: GraphqlContext) {\n    console.debug({ dto })\n\n    return this.authController.signin(dto as AuthInput, ctx.res)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userId: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { AuthDto } from './dto'\n\nimport argon from 'argon2'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwt: JwtService,\n    private config: ConfigService,\n  ) {}\n\n  async signup(dto: AuthDto) {\n    const hash = await argon.hash(dto.password)\n\n    try {\n      const user = await this.prisma.user.create({\n        data: {\n          email: dto.email,\n          hash: hash,\n        },\n        select: {\n          //FIXME: use transformers\n          id: true,\n          email: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      return user\n    } catch (error) {\n      console.error({\n        code: error.code,\n        error,\n      })\n      if (\n        error instanceof PrismaClientKnownRequestError ||\n        PrismaClientUnknownRequestError\n      ) {\n        if (error.code == 'P2002') {\n          throw new ForbiddenException('credentials taken')\n        }\n      }\n      throw error\n    }\n  }\n\n  async signin(dto: AuthDto) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email: dto.email,\n      },\n    })\n\n    if (!user) throw new ForbiddenException('incorrect credentials')\n\n    const pwMatches = await argon.verify(user.hash, dto.password)\n\n    if (!pwMatches) throw new ForbiddenException('invalid credentials')\n\n    return this.signToken(user.id, user.email)\n  }\n\n  async signToken(userId: number, email: string) {\n    const payload = {\n      sub: userId,\n      email,\n    }\n    const secret = this.config.get('JWT_SECRET')\n\n    return {\n      access_token: await this.jwt.signAsync(payload, {\n        expiresIn: '1hr', //TODO:\n        secret: secret,\n      }),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/entities/book.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Book {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookController.html":{"url":"controllers/BookController.html","title":"controller - BookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createBookDto: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateBookDto: UpdateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common'\nimport { BookService } from './book.service'\nimport { CreateBookDto } from './dto/create-book.dto'\nimport { UpdateBookDto } from './dto/update-book.dto'\n\n@Controller('books')\nexport class BookController {\n  constructor(private readonly bookService: BookService) {}\n\n  @Post()\n  create(@Body() createBookDto: CreateBookDto) {\n    return this.bookService.create(createBookDto)\n  }\n\n  @Get()\n  findAll() {\n    return this.bookService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.bookService.findOne(id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateBookDto: UpdateBookDto) {\n    return this.bookService.update(+id, updateBookDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.bookService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookModule.html":{"url":"modules/BookModule.html","title":"module - BookModule","body":"\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\n\nBookService\n\nBookService\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/book/book.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { BookService } from './book.service'\nimport { BookController } from './book.controller'\n\n@Module({\n  controllers: [BookController],\n  providers: [BookService],\n})\nexport class BookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/book/book.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBookDto: Prisma.BookCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                Prisma.BookCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBookDto: Prisma.BookUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                Prisma.BookUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Prisma } from '@prisma/client'\nimport { PrismaService } from '../prisma/prisma.service'\n\n@Injectable()\nexport class BookService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(createBookDto: Prisma.BookCreateInput) {\n    return this.prisma.book.create({ data: createBookDto })\n  }\n\n  findAll() {\n    return this.prisma.book.findMany({\n      where: {},\n    })\n  }\n\n  findOne(id: number) {\n    return this.prisma.book.findUnique({\n      where: {\n        id,\n      },\n    })\n  }\n\n  update(id: number, updateBookDto: Prisma.BookUpdateInput) {\n    return this.prisma.book.update({\n      where: { id },\n      data: updateBookDto,\n    })\n  }\n\n  remove(id: number) {\n    return this.prisma.book.delete({\n      where: { id },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/create-book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                coverImage\n                            \n                            \n                                    \n                                    \n                                point\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                writer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        coverImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        point\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        writer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsInt, IsNotEmpty, IsOptional, IsString } from 'class-validator'\n\nexport class CreateBookDto {\n  @IsNotEmpty()\n  @IsString()\n  title: string\n\n  @IsNotEmpty()\n  @IsString()\n  writer: string\n\n  @IsNotEmpty()\n  @IsString()\n  coverImage: string\n\n  @IsNotEmpty()\n  @IsInt()\n  point: number\n\n  @IsOptional()\n  @IsArray()\n  tags?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bookId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bookId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty } from 'class-validator'\n\nexport class CreateOrderDto {\n  @IsNotEmpty()\n  @IsInt()\n  bookId: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserDto.html":{"url":"classes/EditUserDto.html","title":"class - EditUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/edit-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator'\n\nexport class EditUserDto {\n  @IsEmail()\n  @IsOptional()\n  email?: string\n\n  @IsString()\n  @IsOptional()\n  firstName?: string\n\n  @IsString()\n  @IsOptional()\n  lastName?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Flags.html":{"url":"interfaces/Flags.html","title":"interface - Flags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Flags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generate-typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            w\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            watch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        w\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        w:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDefinitionsFactory } from '@nestjs/graphql'\nimport { join } from 'path'\n\ninterface Flags {\n  watch?: boolean\n  w?: boolean\n}\n\n// Function to extract flags from the arguments array\nfunction extractFlags(args) {\n  const flags: Flags = {}\n  let currentFlag = null\n\n  for (const arg of args) {\n    if (arg.startsWith('--')) {\n      // Long flag (e.g., --watch)\n      const flagName = arg.slice(2)\n      flags[flagName] = true\n      currentFlag = flagName\n    } else if (arg.startsWith('-')) {\n      // Short flag (e.g., -w)\n      const flagKeys = arg.slice(1).split('')\n      flagKeys.forEach((key) => {\n        flags[key] = true\n      })\n      currentFlag = arg.slice(-1)\n    } else if (currentFlag) {\n      // Flag value (e.g., --name John)\n      flags[currentFlag] = arg\n      currentFlag = null\n    }\n  }\n\n  return flags\n}\n\nconst args = process.argv.slice(2)\nconst flags: Flags = extractFlags(args)\n\nconsole.log('Flags:', flags)\n\nconst definitionsFactory = new GraphQLDefinitionsFactory()\ndefinitionsFactory.generate({\n  typePaths: ['./src/**/*.graphql'],\n  path: join(process.cwd(), 'src/graphql.ts'),\n  outputAs: 'class',\n  watch: flags.watch || flags.w,\n})\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphqlContext.html":{"url":"classes/GraphqlContext.html","title":"class - GraphqlContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphqlContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                req\n                            \n                            \n                                res\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        req\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RequestWithUser\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Response\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IMutation.html":{"url":"classes/IMutation.html","title":"class - IMutation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IMutation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(data: AuthInput)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SignUpPayload | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtGuard.html":{"url":"classes/JwtGuard.html","title":"class - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport'\n\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtConstants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                extractJWTFromCookie\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        extractJWTFromCookie\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractJWTFromCookie(req: RequestType)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            RequestType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { userId: number; email: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { ConfigService } from '@nestjs/config'\nimport { PrismaService } from '../../prisma/prisma.service'\nimport { Request as RequestType } from 'express'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  private jwtConstants: any\n\n  constructor(private config: ConfigService, private prisma: PrismaService) {\n    const mode = config.get('MODE') || 'dev'\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        JwtStrategy.extractJWTFromCookie,\n        ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ]),\n      ignoreExpiration: mode == 'dev' || mode == 'test',\n      secretOrKey: config.get('JWT_SECRET'),\n    })\n  }\n\n  validate(payload: { sub: number; email: string }) {\n    const user = this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    })\n    if (!user) return null //throws the 401 error\n\n    return { userId: payload.sub, email: payload.email }\n    // whatever is returned is appended to req.user\n  }\n  private static extractJWTFromCookie(req: RequestType): string | null {\n    const tokenField = 'token'\n    console.debug(req.cookies)\n    if (req.cookies && tokenField in req.cookies && req.cookies[tokenField].length > 0) {\n      console.log('extracted cookie')\n      return req.cookies.token\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Order {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: number, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateOrderDto: UpdateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                UpdateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common'\nimport { CreateOrderDto } from './dto/create-order.dto'\nimport { OrderService } from './order.service'\nimport { UpdateOrderDto } from './dto/update-order.dto'\nimport { GetUser } from '../auth/decorator'\nimport { JwtGuard } from '../auth/guard'\n\n@UseGuards(JwtGuard)\n@Controller('orders')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  async create(\n    @GetUser('userId') userId: number,\n    @Body() createOrderDto: CreateOrderDto,\n  ) {\n    return this.orderService.create({\n      ...createOrderDto,\n      customerId: userId,\n    })\n  }\n\n  @Get()\n  findAll() {\n    return this.orderService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.orderService.findOne(id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateOrderDto: UpdateOrderDto) {\n    return this.orderService.update(+id, updateOrderDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.orderService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nBookService\n\nBookService\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nBookService->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nUserService\n\nUserService\n\nOrderModule -->\n\nUserService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                        \n                            OrderService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { OrderService } from './order.service'\nimport { OrderController } from './order.controller'\nimport { UserService } from '../user/user.service'\nimport { BookService } from '../book/book.service'\n\n@Module({\n  controllers: [OrderController],\n  providers: [OrderService, UserService, BookService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, userService: UserService, bookService: BookService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookService\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createOrderDto: Prisma.OrderUncheckedCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                Prisma.OrderUncheckedCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateOrderDto: Prisma.OrderUncheckedUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                Prisma.OrderUncheckedUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, NotFoundException } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { Prisma } from '@prisma/client'\nimport { UserService } from '../user/user.service'\nimport { BookService } from '../book/book.service'\n\n@Injectable()\nexport class OrderService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly userService: UserService,\n    private readonly bookService: BookService,\n  ) {}\n\n  async create(createOrderDto: Prisma.OrderUncheckedCreateInput) {\n    const user = await this.userService.findOne(createOrderDto.customerId)\n    if (!user) {\n      throw new ForbiddenException(\"user doesn't exist\")\n    }\n\n    const book = await this.bookService.findOne(createOrderDto.bookId)\n    if (!book) {\n      throw new NotFoundException(\"book: doesn't exist\")\n    }\n\n    if (book.point > user.point)\n      throw new ForbiddenException(\"user doesn't have enough point\")\n\n    const netPoint = user.point - book.point\n\n    console.debug({ netPoint, userPoint: user.point, bookPoint: book.point })\n\n    const transaction = await this.prisma.$transaction([\n      this.prisma.user.update({\n        where: {\n          id: user.id,\n        },\n        data: {\n          point: netPoint,\n        },\n      }),\n      this.prisma.order.create({ data: createOrderDto }),\n    ])\n\n    return transaction.at(-1)\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      where: {},\n    })\n  }\n\n  findOne(id: number) {\n    return this.prisma.order.findUnique({\n      where: {\n        id,\n      },\n    })\n  }\n\n  update(id: number, updateOrderDto: Prisma.OrderUncheckedUpdateInput) {\n    return this.prisma.order.update({\n      where: { id },\n      data: updateOrderDto,\n    })\n  }\n\n  remove(id: number) {\n    return this.prisma.order.delete({\n      where: { id },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaClientExceptionFilter.html":{"url":"classes/PrismaClientExceptionFilter.html","title":"class - PrismaClientExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaClientExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma-client-exception/prisma-client-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n            \n                Implements\n            \n            \n                        GqlExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError, host: ArgumentsHost | GraphQLArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma-client-exception/prisma-client-exception.filter.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost | GraphQLArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpStatus } from '@nestjs/common'\nimport { BaseExceptionFilter } from '@nestjs/core'\nimport {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/client/runtime/library'\nimport { Prisma } from '@prisma/client'\nimport { Response } from 'express'\nimport { GqlExceptionFilter, GraphQLArgumentsHost } from '@nestjs/graphql'\n\n@Catch(PrismaClientUnknownRequestError, PrismaClientKnownRequestError)\nexport class PrismaClientExceptionFilter\n  extends BaseExceptionFilter\n  implements GqlExceptionFilter\n{\n  catch(\n    exception: Prisma.PrismaClientKnownRequestError | PrismaClientKnownRequestError,\n    host: ArgumentsHost | GraphQLArgumentsHost,\n  ) {\n    console.error(exception.message)\n    const ctx = host.switchToHttp()\n    const response = ctx.getResponse()\n    // const message = exception.message.replace(/\\n/g, '')\n    const message = exception.message\n    switch (exception.code) {\n      case 'P2002': {\n        // https://www.prisma.io/docs/reference/api-reference/error-reference\n        // unique constraint failed\n        // const status = HttpStatus.CONFLICT\n        const payload = {\n          statusCode: HttpStatus.BAD_REQUEST,\n          message: 'DB_ERROR:Unique input fields required',\n          error: message, // You can customize the error message based on your needs\n        }\n\n        console.error('DB:caught P2002 error')\n        response.status(HttpStatus.CONFLICT).json(payload) //FIXME\n        break\n      }\n      default:\n        // default 500 error code\n        // super.catch(exception, host)\n        console.error('DB Error:', exception.code)\n        response.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n          statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n          message: 'Database Error',\n          error: message, // You can customize the error message based on your needs\n        })\n        break\n    }\n  }\n}\n// https://www.prisma.io/blog/nestjs-prisma-error-handling-7D056s1kOop2\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common'\nimport { PrismaService } from './prisma.service'\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDb\n                            \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDb\n                        \n                    \n                \n            \n            \n                \ncleanDb()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common'\nimport { Prisma, PrismaClient } from '@prisma/client'\nimport { ConfigService } from '@nestjs/config'\nimport kleur from 'kleur'\nimport { format } from 'sql-formatter'\n\nconst logEvents: Prisma.LogDefinition[] = [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n\nlet DB_CONNECTED = false\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  // FIXME doesn't work for e2e OnModuleDestroy{\n  // https://docs.nestjs.com/fundamentals/lifecycle-events\n\n  constructor(config: ConfigService) {\n    const sslcert = '?sslcert=root.crt'\n    //https://www.prisma.io/docs/concepts/database-connectors/postgresql#configuring-an-ssl-connection\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL') + sslcert,\n        },\n      },\n      log: logEvents,\n    })\n\n    process.env.FORCE_COLOR = 'true'\n\n    // @ts-ignore\n    this.$on('query', async (e: any) => {\n      if (config.get('MODE') != 'dev') {\n        return\n      }\n\n      // const chalk = await import('chalk')\n      // console.log(chalk.yellow('Query: ') + chalk.green(e.query))\n      // console.log(chalk.yellow('Params: ') + chalk.cyan(JSON.stringify(e.params)))\n      // console.log(chalk.yellow('Duration: ') + chalk.magenta(`${e.duration}ms`))\n      const query = e.query\n\n      const formattedQuery = format(query, {\n        language: 'postgresql',\n        tabWidth: 2,\n        keywordCase: 'upper',\n        linesBetweenQueries: 2,\n        params: e.params || [],\n      })\n      console.log(kleur.yellow('Query: ') + kleur.green(formattedQuery))\n      console.log(kleur.yellow('Params: ') + kleur.cyan(JSON.stringify(e.params)))\n      console.log(kleur.yellow('Duration: ') + kleur.magenta(`${e.duration}ms`))\n    })\n  }\n  async onModuleInit() {\n    if (DB_CONNECTED) return\n\n    console.info(new Date(), 'connecting to the database')\n    await this.$connect()\n    await this.$executeRawUnsafe(\"SET timezone = 'Asia/Kolkata'\")\n\n    DB_CONNECTED = true\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    // @ts-ignore\n    this.$on('beforeExit', async () => {\n      await app.close()\n    })\n  }\n\n  cleanDb() {\n    return this.$transaction([\n      //tear down logic\n      this.user.deleteMany(),\n      this.book.deleteMany(),\n      this.order.deleteMany(),\n    ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestWithUser.html":{"url":"classes/RequestWithUser.html","title":"class - RequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceStatus.html":{"url":"classes/ServiceStatus.html","title":"class - ServiceStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ok: boolean, status: string, debug: any)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ok\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        debug\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ok\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OK'\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from './prisma/prisma.service'\n\nclass ServiceStatus {\n  constructor(\n    public ok: boolean = true,\n    public status: string = 'OK',\n    public debug: any = undefined,\n  ) {}\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly prisma: PrismaService) {}\n  getHello() {\n    return { message: 'app is up and running' }\n  }\n\n  async getHealth() {\n    let dbStatus = new ServiceStatus()\n\n    await this.prisma\n      .$connect()\n      .then(() => {\n        console.count('db connected successfully')\n      })\n      .catch((err) => {\n        console.error({ prisma: `connection failed due to ${err}` })\n        dbStatus.ok = false\n        dbStatus.status = 'connection failed'\n        dbStatus.debug = err\n      })\n    return {\n      db: dbStatus,\n      app: new ServiceStatus(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpPayload.html":{"url":"classes/SignUpPayload.html","title":"class - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateTime\n\n                    \n                \n                    \n                        \n                                Defined in src/graphql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthInput {\n    email: string;\n    password: string;\n}\n\nexport class AuthPayload {\n    access_token: string;\n}\n\nexport class SignUpPayload {\n    id: number;\n    email: string;\n    createdAt: DateTime;\n    updatedAt: DateTime;\n}\n\nexport abstract class IMutation {\n    abstract signUp(data: AuthInput): SignUpPayload | Promise;\n\n    abstract signIn(data: AuthInput): AuthPayload | Promise;\n}\n\nexport type DateTime = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/update-book.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateBookDto } from './create-book.dto'\n\nexport class UpdateBookDto extends PartialType(CreateBookDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/update-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                bookId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        bookId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/update-order.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateOrderDto } from './create-order.dto'\nimport { IsInt, IsOptional } from 'class-validator'\n\nexport class UpdateOrderDto extends PartialType(CreateOrderDto) {\n  @IsOptional()\n  @IsInt()\n  bookId?: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            walletId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        walletId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request, Response } from 'express'\n\nexport interface User {\n  walletId: number\n}\n\nclass RequestWithUser extends Request {\n  user: User\n}\nexport class GraphqlContext {\n  req: RequestWithUser\n  res: Response\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                editUser\n                            \n                            \n                                    \n                                    \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Patch()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Injectable,\n  Patch,\n  UseGuards,\n} from '@nestjs/common'\nimport { JwtGuard } from '../auth/guard'\nimport { GetUser } from '../auth/decorator'\nimport { User } from '@prisma/client'\nimport { EditUserDto } from './dto'\nimport { UserService } from './user.service'\n\n@Injectable()\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @UseGuards(JwtGuard)\n  @Get('me')\n  getMe(@GetUser('userId') user: User) {\n    return this.userService.findOne(user.id)\n  }\n\n  @UseGuards(JwtGuard)\n  @Patch()\n  editUser(@GetUser('userId') userId: number, @Body() dto: EditUserDto) {\n    //needs service\n    // we will get something in api request due to whitelist:true\n    return this.userService.editUser(userId, dto)\n  }\n\n  @UseGuards(JwtGuard)\n  @Delete()\n  async deleteUser(@GetUser('userId') userId: number) {\n    return {\n      message: 'user deleted',\n      user: await this.userService.deleteUser(userId),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserController\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserController } from './user.controller'\nimport { UserService } from './user.service'\nimport { AuthModule } from '../auth/auth.module'\nimport { PrismaModule } from '../prisma/prisma.module'\n\n@Module({\n  imports: [AuthModule, PrismaModule],\n  controllers: [UserController],\n  providers: [UserService, UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { EditUserDto } from './dto'\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  findOne(userId: number) {\n    return this.prisma.user.findUnique({\n      where: {\n        id: userId,\n      },\n    })\n  }\n\n  async editUser(userId: number, dto: EditUserDto) {\n    console.log({ userId, dto })\n    const user = await this.prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: {\n        ...dto,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n\n  async deleteUser(userId: number) {\n    const user = await this.prisma.user.delete({\n      where: {\n        id: userId,\n      },\n    })\n\n    delete user.hash\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            GraphqlContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            class\n            RequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.dto.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            class\n            ServiceStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUserGraphql\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            class\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/book/book.controller.ts\n            \n            controller\n            BookController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/book/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/book/entities/book.entity.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            interface\n            Flags\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            function\n            extractFlags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            args\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            definitionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generate-typings.ts\n            \n            variable\n            flags\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            AuthPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            IMutation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/graphql.ts\n            \n            class\n            SignUpPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/order/dto/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/prisma-client-exception/prisma-client-exception.filter.ts\n            \n            class\n            PrismaClientExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            DB_CONNECTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            variable\n            logEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/edit-user.dto.ts\n            \n            class\n            EditUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            injectable\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.7.5\n        \n            @nestjs/apollo : ^12.0.7\n        \n            @nestjs/cache-manager : ^2.0.1\n        \n            @nestjs/common : ^10.0.5\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.5\n        \n            @nestjs/graphql : ^12.0.8\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.5\n        \n            @solana/web3.js : ^1.78.0\n        \n            argon2 : ^0.30.3\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            graphql : 16.7.1\n        \n            graphql-iso-date : ^3.6.1\n        \n            graphql-subscriptions : 2.0.0\n        \n            graphql-tools : ^9.0.0\n        \n            joi : ^17.9.2\n        \n            kleur : ^4.1.5\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-nestjs-graphql : ^18.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : 7.8.1\n        \n            sql-formatter : ^12.2.3\n        \n            ts-morph : ^19.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            extractFlags   (src/.../generate-typings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractFlags\n                        \n                    \n                \n            \n            \n                \nextractFlags(args)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\napi.bookstore.nas\nDescription\nAPI Server built using , TypeScript, Prisma, Graphql and PostgreSQL.\nBuilt with ❤️on top of\n\n Typescript\n NestJS\n Prisma\n Passport.js\n Graphql:Schema First\n PostgreSQL\n\nFunctional specs\nAPI allows authenticated to users to create and manage orders\n\nUser SignUp & SignIn\nCRUD Orders\nInspect Items\n\nTechnical methodologies followed\n\nModular architecture: Business Logic & Auth handled in separate modules, separating\nconcerns.\nHTTP requests are handled by Controllers\n API documentation using nest/swagger module \nBusiness logic is implemented in Services\nDatabase interactions are handled using Prisma\nValidation using NestJS Pipes\nData Transfer Object(DTO) pattern for transferring data between layers\nConfiguration management using .env files for development, test & prod configs\nAuthentication / Authorization, Event ownership by users\nPassportJS, JWT tokens, Password hashing, salts\nUnit tests using Jest\nSupertest for E2E testing\n\nTechnical documentation using Compodoc\nAs NestJS is heavily inspired by Angular, we can generate the documentation about project\nstructure modules, controllers, services etc. I have generated the docs.\nFind 'em here - https://jsFame.github.io/api.bookstore.nas/\nInstallation\nnpm install -g pnpm\npnpm installRunning the app\nPrerequisite for running the app in any mode - dev/test/prod\n\nCopy .env.example with .env\nFill in the env vars in .env\n\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covLicense\nThis repo is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Hiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\nOrderModule -->\n\nBookService->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nUserService\n\nUserService\n\nOrderModule -->\n\nUserService->OrderModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUserController\n\nUserController\n\nUserModule -->\n\nUserController->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : Web2 backend of bookstore.nas\n        \n            Homepage : https://github.com/jsFame/api.bookstore.nas\n        \n            Bugs : https://github.com/jsFame/api.bookstore.nas/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/jsFame/api.bookstore.nas\n        \n            Author : laciferin@gmail.com\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateTime   (src/.../graphql.ts)\n                        \n                        \n                            Nullable   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            args   (src/.../generate-typings.ts)\n                        \n                        \n                            DB_CONNECTED   (src/.../prisma.service.ts)\n                        \n                        \n                            definitionsFactory   (src/.../generate-typings.ts)\n                        \n                        \n                            envFile   (src/.../app.module.ts)\n                        \n                        \n                            flags   (src/.../generate-typings.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            GetUserGraphql   (src/.../get-user.decorator.ts)\n                        \n                        \n                            logEvents   (src/.../prisma.service.ts)\n                        \n                        \n                            mode   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generate-typings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        args\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.argv.slice(2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        definitionsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLDefinitionsFactory()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Flags\n\n                    \n                \n                \n                    \n                        Default value : extractFlags(args)\n                    \n                \n\n\n        \n    \n\n    src/prisma/prisma.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.LogDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    emit: 'event',\n    level: 'query',\n  },\n  {\n    emit: 'stdout',\n    level: 'error',\n  },\n  {\n    emit: 'stdout',\n    level: 'info',\n  },\n  {\n    emit: 'stdout',\n    level: 'warn',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.env'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MODE\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest()\n\n    if (data) return request.user[data]\n\n    return request.user\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetUserGraphql\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, context: ExecutionContext) => {\n    const ctx: GraphqlContext = GqlExecutionContext.create(context).getContext()\n\n    const { user } = ctx.req\n\n    if (data) return user[data]\n\n    return user\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
